id,instance,class_type,number_instance,all_number_instance,contains_code,only_special_characters
14905_ins,"Identify any errors in the following Python code.

def say_hello(name):
    print(""Hello %s!"" % name)

say_hello(""John"")",ins,False,False,True,False
36891_ins,"Given the code snippet, identify and fix any syntax error:

def findSum(a, b):
    return a+b",ins,False,False,True,False
17_inp,"def factorialize(num):
  factorial = 1
  for i in range(1, num):
    factorial *= i
  
  return factorial",inp,False,False,True,False
1299_inp,"# main.py

def hello():
    print('Hello World!')

if __name__ == '__main__':
    hello()",inp,False,False,True,False
1600_inp,"def add_numbers(x,y):
    return x+y

add_numbers(2)",inp,False,False,True,False
3070_inp,"```python
def myFunc(x):
    if (x == 0 {
        return 0
    } else {
        return x * 2
    }
```",inp,False,False,True,False
3583_inp,"int count = 0;

for(int i = 0; i < array.length; i++){
  if(array[i] == 0){
    count++;
  }
}",inp,False,False,True,False
3814_inp,"def sort_numbers(arr):
    for i in range(len(arr)): 
        for j in range(i): 
            if arr[i] < arr[j]: 
                arr[i], arr[j] = arr[j], arr[i]
    return arr",inp,False,False,True,False
3885_inp,"def linearSearch(arr, n, x): 
    for i in range (0, n): 
        if (arr[i] == x): 
            return i 
    return -1",inp,False,False,True,False
5003_inp,"def add(a, b):
    return a + b",inp,False,False,True,False
5090_inp,"Table:

    A    B   C
   Joe  23  USA",inp,False,False,True,False
5207_inp,"if (x % 2 == 0) {
    print(""even"")
}",inp,False,False,True,False
5295_inp,"def quicksort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)",inp,False,False,True,False
5523_inp,"Input: An array A of N integers A[1], A[2], …, A[N]
Output: A new sorted array B of N integers B[1], B[2], …, B[N]

For i = 2 to N
    j = i
    while j > 1 and A[j] < A[j-1]
        swap A[j] and A[j-1]
        j = j-1",inp,False,False,True,False
6290_inp,"Code:
for i in range(4):
    print(""The number is "" + i)

Output:
The number is 0
The number is 1
The number is 2
The number is 3",inp,False,False,True,False
6292_inp,"Program:
def calculate_sum(numbers):
    sum = 0
    for n in numbers:
        sum = n + n
    return sum

print(calculate_sum([1, 2, 3]))

Expected output: 6",inp,True,False,True,False
6427_inp,"def calculate_data(a, b, c):
    result = []
    for i in range(b):
        result.append(a + c[i])
    return result",inp,False,False,True,False
6428_inp,"def checkData(data):
    if data[0] == ""A"" and 
        data[1] == ""B"" and 
        data[2] == ""C"":
        return True
    else:
        return False",inp,False,False,True,False
6472_inp,"def append_to_list(lst, element):
    lst.append(element)
    return lst",inp,False,False,True,False
6663_inp,"def salutation(name):
    if name == 'bob':
        salutation = 'Hello'
    else:
        salutation = 'Good bye'
        print(saluation)",inp,False,False,True,False
6878_inp,"def my_function(x):
    x += 10
return x",inp,False,False,True,False
7024_inp,"# Python 3 program to validate 
# IPv4 address 

# Function to validate a given IPv4 address. 
def validate_IPv4(s): 
    l = s.split(""."") 
    if len(l) != 4: 
        return False
    for x in l: 
        if not x.isdigit() or int(x)>255: 
            return False
    return True

# Driver Code 
s = ""192.168.1.2""
if validate_IPv4(s): 
    print(""valid"") 
else: 
    print(""Invalid"")",inp,False,False,True,False
7272_inp,"""""""
def process_input(data):
    result = ''
    # Process the data
    
    return result
""""""",inp,False,False,True,False
7350_inp,"for i in range(10):
    x += 1",inp,False,False,True,False
7375_inp,"var sum = 0;
for (var i = 1; i < 10; i++) {
  if ( i % 2 === 0 ) {
    sum += i;
  }
}",inp,False,False,True,False
7674_inp,"{""People"": [
    {""Name"": ""John"", ""Age"": 20}, 
    {""Name"": ""Jill"", ""Age"": 27}
]}",inp,False,False,True,False
7762_inp,"for i in range (10):
    print (i)",inp,False,False,True,False
8584_inp,"num_list = [1, 2, 3, 4, 5]
for number in num_list:
  if number < 3:
    print(""smaller than 3"")
  elif number == 3:
    print(""equal to 3"")  
  else:
    print(""larger than 3"")",inp,True,False,True,False
8774_inp,"for i in range(50): 
    print(i)",inp,False,False,True,False
9010_inp,"The script takes two arguments, the required number of players in the game and the number of games played. It then produces a statement to report on the average number of players.

import sys
 
if len(sys.argv) == 3:
    players = int(sys.argv[1])
    games = int(sys.argv[2]):

average = str( players / games)
print(""The average number of players was: "" + average)",inp,False,False,True,False
9046_inp,"public class HelloWorld {
   public static void main(String[] args) {
      System.out.println(""Hello, World"");
   }
}",inp,False,False,True,False
9238_inp,"arr = [1,2,3,4,5]
for num in arr:
    print(num*2)",inp,True,False,True,False
9585_inp,"def add_two_numbers(a, b):
    total = a + b + 1
    return total",inp,False,False,True,False
10337_inp,"def increment(x):
    x += 1
    return x
y = 4
y = increment(y)",inp,True,False,True,False
10582_inp,"public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}",inp,False,False,True,False
10686_inp,"#include <stdio.h>
 
int main()
{
   int i = 1;
   for ( i = 1; i <= 5; i++ )
   {
      if ( i%2 == 0)
      {
          printf(""%d\n"", i);
          break;
      }
   }
 
   return 0;
}",inp,False,False,True,False
10688_inp,"for x in range(0, 10):
    print('Hello World')",inp,False,False,True,False
11360_inp,"for (i=0; i<10; i++) {
    console.log(""Hello World"");
}",inp,False,False,True,False
11552_inp,"for (int i=0; i < N; i++)
  for (int j=0; j < N; j++)
    A[i][j] = A[j][i];",inp,False,False,True,False
11656_inp,"def add(a, b):
    return a - b",inp,False,False,True,False
12224_inp,"def multiply(a, b):
    c = a * b
    return c",inp,False,False,True,False
12514_inp,"Program: 
def add_two(x):
    return x + 2

Input: 5",inp,False,False,True,False
12585_inp,"for (i = 0; i < 10; i++)
{
    console.log(i);
}",inp,False,False,True,False
12788_inp,"def encrypt(message, key):
  encrypted_message = """"
  for i in range(len(message)):
    encrypted_message += chr(ord(message[i]) + key)
 
  return encrypted_message",inp,False,False,True,False
12839_inp,"def square(x):
    return x**2",inp,False,False,True,False
12945_inp,"def checkPalindrome(arg):
   if arg == arg[::-1]:
      return True
   else:
      return False",inp,False,False,True,False
13702_inp,"The paper is about the significance of animals in human culture.

Animals play an important role in human cultures around the world:
              1. Animals are a source of food, clothing, and shelter.
              2. Animals are an integral part of many religious and spiritual beliefs. 
             3. Animals have served as a source of companionship and comfort for people throughout history. 
References:
Armstrong, E. (2017). Animal-human relationships in history. Animal Behavior and Cognition, 4(2), 79-81.",inp,False,False,True,False
13903_inp,"<div class=""primary"">
    <p>Sample text.</p>
</div>",inp,False,False,True,False
14231_inp,"user_input = int(input(""Please enter a number: ""))

if (user_input > 0):
    print(""positive"")
elif (user_input == 0):
    print(""neutral"")
else:
    print(""negative"")",inp,False,False,True,False
14543_inp,"s = 0
for i in range(1,n):
     for j in range(1,i*i):
         if j % i == 0:
              s += j",inp,False,False,True,False
14544_inp,"def bubble_sort(arr):
    n = len(arr)
    
    # Traverse through all array elements
    for i in range(n):
 
        # Last i elements are already in place
        for j in range(0, n-i-1):
 
            # traverse the array from 0 to n-i-1
            # Swap if the element found is greater
            # than the next element
            if arr[j] > arr[j+1] :
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr",inp,False,False,True,False
14740_inp,"<html>
    <head>
        <title>Sample Site</title>
        <meta name=""description"" content=""Sample site for testing purposes"">
        <meta name=""keywords"" content=""testing, sample"">
    </head>",inp,False,False,True,False
14743_inp,"function sortNumbers(arr){
    arr.sort(function(a, b) {
        return a - b;
    });
    return arr;
}",inp,False,False,True,False
14744_inp,"A = [[2, 3],
     [1, 5]]

B = [[1, 4], 
     [2, 6]]",inp,True,False,True,False
15315_inp,"class Student(): 
    def __init__(self, name, age, grade): 
        self.name = name 
        self.age = age 
        self.grade = grade",inp,False,False,True,False
15633_inp,"def add (a, b):
    return a + b",inp,False,False,True,False
15874_inp,"program.py
def add_two_numbers(a, b):
    return a + b",inp,False,False,True,False
16926_inp,"def factorial(n):
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result",inp,False,False,True,False
18050_inp,"def function(input):
  if (input == 0):
    return 0
  else:
    for i in range(input):
      return i",inp,False,False,True,False
18350_inp,"# Complete the following code snippet

def process_data(data):
    for x in data:
        _______________
        _______________
        _______________",inp,False,False,True,False
18643_inp,"int mystery_function(int x, int y)
{
  if (x == 0 && y == 0)
    return 0;
  else if (x == 0 || y == 0)
    return 1;
  else 
    return x + y;
}",inp,False,False,True,False
18884_inp,"Code 1:
int count = 0;

for (int i = 0; i < array.length; i++) {
   if (array[i].equals(""x"")) {
      count++;
   }
}
Code 2:
int count = 0;

foreach (String item in array) {
  if (item == ""x"") {
    count++;
  }
}",inp,False,False,True,False
19737_inp,"def product():
    # add your code here",inp,False,False,True,False
19826_inp,"public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}",inp,False,False,True,False
19863_inp,"def check_prime(num):
    for n in range(2, num):
        if num % n == 0:
            return False
    return True",inp,False,False,True,False
20194_inp,"for(int i=0; i <= n; i++) {
  int x = A[i];
  for(int j=0; j < n; j++) {
    if(x == A[j]) {
      A[j] = -1;
    }
  }
}",inp,False,False,True,False
21413_inp,"Matrix A =  [[1,2], 
              [3,4]] 
Matrix B =  [[5,6],
              [7,8]]",inp,True,False,True,False
21756_inp,"def get_highest_score(scores):
    return max(scores)

scores = [5, 7, 8, 10]
highest_score = get_highest_score()",inp,True,False,True,False
21826_inp,"def leap_year(year): 
    if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0: 
        return True 
    else: 
        return False",inp,False,False,True,False
21844_inp,"SELECT first_name, last_name, SUM(sales) 
    FROM employees
    GROUP BY first_name, last_name
    ORDER BY 3 DESC;",inp,False,False,True,False
22238_inp,"<html>
   <head>
      <title>Test</title>
   </head>
   <body>
      <p>Welcome to my website</p>
   </body>
</html>",inp,False,False,True,False
22285_inp,"int main(int argc, char **argv) 
{
    int a;
    a = 5;
    printf(""a is %d\n"", a);
    return 0;
}",inp,False,False,True,False
22888_inp,"def binsearch(arr, x):
    start = 0
    end = len(arr) - 1
    while start <= end:
        mid = (start + end)//2
        if arr[mid] == x:
            return mid
        elif arr[mid] > x:
            end = mid - 1
        else:
            start = mid + 1
    return none",inp,False,False,True,False
24096_inp,"def sumArray(arr): 
    sum = 0
    for i in range(0, len(arr)): 
        sum = sum + arr[i] 
    return sum",inp,False,False,True,False
24679_inp,"def my_function(x, y):
    return x + y
z = my_function(2, 3)",inp,False,False,True,False
25639_inp,"def add_two_numbers(a, b):
    return a + b",inp,False,False,True,False
25942_inp,"def someFunction():
    print('Hello')",inp,False,False,True,False
25998_inp,"<html>
  <head>
    <title>My web page</title>
  </head>
  <body>
    <p>This is my web page.</p>
  </body>
</html>",inp,False,False,True,False
26016_inp,"def greet_to():
    print(""Hello!"")",inp,False,False,True,False
26209_inp,"def quick_sort(arr): 
    if len(arr) <= 1: 
        return arr 
    else: 
        return quick_sort([x for x in arr[1:] if x < arr[0]]) + [arr[0]] + quick_sort([x for x in arr[1:] if x >= arr[0]])",inp,False,False,True,False
26654_inp,"```python
if x < y
    print('x is smaller than y')
  else:
    print('x is larger than y')
```",inp,False,False,True,False
26657_inp,"```python
nums = [4, 8, 9, 15]
for num in range(1, nums):
    print(num)
```",inp,True,False,True,False
26947_inp,"def calculate_distance(x1, y1, x2, y2):
    return((x2-x1)**2 + (y2-y1)**2)**0.5",inp,False,False,True,False
27208_inp,"def sum_squares(num: int)
    total = 0
    For i in num
        total = total + i * i
    return total",inp,False,False,True,False
27539_inp,"def get_area(length, width):
    # TODO: calculate the area and return it
    print(""length: %d\nwidth: %d"" % (length, width))
    area = length * width",inp,False,False,True,False
27566_inp,"{
  ""items"": [
    {
      ""name"": ""iPhone"",
      ""price"": 500
    },
    {
      ""name"": ""iPad"",
      ""price"": 800
    }
  ]
}",inp,False,False,True,False
27671_inp,"def binary_search(list, target):
  lower = 0 
  upper = len(list) - 1
    
  while lower <= upper: 
    mid = (lower + upper) // 2  # Floor Division
    guess = list[mid]
    if guess == target:
      return mid
    if guess > target:
      upper = mid - 1
    else: 
      lower = mid + 1
 
  return None",inp,False,False,True,False
28073_inp,"def power_of_two(x):
    if x > 0:
        return x * power_of_two(x-1)
    else:
        return 1",inp,False,False,True,False
28259_inp,"function greetUser(name) {
    alert(`Hello, ${name || 'there'}!`);
  }",inp,False,False,True,False
28384_inp,"# Declare a list of numbers
nums = [12, 10, 32, 3, 66, 17, 42, 99, 20]

# Declare new variables
newlist = []

# Iterate nums and add numbers to newlist
for i in nums:
    if i % 2 == 0:
        newlist.append(i)

print(newlist)",inp,True,False,True,False
28386_inp,"nums = [3, 4, 9, 5]

# Iterate over nums
for num in nums:
        # Check if num is even
        if num % 2 == 0:
                # Print out num
                print(num)",inp,True,False,True,False
28800_inp,"for (i = 0; i < 10; i++)
    printf (""%d"", i);
    i++;",inp,False,False,True,False
29095_inp,"```
for i in range(10):
  if i == 5:
    break
  print(i)
```",inp,False,False,True,False
29162_inp,"def tweet_id_extraction(tweet):
    # TODO: Explain what is going on here",inp,False,False,True,False
30177_inp,"if (x > 10)
    print(x);
else
    print (y);",inp,False,False,True,False
30866_inp,"if len(username) <= 8:
    print(""Username too short"")",inp,False,False,True,False
31100_inp,"public class Program {

    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }

}",inp,False,False,True,False
31110_inp,"Code:
def f(x):
    return x * 3",inp,False,False,True,False
31335_inp,"<html>
  <head>
   <title>
      Web Page Optimization
   </title>
  </head>
  <body>
    <p>
      This is a web page that needs to be optimized.
    </p>
  </body>
</html>",inp,False,False,True,False
32046_inp,"<html>
    <h1>This is a heading</h1>
    <p>This is a paragraph.</p>
</html>",inp,False,False,True,False
32438_inp,"def add (x, y): 
    return x + y",inp,False,False,True,False
33105_inp,"# Search a list and print all the odd numbers
list = [1,2,3,4,5,6,7,8]
for i in list:
    if i % 2 != 0:
        print i",inp,True,False,True,False
33288_inp,"def fizz_buzz(n):
    for i in range(1, n+1):
        if i % 3 == 0 and i % 5 == 0:
            print(""FizzBuzz"")
        elif i % 3 == 0:
            print(""Fizz"")
        elif i % 5 == 0:
            print(""Buzz"")
        else:
            print(i)",inp,False,False,True,False
33317_inp,"arr = [5, 10, 15]
for i, j in enumerate(arr):
    arr[i] = j*2",inp,True,False,True,False
34113_inp,"def buy_book(bookID, shippingAddress, paymentMethod):
    """"""Purchase a book with given ID and ship it to the address provided""""""
    # TODO: Reject payment if the payment method is ""cash""
    # TODO: Calculate shipping cost using the shipping address
    print(""Book purchased"")",inp,False,False,True,False
35011_inp,"def add_numbers(a,b):
    return a",inp,False,False,True,False
35059_inp,"<div>
    <p>This is a paragraph.</p>
</div>",inp,False,False,True,False
35231_inp,"{
  ""name"": ""John Doe"",
  ""age"": 30,
  ""hobbies"": [
    ""reading"",
    ""running""
  ],
  ""is_married"": false
}",inp,False,False,True,False
35288_inp,"for i in range(10):
    print('Hello World!')",inp,False,False,True,False
35609_inp,"Name: John Smith
Age: 32
Occupation: Painter

<template>

<html>
  <head>
    <title>Profile page</title>
  </head>
  <body>
    <h1> __________________ </h1>
    <p><b> Name:</b>  __________________</p>
    <p><b> Age:</b>  __________________</p>
    <p><b>Occupation:</b>  __________________</p>
  </body>
  </html>",inp,False,False,True,False
36173_inp,"def add_three(x):
    return x + 3

result = add_three(4)",inp,False,False,True,False
36265_inp,"def print_word(word):
  if word[0] == ""#"": 
    print(word)
  else: 
    print(""#+word)",inp,False,False,True,False
36360_inp,"age = 50
if age > 70:
    print(""You can get a senior discount"")
else if age > 65:
    print(""You can get a discounted rate"")
else:
    print(""Full price"")",inp,False,False,True,False
36662_inp,"def find_smallest_multiple(n):
    x = n
    while True:
        if isDivisible(x, n):
            return x
        x += n",inp,False,False,True,False
36664_inp,"data = {
  ""A"": [1, 2, 3],
  ""B"": [4, 5, 6],
  ""C"": [7, 8, 9]
}

def sum_dict_values(d):
  total = 0
  for v in d.values():
    total += v
  return total",inp,True,False,True,False
36817_inp,"for i in range(N):
    for j in range(N-1):
        sum += A[i][j]",inp,False,False,True,False
37377_inp,"<html>
    <head>
        <title>Hello World</title>
    </head>
    <body>
        <p>This is a paragraph</p>
        <div>This is a div</div>
    </body>
</html>",inp,False,False,True,False
37455_inp,"def calculate_sum(numbers):
    sum = 0
    for num in numbers:
        sum += num
    return sum",inp,False,False,True,False
38230_inp,"def count_vowel(str):
  vowels=['a','e','i','o','u']
  cnt=0
  for alph in str:
    if alph in vowels:
        cnt+=1
return cnt",inp,False,False,True,False
38562_inp,"<html>
  <head>
    <title> CSS Demo </title>
  </head>
  <body>
    <h1> Welcome! </h1>
    <p> This is a CSS demo. </p>
   </body> 
</html>",inp,False,False,True,False
38767_inp,"class A { 
    var name = """" 
    func printName() { 
      print(name) 
    } 
  }",inp,False,False,True,False
40706_inp,"grade = A

if (grade == A):
    print(""Excellent"")",inp,False,False,True,False
40800_inp,"def add_two_numbers(x, y):
    x + y",inp,False,False,True,False
40802_inp,"def calculate_area(length, width):
    return length * width",inp,False,False,True,False
40803_inp,"def say_hello():
    print(""Hello world!"")
    print(""Goodbye world"")",inp,False,False,True,False
40936_inp,"<div class=""header"">
    <div class=""box"">
        <h1>Header</h1>
    </div>
    <div class=""box"">
        <h2>Sub-header</h2>
    </div>
</div>",inp,False,False,True,False
41161_inp,"#include <iostream>

int main() {
    std::cout << ""Hello World!"";
    return 0;
}",inp,False,False,True,False
41704_inp,"x = 5
y = 10
if x > 3 and y > 5:
    print(""True"")",inp,True,False,True,False
41804_inp,"def greet(name):
    """"""Print a greeting to the name provided.""""""
    # TODO: capitalize the name
    print(""Hello, "" + name + ""!"")",inp,False,False,True,False
44187_inp,"int main()
{
    for(int i = 0; i < 10; i >
    {
        std::cout << ""Hello World! \n;
    }
    return 0;
}",inp,False,False,True,False
45513_inp,"for(int i=0;i<=n;i++){
    if(i%2==0){
        System.out.println(i);
    }
}",inp,False,False,True,False
45571_inp,"def quick_sort(arr):
    if qui(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less = [i for i in arr[1:] if i <= pivot]
        greater = [i for i in arr[1:] if i > pivot]
        return quick_sort(less) + [pivot] + quick_sort(greater)",inp,False,False,True,False
45620_inp,"<root>
    <data>
        <item id=""1"">
            <name>Sample data</name>
            <type>Text</type>
            <value>123</value>
        </item>
    </data>
</root>",inp,False,False,True,False
45627_inp,"def greet_customer():
    return ""Welcome!""",inp,False,False,True,False
45773_inp,"<note>
    <to>John</to>
    <from>Jane</from>
    <heading>Greetings</heading>
    <body>Hello!</body>
</note>",inp,False,False,True,False
46677_inp,"a = ""Hey""

b = ""bonjour""

if a == b:
    print(""Hey"")",inp,False,False,True,False
46969_inp,"for x in range(10):
    print x",inp,False,False,True,False
46985_inp,"def get_areas():
    areas = []
    for x in range(4):
        for y in range(4):
            area = x * y
            areas.append(area)
    return areas",inp,False,False,True,False
47331_inp,"def recommend_pizza(toppings):
    if ""Veggies"" in toppings:
        print(""I recommend a Veggie Pizza!"")
    if ""Cheese"" in toppings:
        print(""I recommend a Cheese Pizza!"")",inp,False,False,True,False
47333_inp,"for (int i=0; i<n; ++i):
    print(i*i)",inp,False,False,True,False
47428_inp,"<html>
    <head>
        <title>Sample HTML page</title>
    </head>
    <body>
        <h1>Title of the page</h1>
        <p>This is a sample paragraph of text.</p>
        <ul>
            <li>List item 1</li>
            <li>List item 2</li>
        </ul>
    </body>
</html>",inp,False,False,True,False
48929_inp,"n = 10
while n > 0:
    print(n)
    n = n - 1",inp,False,False,True,False
49328_inp,"for(i=0; i < arr.length; i++) {
    if (arr[i] > 10) {
        console.log(arr[i]);
    }
}",inp,False,False,True,False
49584_inp,"Data: {
    ""January"": 20,
    ""February"": 15,
    ""March"": 10,
    ""April"": 25,
    ""May"": 30
    }",inp,False,False,True,False
49592_inp,"Data: {
    ""January"": 20,
    ""February"": 15,
    ""March"": 10,
    ""April"": 25,
    ""May"": 30
    }",inp,False,False,True,False
50121_inp,"public class Demo {
    public static void main(String[] args) {
        int a = 10
        int b= 10
        System.out.println(""Sum of both numbers: "" + a + b);
    }
}",inp,False,False,True,False
50666_inp,"{
  ""1"": {
    ""Name"": ""John"",
    ""Age"": 20
  },
  ""2"": {
    ""Name"": ""Jane"",
    ""Age"": 25
  },
  ""3"": {
    ""Name"": ""Nancy"",
    ""Age"": 30
  },
  ""4"": {
    ""Name"": ""Alex"",
    ""Age"": 35
  }
}",inp,False,False,True,False
50697_inp,"while (counter < limit):
    print (counter)
    counter += 5",inp,False,False,True,False
50741_inp,"Code snippet 1:
def hello_world():
    print('Hello, World!')

Code snippet 2:
if __name__ == '__main__':
    _MERGE_",inp,False,False,True,False
50875_inp,"function printHello() {
    consoel.log('Hello')
}",inp,False,False,True,False
51128_inp,"def add_numbers(num_1, num_2):
    return num_1 + num_2",inp,False,False,True,False
51591_inp,"Matrix A of size 2x3:
A = [[1, 2, 3],
     [4, 5, 6]]",inp,True,False,True,False
51642_inp,"matrix = [[1, 2, 3], 
          [2, 3, 4], 
          [3, 4, 5]]",inp,True,False,True,False
51774_inp,"[
    {
        ""name"": ""John Doe"",
        ""age"": 25,
        ""location"": ""New York City""
     },
     {
        ""name"": ""Jane Doe"",
        ""age"": 28,
        ""location"": ""Los Angeles""
     }
]",inp,False,False,True,False
51838_inp,"def calculate_total_sum(list): 
  sum = 0
  for element in list: 
    sum += element 
  return sum",inp,False,False,True,False
17_out,"def factorialize(num):
  factorial = 1
  for i in range(num, 0, -1):
    factorial *= i
  
  return factorial",out,False,False,True,False
146_out,"def factorial(n):
    if n == 0:
        return 1
    return n * factorial(n-1)",out,False,False,True,False
147_out,"def toUpperCase(str):
    return str.upper()",out,False,False,True,False
149_out,"def sqrt(n):
    low = 0
    high = n
    
    while low <= high:
        mid = (low + high) // 2
        if mid * mid == n:
            return mid
        elif mid * mid < n:
            low = mid + 1
        else:
            high = mid - 1
            
    return low - 1",out,False,False,True,False
150_out,"def reverse(head): 
    prev = None
    cur = head 

    while cur:
        next = cur.next
        cur.next = prev 
        prev = cur 
        cur = next
    head = prev
    
    return head",out,False,False,True,False
152_out,"def maxProfit(prices):
    min_price = float('inf')
    max_profit = 0

    for price in prices:
        min_price = min(min_price, price) 
        profit = price - min_price
        max_profit = max(max_profit, profit)

    return max_profit",out,False,False,True,False
153_out,"def isRotation(s1, s2):
    if len(s1) != len(s2):
        return False

    s3 = s1 + s1 
    return s3.find(s2) != -1",out,False,False,True,False
342_out,"def mean(lst): 
    return sum(lst) / len(lst)",out,False,False,True,False
347_out,"def alphabetic_sort(lst): 
    return sorted(lst, key=str.lower)",out,False,False,True,False
349_out,"def is_anagram(s1, s2): 
    s1 = sorted(s1.lower()) 
    s2 = sorted(s2.lower()) 
    return s1 == s2",out,False,False,True,False
483_out,"def count_unique_chars(string):
  char_dict = {}
  for char in string:
    if char in char_dict:
      char_dict[char] += 1
    else:
      char_dict[char] = 1
  return len(char_dict)

print(count_unique_chars(""Butterflies""))
# Output: 9",out,False,False,True,False
486_out,"def lcm(a, b):
  if a > b:
    greater = a
  else:
    greater = b
  while(True):
    if((greater % a == 0) and (greater % b == 0)):
      lcm = greater
      break
    greater += 1
  return lcm

print(lcm(15, 18))
# Output: 90",out,False,False,True,False
681_out,"def F2C(F):
    C = (F-32)*(5/9)
    return C",out,False,False,True,False
1065_out,"""""""
Function to reverse a list of numbers
""""""

def reverse_list(input_list):
    reverse_list = input_list.copy()
    reverse_list.reverse()
    return reverse_list

if __name__ == '__main__':
    l = [1, 2, 3, 4, 5]
    print(reverse_list(l))
    # Output: [5, 4, 3, 2, 1]",out,True,False,True,False
1069_out,"""""""
Function to count character frequency in a string
""""""

function countCharacterFrequency(string) {
    let freqObj = {};
    for (let c of string) {
        if (freqObj[c]) {
            freqObj[c]++;
        } else {
            freqObj[c] = 1;
        }
    }
    return freqObj;
}

if __name__ == '__main__':
    str = ""hello world"";
    console.log(countCharacterFrequency(str)); 
    // Output: { h: 1, e: 1, l: 3, o: 2, w: 1, r: 1, d: 1 }",out,False,False,True,False
1074_out,"""""""
Script to convert Celsius to Fahrenheit
""""""

def celsius_to_fahrenheit(celsius):
    return celsius * 9/5 + 32

if __name__ == '__main__':
    celsius = 37
    print(celsius_to_fahrenheit(celsius))
    # Output: 98.6",out,False,False,True,False
1225_out,"import random
def random_array(n):
    arr = []
    for i in range(n):
        arr.append(random.randint(0, 100))
    return arr",out,False,False,True,False
1230_out,"def find_max(lst):
    max_num = 0
    for num in lst:
        if num > max_num:
            max_num = num
    return max_num",out,False,False,True,False
1375_out,"def isAnagram(string1, string2): 
  
    # Make sure both strings are of the same length 
    if len(string1) != len(string2): 
        return False
  
    # Dictionary to store frequency of characters in string1 
    count = [0] * 26
  
    # For each character in string1 increment its frequency 
    for i in range(len(string1)): 
        count[ord(string1[i]) - ord('a')] += 1
  
    # For each character in string2 decrement its frequency 
    for i in range(len(string2)): 
        count[ord(string2[i]) - ord('a')] -= 1
  
    # If any frequency reaches a negative value, 
    # then strings can't be anagrams 
    for i in range(len(count)): 
        if count[i] < 0: 
            return False
  
    # If all frequencies are zero, string1 and string2 
    # are anagrams of each other 
    return True",out,False,False,True,False
1402_out,"def sum_numbers(x, y):
    """"""
    Returns the sum of two numbers.
    
    Parameters
    ----------
    x : int
        The first number
    y : int
        The second number

    Returns
    -------
    int
        The sum of the two numbers
    """"""
    return x + y",out,False,False,True,False
1480_out,"for i in range(1,11):
    print(i)",out,True,False,True,False
1608_out,".header {
    font-size: 18px;
}",out,False,False,True,False
1613_out,"def insert(node, data): 
    # If the tree is empty, return a new node 
    if node is None: 
        return Node(data) 
  
    # Otherwise, recur down the tree
    if data < node.data: 
        node.left = insert(node.left, data) 
    else: 
        node.right = insert(node.right, data) 
  
    # return the (unchanged) node pointer 
    return node 
  
# Function to search a given data 
def search(node, data): 
      
    # Base Case: if root is None or key is present at root 
    if node is None or node.data == data: 
        return node 
  
    # Key is greater than root's key 
    if node.data < data: 
        return search(node.right, data) 
  
    # Key is smaller than root's key 
    return search(node.left, data)",out,False,False,True,False
1660_out,"def sort_ascending(lst):
    for i in range(len(lst)):
        for j in range(i+1, len(lst)):
            if lst[i] > lst[j]:
                lst[i], lst[j] = lst[j], lst[i]
    return lst

sort_ascending([7, 3, 5, 10, 1])  # returns [1, 3, 5, 7, 10]",out,True,False,True,False
1691_out,"John
|
+----Martha
    |
    +----William
    |
    +----Robert",out,False,False,True,False
1724_out,"def multiply(num1, num2):
  result = 0
  for i in range(num1):
    result = result + num2
  return result",out,False,False,True,False
1875_out,"def balanced_parenthesis(string):
    stack = []
    for i in string:
        if i=='(':
            stack.append(i)
        elif i == ')':
            if len(stack) == 0:
                return False
            else:
                stack.pop()
    if len(stack) == 0:
        return True
    else:
        return False",out,False,False,True,False
1896_out,"1. What is Chemical Engineering? 
Answer: Chemical engineering is the application of physical science, mathematics and economics to design, develop and optimize processes to safely produce and use chemicals, materials, and energy.

2. What types of projects do chemical engineers typically work on? 
Answer: Chemical engineers typically work on projects related to large-scale energy production, chemical process design and optimization, materials development, and production and manufacture of pharmaceuticals, food and drinks, and other consumer goods.

3. What qualifications are required to be a chemical engineer? 
Answer: A chemical engineer typically requires at least a Bachelor's degree in Chemical Engineering, although some universities also offer postgraduate degrees in the field. 
         
4. What are the career prospects for chemical engineers? 
Answer: There is a high demand for chemical engineers in the petrochemical, pharmaceutical, biotechnology, and environmental industries, as well as in academia, research, and government entities.

5. What skills do chemical engineers need?
Answer: Chemical engineers need to have solid problem solving and analytical skills, as well as an understanding of physical sciences, mathematics and economics. They also need to be able to research, design and develop processes for manufacturing or transforming materials, or for improving existing ones. Communication skills, both verbal and written, are also important.",out,False,False,True,False
1949_out,"def is_leap_year(year): 
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0): 
        return True 
    else: 
        return False",out,False,False,True,False
2049_out,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True",out,False,False,True,False
2210_out,"def secondSmallest(list):
  smallest = list[0]
  secondSmallest = list[0]
  for x in list:
    if x < smallest:
        secondSmallest = smallest
        smallest = x
    elif x < secondSmallest:
        secondSmallest = x
  return secondSmallest

print(secondSmallest([114, 11, 90, 7, 34]))

# Output: 11",out,True,False,True,False
2229_out,"def is_prime(n):
    if n <= 1:
        return False
    else:
        for i in range(2,n):
            if n % i == 0:
                return False
        return True",out,False,False,True,False
2286_out,"def calculate_avg_marks(marks):
  # calculate the average marks
  totalMarks = 0
  for m in marks:
    totalMarks += m
  return totalMarks/len(marks)",out,False,False,True,False
2365_out,"def maxValue(array):
    maxVal = 0
    for i in array:
        if i > maxVal:
            maxVal = i 
    return maxVal 

maxVal = maxValue([4, 10, 20, 12]) 
print(maxVal)",out,True,False,True,False
2482_out,"<html>
  <body>
    <form action=""signup.php"" method=""post"">
      <h2>Sign up for our Newsletter</h2>
      <label for=""firstname"">First Name: </label>
      <input type=""text"" id=""firstname"" name=""firstname"" placeholder=""Enter your first name"">
      <label for=""lastname"">Last Name: </label>
      <input type=""text"" id=""lastname"" name=""lastname"" placeholder=""Enter your last name"">
      <label for=""email"">Email Address: </label>
      <input type=""text"" id=""email"" name=""email"" placeholder=""Enter your email address"">
      <br><br>
      <input type=""submit"" value=""Sign up"">
    </form>
  </body>
</html>",out,False,False,True,False
2770_out,"""""""
Calculate the area of a triangle given the lengths of its sides
""""""

def triangle_area(a, b, c): 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
  
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
  
    return area 

if __name__ == '__main__':
    print(""Area of triangle is"",triangle_area(3,4,5))",out,True,False,True,False
2774_out,"""""""
Check if a given number is an Armstrong number or not
""""""

def isArmstrongNumber(num): 
    # Calculate the length of num 
    n = len(str(num)) 
  
    # Initialize sum 
    sum = 0
  
    # Find a sum of nth power of    
    # individual digits
    temp = num 
    while temp > 0: 
        digit = temp % 10
        sum += digit ** n 
        temp //= 10
  
    # Return True if num is equal to the sum 
    # of nth power of its digits
    if num == sum: 
        return True
    else: 
        return False

if __name__ == '__main__':
    print(isArmstrongNumber(153))",out,False,False,True,False
2777_out,"""""""
Find the common elements in two lists
""""""

def findCommonElements(list1, list2):
    # initialize a list to store the common elements
    common_elements = []

    # loop through list1 to find common elements in both lists
    for i in list1:
        if i in list2:
            common_elements.append(i)
    
    return common_elements

if __name__ == '__main__':
    list1 = [1,2,3,4,5]
    list2 = [2,4,5,6,7]
    print(findCommonElements(list1, list2))",out,True,False,True,False
2780_out,"""""""
Given three numbers, find the greatest common divisor (gcd) of the three numbers
""""""

# Find the greatest common divisor (GCD) of two numbers
def find_gcd(a, b): 
    while b > 0: 
        a, b = b, a % b 
  
    return a 

# Given three numbers, find the greatest common divisor (GCD) of the three numbers
def find_gcd_of_three_numbers(a, b, c): 
    gcd_a_b = find_gcd(a, b) 
    gcd_b_c = find_gcd(b, c) 
    gcd_a_c = find_gcd(a, c) 
  
    gcd = find_gcd(gcd_a_b, gcd_b_c) 
    gcd = find_gcd(gcd, gcd_a_c) 
  
    return gcd  

if __name__ == '__main__':
    print(""GCD of 3 numbers is: "", end="""") 
    print(find_gcd_of_three_numbers(18, 24, 30))",out,False,False,True,False
2794_out,"""""""
# Find duplicate elements in a list

def find_duplicates(data):
    seen = set()
    duplicates = []

    for element in data:
        if element in seen:
            duplicates.append(element)
        else:
            seen.add(element)
    
    return duplicates

if __name__ == ""__main__"":
    arr = [3, 2, 1, 2, 3, 4]
    duplicates = find_duplicates(arr)
    print(duplicates)
""""""",out,True,False,True,False
2798_out,"""""""
# Calculate the median of a array

def find_median(data):
    data.sort()
    n = len(data)

    if n % 2 == 0:  
        median = (data[n//2] + data[n//2-1])/2
    else: 
        median = data[n//2] 
    
    return median

if __name__ == ""__main__"":
    data = [10, 20, 30, 40]
    median = find_median(data)
    print(""The median is:"", median)
""""""",out,True,False,True,False
2839_out,"def check_prime(num): 
  
  # Check for negative or zero input 
  if num <= 0: 
    return False
  
  # Check for 1  
  if num == 1: 
    return False
  
  # Check if the number is divisible by any number between 2 and n-1  
  for i in range(2, num): 
    if num % i == 0: 
      return False
  
  # If there is no divisor, the number is prime  
  return True",out,False,False,True,False
2841_out,"def remove_duplicates(sentence):
  word_list = sentence.split() # split sentence into a list of words
  new_list = [] # new list that will contain uniques words

  # loop thru each word in the list
  for word in word_list:
    if word not in new_list: # add a word to the new list if the word is unique
      new_list.append(word)

  # join words in the new list to form a new sentence
  return ' '.join(new_list)",out,False,False,True,False
2966_out,"<!DOCTYPE html>
<html>
<head>
    <title>Table Example</title>
</head>
<body>
    <table>
        <tr>
            <th>Name</th>
            <th>Age</th>
        </tr>
        <tr>
            <td>James</td>
            <td>24</td>
        </tr>
        <tr>
            <td>John</td>
            <td>30</td>
        </tr>
    </table>
    <button>Add</button>
    <button>Delete</button>
</body>
</html>",out,False,False,True,False
2969_out,"function findSecondHighest(arr) {
  let highestNumber = 0;
  let secondHighestNumber = 0;
  arr.forEach(number => {
    if (number > highestNumber) {
      secondHighestNumber = highestNumber;
      highestNumber = number;
    } else if (number > secondHighestNumber && number != highestNumber) {
      secondHighestNumber = number;
    }
  });
  return secondHighestNumber;
}",out,False,False,True,False
3007_out,"def bubbleSort(list): 
    n = len(list) 

    for i in range(n): 
   
        for j in range(0, n-i-1): 
           
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j] 
  
bubbleSort(list)",out,False,False,True,False
3070_out,"```python
def myFunc(x):
    if (x == 0):
        return 0
    else:
        return x * 2
```",out,False,False,True,False
3118_out,"def longest_common_substring(s1, s2):
    # Initialize the string lengths.
    m = len(s1)
    n = len(s2)
  
    # Initialize the longest common substring 
    result = """"
  
    # Start from the lengths of two strings  
    # and set two indices
    for i in range(m): 
        for j in range(n): 
  
            # Initialize counter 
            count = 0
  
            # Find the longest common substring 
            while (i + count < m and 
                   j + count < n and 
                   s1[i + count] == s2[j + count]): 
                count+= 1
  
            # Updates the longest common substring 
            if count > len(result): 
                result = s1[i:i + count] 
    return result",out,False,False,True,False
3244_out,"def parse_list(lst): 
    result = [] 
    for element in lst: 
        if type(element) is list: 
            result.extend(element) 
        else: 
            result.append(element) 
    return result 

result = parse_list(list) 
print(result)",out,False,False,True,False
3639_out,"float triangleArea(float base, float height) {
    float area;
    area = (base * height) / 2;
    return area; 
}",out,False,False,True,False
3801_out,"if (number % 2 == 0) {
    System.out.println(""The number is even"");
} else {
    System.out.println(""The number is odd"");
}",out,False,False,True,False
3802_out,"def reverse_words(sentence): 
    words = sentence.split(' ') 
    reversed_words = words[::-1] 
    reversed_sentence = ' '.join(reversed_words) 
    return reversed_sentence",out,False,False,True,False
4006_out,"def sum_list(nums):
   result = 0
   for n in nums:
      result += n
   return result

print(sum_list([1, 2, 3, 4, 5]))

# Output
15",out,True,False,True,False
4008_out,"def first_letter(sentence):
   words = sentence.split("" "") 
   for word in words:
      print(word[0], end="""")
   print()

first_letter(""Welcome to the world."")

# Output
Wttw.",out,False,False,True,False
4010_out,"def avg_list(nums):
   total = 0
   for n in nums:
      total += n
   return total / len(nums)

print(avg_list([4, 3, 6, 10, 8]))

# Output
6.4",out,True,False,True,False
4011_out,"def is_prime(number):
   if number <= 1:
      return False
   else:
      for n in range(2, number):
         if number % n == 0:
            return False
   return True

print(is_prime(7))

# Output
True",out,False,False,True,False
4032_out,"{
    name: ""John"",
    age: 35,
    location: ""New York""
}",out,False,False,True,False
4126_out,"function sum(x, y) {
    return x + y;
}",out,False,False,True,False
4129_out,"body {
    background-color: white;
}",out,False,False,True,False
4258_out,"for x in range(1, 11): 
    for y in range(1, 11): 
        print(x, '*', y, '=', x*y) 
    print()",out,False,False,True,False
4261_out,"Tail recursion is an optimization technique used in recursive functions that allows a function to call itself without having to store the previous state of the program. This is done by replacing the recursive call with a loop, thus eliminating the need to store the previous state on the stack. As an example, the following code in Python demonstrates a tail recursive function that finds the sum of the first n numbers:

def tail_recursive(n, result):
    if n == 0:
        return result
    else:
        return tail_recursive(n - 1, n + result)

sum = tail_recursive(5, 0)",out,False,False,True,False
4494_out,"#include<iostream>
 
using namespace std;
 
int main()
{
    int n;
    cin>>n;
    for(int i=n;i>=1;i--){
        cout << i << "" "";
    }
    return 0;
}",out,False,False,True,False
4590_out,"def print_hello_world():
    print(""Hello World"")",out,False,False,True,False
4733_out,"for n in range(0, 10):
    print(10 + 2*n)",out,False,False,True,False
4741_out,"def calculate_mean(numbers):
  total = 0
  for number in numbers:
    total += number
  mean = total / len(numbers)
  return mean

calculate_mean([25, 20, 15, 8, 5])",out,True,False,True,False
4743_out,"def reverse_string(string, num): 
  for _ in range(num):
    string = string[::-1]
  return string 

reverse_string(""Hello"", 3)",out,False,False,True,False
4819_out,"""""""
Sort a given array of numbers algorithm
""""""
def sort(array): 
    # loop through all elements
    for i in range(len(array)):
        # select the current element
        current = array[i]
        # look for the smallest element in the array
        min_index = i
        for j in range(i + 1, len(array)):
            if array[j] < array[min_index]:
                min_index = j
        # swap the smallest element and the current element
        array[min_index], array[i] = array[i], array[min_index]
    return array

if __name__ == '__main__':
    print(sort([7, 1, 3, 5, 9]))",out,True,False,True,False
4920_out,"def compare_strings(s1, s2):
  # Compare two strings and return a boolean value
  if s1 == s2:
    return True
  else:
    return False

# Test case
string1 = 'apple'
string2 = 'orange'

result = compare_strings(string1, string2)
print(result)",out,False,False,True,False
4994_out,"{
 ""article"": {
   ""parts"": [
     {""name"": ""Part 1"", ""content"": ""History""},
     {""name"": ""Part 2"", ""content"": ""Present Applications""}, 
     {""name"": ""Part 3"", ""content"": ""Future Potential""}
   ] 
 }
}",out,False,False,True,False
4998_out,"<!DOCTYPE html>
<html>
   <head>
      <title>Welcome to My Website</title>
   </head>
   <body>
      <h1>Welcome to My Website</h1>
      <p>This is my website where I feature my photography work. I hope you enjoy looking through my portfolio!</p>
   </body>
</html>",out,False,False,True,False
5002_out,"MergeSort(A, startIndex, endIndex):
    // If there is only one element in the array, return
    if startIndex == endIndex:
        return

    middleIndex = (startIndex + endIndex) / 2

    // Sort the left half of the array
    MergeSort(A, startIndex, middleIndex)

    // Sort the right half of the array
    MergeSort(A, middleIndex + 1, endIndex)

    // Merge the two sorted arrays
    Merge(A, startIndex, endIndex)

Merge(A, startIndex, endIndex):
    middleIndex = (startIndex + endIndex) / 2
    leftIndex = startIndex
    rightIndex = middleIndex + 1

    // Temporary array to hold the sorted array
    tempArray[]

    // Iterate through both halves of the array
    for i in range(startIndex, endIndex+1):
        // If left half is done iterating, add from right half
        if leftIndex > middleIndex:
            tempArray[i] = A[rightIndex]
            rightIndex++

        // If right half is done iterating, add from left half
        else if rightIndex > endIndex:
            tempArray[i] = A[leftIndex]
            leftIndex++

        // Compare current element and add the smaller element
        else if A[leftIndex] < A[rightIndex]:
            tempArray[i] = A[leftIndex]
            leftIndex++
        else:
            tempArray[i] = A[rightIndex]
            rightIndex++

    // Copy the tempArray back to A
    for i in range(startIndex, endIndex+1):
        A[i] = tempArray[i]",out,False,False,True,False
5003_out,"The code above is incorrect because it does not handle cases when any one or both of the arguments are of type 'list'. It would throw a TypeError since the '+' operator cannot be used to concatenate lists. To make it work with any type of arguments, the code should be modified as follows:

def add(a, b):
    if type(a) is list and type(b) is list:
        return a + b
    else:
        return int(a) + int(b)",out,False,False,True,False
5141_out,"def multiply(a, b):
    return a*b",out,False,False,True,False
5207_out,"if (x % 2 != 0) {
    print(""odd"")
}",out,False,False,True,False
5287_out,"def largest_element(arr):
    """"""
    Takes an array of elements and returns the largest element in the array 

    Parameters:
    arr (list): Array of integers 

    Returns:
    largest (int): Largest element in array 
    """"""

    # Initialise largest as the first element in array
    largest = arr[0]

    # Iterate through rest of elements in array
    for i in range(1, len(arr)):
        # Update largest if element is larger
        if arr[i] > largest:
            largest = arr[i]
    # Return the largest element
    return largest",out,False,False,True,False
5292_out,"To design a basic algorithm of a game of rock-paper-scissors, you would start by defining the players and their choices. The two players will each choose either rock, paper, or scissors. A simple algorithm to define the winner could be created like so: 

if both players choose the same (rock, paper, or scissors)
    then both players draw

if one player chooses rock and the other player chooses scissors
    then the player who chose rock wins

if one player chooses scissors and the other player chooses paper
    then the player who chose scissors wins

if one player chooses paper and the other player chooses rock
    then the player who chose paper wins",out,False,False,True,False
5428_out,"The HTML code for the calculator would look like this:
<form>
  <input type=""text"" id=""calculator-screen"" disabled>
</form>
<button type=""button"" id=""zero"" onclick=""addNum(0)"">0</button>
<button type=""button"" id=""one"" onclick=""addNum(1)"">1</button>
<button type=""button"" id=""two"" onclick=""addNum(2)"">2</button>
<button type=""button"" id=""three"" onclick=""addNum(3)"">3</button>
<button type=""button"" id=""add"" onclick=""calculate('+')"">+</button>
<button type=""button"" id=""subtract"" onclick=""calculate('-')"">-</button>
<button type=""button"" id=""multiply"" onclick=""calculate('*')"">*</button>
<button type=""button"" id=""divide"" onclick=""calculate('/')"">/</button>
<button type=""button"" id=""equal"" onclick=""calculate('=')"">=</button>

And the JavaScript code for the calculator would look like this:

function addNum(num) {
  var screen = document.getElementById('calculator-screen');
  screen.value += num;
}

function calculate(sign) {
  var screen = document.getElementById('calculator-screen');
  var result;
  switch(sign) {
    case '+':
      result = eval(screen.value);
      break;
    case '-':
      result = eval(screen.value);
      break;
    case '*':
      result = eval(screen.value);
      break;
    case '/':
      result = eval(screen.value);
      break;
    case '=':
      result = eval(screen.value);
      break;
  }
  screen.value = result;
}",out,False,False,True,False
5432_out,"<html> 
  <head> 
    <title>Shoes</title> 
  </head> 
  <body> 
    <h1>Shoes</h1> 
    <p>Price: $32</p>
    <p>Description: These shoes are made with a durable tread and breathable material.</p>
  </body> 
</html>",out,False,False,True,False
5527_out,"# print the numbers from 1 to 10
for num in range(1, 11):
    print(num)",out,False,False,True,False
5691_out,"def printMultiTable(n): 
    for i in range(1, 11): 
        print(n,'x',i,'=',n*i)",out,False,False,True,False
5706_out,"def find_sum_of_two_largest(arr):
    largest = max(arr)
    arr.remove(largest)
    second_largest = max(arr)
    return largest + second_largest

# Output: 11 (9 + 2)",out,False,False,True,False
5747_out,"A data structure that stores this information would look like this:

Student {
    Name: string;
    GradeLevel: integer;
    ContactInfo: {
        Address: string;
        PhoneNumber: string;
        Email: string;
    };
}",out,False,False,True,False
5761_out,"def solve_equation(a, b):
    c = a + b
    return c",out,False,False,True,False
5774_out,"def fixTypos(text): 
    words = text.split()
    for i in range(len(words)):
        words[i] = spellCheck(words[i])
    return ' '.join(words)
  
def spellCheck(word):
    dictionary = [""Hello"", ""Goodbye"", ""World""]
    minDistance = len(word)
    result = word
    for item in dictionary:
        if distance(word, item) < minDistance:
            minDistance = distance(word, item)
            result = item
    return result
    
def distance(a, b):
    len_a = len(a)
    len_b = len(b)
    if len_a > len_b: 
        a, b = b, a
        len_a, len_b = len_b, len_a
  
    current_row = range(len_a + 1) 
    for i in range(1, len_b + 1): 
        previous_row, current_row = current_row, [i] + [0] * len_a 
        for j in range(1, len_a + 1): 
            add, delete, change = previous_row[j] + 1, current_row[j - 1] + 1, previous_row[j - 1] 
            if a[j - 1] != b[i - 1]: 
                change += 1
            current_row[j] = min(add, delete, change) 
      
    return current_row[len_a]",out,False,False,True,False
5778_out,"def generate_fibonacci_sequence(n): 
    a = 0 
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
  
print(generate_fibonacci_sequence(9))",out,False,False,True,False
5845_out,"def sum_two_numbers(num1, num2):
    summation = num1 + num2
    return summation",out,False,False,True,False
5854_out,"//input: array of numbers

//output: smallest number in array

min_num = null

for each number in array:
    if min_num is null
        min_num = number
    else if number < min_num
        min_num = number

return min_num;",out,False,False,True,False
5885_out,"def print_list_reversed(lst):
    for i in range(len(lst)-1, -1, -1):
        print(lst[i])

print_list_reversed([1,2,3,4,5])

# Output: 5 4 3 2 1",out,True,False,True,False
5899_out,"import React from 'react';
 
const MyComponent = () => {
 return ( 
   <div>
     <h1>My Component</h1>
     <p>Content goes here.</p>
   </div>
 )
};
 
export default MyComponent;",out,False,False,True,False
5907_out,"def get_anagrams(str):
    """"""
    Function to return all anagrams of the given string
    
    Parameters:
    str: string to be anagrammed 
    
    Returns: 
    anagrams: a list of strings that are anagrams of the given string
    """"""
    if not str:
        return []
    
    anagrams = []
    letters = list(str)
    comb = itertools.permutations(letters, len(letters))
    
    for t in comb:
        anagram = ''.join(t)
        if anagram != str:
            anagrams.append(anagram)
    
    return anagrams",out,False,False,True,False
5929_out,"const uniqueArray = arr => { 
  const seen = {}; 
  const output = []; 
  
  for (let i = 0; i < arr.length; i++) { 
    if (!seen[arr[i]]) { 
      seen[arr[i]] = true; 
      output.push(arr[i]); 
    } 
  } 
  return output; 
} 

console.log (uniqueArray([1, 2, 3, 2, 4, 5, 6, 7, 1, 4])); 
// Output: [1, 2, 3, 4, 5, 6, 7]",out,True,False,True,False
5935_out,"def two_words(string_list): 
  result = [] 
  for s in string_list: 
    if len(s.split()) >= 2: 
      result.append(s) 
  return result 

string_list = [""one"",""two"",""three"",""four""]

print(two_words(string_list))
# Output: [""two"", ""three"", ""four""]",out,False,False,True,False
6003_out,"function sortAscending(arr) { 
    return arr.sort((a, b) => a-b); 
};",out,False,False,True,False
6124_out,"def bubbleSort(arr): 
    n = len(arr) 

    # Traverse through all array elements 
    for i in range(n): 

        # Last i elements are already in place 
        for j in range(0, n-i-1): 

            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

# Driver code to test above 
arr = [64, 34, 25, 12, 22, 11, 90] 

bubbleSort(arr) 

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),",out,True,False,True,False
6130_out,"def facialRecognition(img): 
    # Perform face detection 
    faces = detectFaces(img) 

    # For each face in the image
    for face in faces: 
        # Extract facial features
        features = extractFeatures(face)

        # Compare facial features to a database of known facial features
        matches = compareFeatures(features)

        # Identify the closest matching face
        identifiedFace = identify(matches)

        # Return the identified face
        return identifiedFace",out,False,False,True,False
6171_out,"I. Introduction
    A. Definition of Social Media
    B. Definition of Mental Health
    C. Overview of Social Media & Mental Health
II. Impact of Social Media on Mental Health
    A. Increased Stress and Anxiety 
    B. Too Much Time Engaging on Social Media
    C. Comparison to Traditional Socialization
III. Strategies to Manage Social Media and Mental Health
    A. Setting Boundaries
    B. Writing Down Responses
    C. Engaging in Positive Social Media Outlets
IV. Conclusion
    A. Summary of Social Media & Mental Health
    B. Suggestions for Further Research",out,False,False,True,False
6225_out,"<table>
  <tr>
    <th>Column 1</th>
    <th>Column 2</th>
    <th>Column 3</th>
    <th>Column 4</th>
    <th>Column 5</th>
  </tr>
  <tr>
    <td>Row 1</td>
    <td>Row 1</td>
    <td>Row 1</td>
    <td>Row 1</td>
    <td>Row 1</td>
  </tr>
  <tr>
    <td>Row 2</td>
    <td>Row 2</td>
    <td>Row 2</td>
    <td>Row 2</td>
    <td>Row 2</td>
  </tr>
  <tr>
    <td>Row 3</td>
    <td>Row 3</td>
    <td>Row 3</td>
    <td>Row 3</td>
    <td>Row 3</td>
  </tr>
  <tr>
    <td>Row 4</td>
    <td>Row 4</td>
    <td>Row 4</td>
    <td>Row 4</td>
    <td>Row 4</td>
  </tr>
  <tr>
    <td>Row 5</td>
    <td>Row 5</td>
    <td>Row 5</td>
    <td>Row 5</td>
    <td>Row 5</td>
  </tr>
  <tr>
    <td>Row 6</td>
    <td>Row 6</td>
    <td>Row 6</td>
    <td>Row 6</td>
    <td>Row 6</td>
  </tr>
  <tr>
    <td>Row 7</td>
    <td>Row 7</td>
    <td>Row 7</td>
    <td>Row 7</td>
    <td>Row 7</td>
  </tr>
</table>",out,False,False,True,False
6290_out,"for i in range(4):
    print(""The number is "" + str(i))

Output:
The number is 0
The number is 1
The number is 2
The number is 3",out,False,False,True,False
6450_out,"""""""
Calculate the area of a triangle given 3 sides
""""""

def area_triangle(a, b, c): 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
  
    # calculate the area 
    area = (s * (s-a) * (s-b) * (s-c)) ** 0.5
    return area 
  
# Driver Code 
# a, b, c are lengths of the sides of triangle
a = 4
b = 5
c = 6
print(""Area of triangle is : %.2f"" % area_triangle(a, b, c))",out,False,False,True,False
6459_out,"#include<stdio.h>
 
int main()
{
   int i, n1 = 0, n2 = 1, n3;
 
   printf(""The first 10 terms of the Fibonacci sequence are:\n"");
   printf(""%d\n%d\n"", n1, n2);
 
   for (i = 3; i <= 10; ++i) 
   {
      n3 = n1 + n2;
      printf(""%d\n"", n3);
      n1 = n2;
      n2 = n3;
   }
   return 0;
}",out,False,False,True,False
6463_out,"#include<stdio.h>
#include <string.h>
 
int main() 
{
    char data[][10] = {""puppy"",""dog"",""kitten"",""cat"",""puppy"",""dog"",""fish"",""cat""};
    int puppy_count = 0;
    int dog_count = 0;
    int kitten_count = 0;
    int cat_count = 0;
    int fish_count = 0;
    int i;
    int size = sizeof(data)/10;
 
    for(i=0;i<size;i++)
    {
        if(strcmp(data[i],""puppy"")==0)
            puppy_count++;
        if(strcmp(data[i],""dog"")==0)
            dog_count++;
        if(strcmp(data[i],""kitten"")==0)
            kitten_count++;
        if(strcmp(data[i],""cat"")==0)
            cat_count++;
        if(strcmp(data[i],""fish"")==0)
            fish_count++;
    }
    printf(""puppy count is %d\ndog count is %d\nkitten count is %d\ncat count is %d\nfish count is %d\n"",
    puppy_count, dog_count, kitten_count, cat_count, fish_count);
 
    return 0;
  }",out,False,False,True,False
6474_out,"def board_played (board):
    for i in range (3):
        for j in range (3):
            if board[i][j] != 'X' and board[i][j] != 'O':
                return False

# Function to perform the basic AI operations to play tic-tac-toe
def play_tic_tac_toe (board):
    # Check if board is full or not 
    if board_played (board) == False : 
        # Generate random position
        row = random.randint (0,3) 
        col = random.randint (0,3) 
        
        # Check the safe position 
        if (board[row][col] != 'X' and board[row][col] != 'O'): 
            board[row][col] = 'O'
        else: 
            # Call function again 
            play_tic_tac_toe (board)
    else: 
        print (""Board Played"")",out,True,False,True,False
6476_out,"def hex_to_decimal(num):
    decimal = 0
    for i in range(len(num)):
        if num[i] == 'A':
            decimal += 10 * (16 ** (len(num)-i-1))
        elif num[i] == 'B':
            decimal += 11 * (16 ** (len(num)-i-1))
        elif num[i] == 'C':
            decimal += 12 * (16 ** (len(num)-i-1))
        elif num[i] == 'D':
            decimal += 13 * (16 ** (len(num)-i-1))
        elif num[i] == 'E':
            decimal += 14 * (16 ** (len(num)-i-1))
        elif num[i] == 'F':
            decimal += 15 * (16 ** (len(num)-i-1))
        else:
            decimal += int(num[i]) * (16 ** (len(num)-i-1))
    return decimal",out,False,False,True,False
6477_out,"class ItemCatalog:
    def __init__(self, name, price, description, category, quantity):
        self.name = name
        self.price = price
        self.description = description
        self.category = category
        self.quantity = quantity
    
    def update_item(self, name, price, description):
        self.name = name
        self.price = price
        self.description = description
    
    def update_quantity(self, quantity):
        self.quantity = quantity
    
    def get_item_info(self):
        return (self.name, self.price, self.description, self.category, self.quantity)",out,False,False,True,False
6478_out,"def findTheFirstRepeatingCharacter(str): 
    char_hash = {} 
    for i in range(len(str)): 
        if str[i] in char_hash: 
            return str[i]   
        else: 
            char_hash[str[i]] = i  
    return 'No Repeating Character Found'",out,False,False,True,False
6658_out,"def convert_roman_to_integer(roman):
    rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
 
    int_val = 0
    for i in range(len(roman)):
        if i > 0 and rom_val[roman[i]] > rom_val[roman[i - 1]]:
            int_val += rom_val[roman[i]] - 2 * rom_val[roman[i - 1]]
        else:
            int_val += rom_val[roman[i]]

    return int_val",out,False,False,True,False
6663_out,"There is a bug in the code in line 5. The variable ""salutation"" has been misspelled as ""saluation"" and the function has no return statement, so it won't return the ""salutation"" variable.

To fix this, the variable should be spelled correctly (i.e., ""salutation""), and a return statement should be added to the function so that it returns the ""salutation"" variable. The code should then look like this:

def salutation(name):
    if name == 'bob':
        salutation = 'Hello'
    else:
        salutation = 'Good bye'
    print(salutation)
    return salutation",out,False,False,True,False
6755_out,"<form>
    <h2>User Feedback Survey</h2>
    <p>Please answer the following questions about your experience with our product. Your feedback will help us improve our services for future users.</p>
    
    <label for=""overallRating"">Overall Rating</label>
    <select name=""overallRating"">
        <option>1 - Poor</option>
        <option>2 - Fair</option>
        <option>3 - Good</option>
        <option>4 - Very Good</option>
        <option>5 - Excellent</option>
    </select>

    <label for=""easeOfUse"">Ease of Use</label>
    <select name=""easeOfUse"">
        <option>1 - Poor</option>
        <option>2 - Fair</option>
        <option>3 - Good</option>
        <option>4 - Very Good</option>
        <option>5 - Excellent</option>
    </select>

    <label for=""features"">Features</label>
    <select name=""features"">
        <option>1 - Poor</option>
        <option>2 - Fair</option>
        <option>3 - Good</option>
        <option>4 - Very Good</option>
        <option>5 - Excellent</option>
    </select>

    <label for=""valueForMoney"">Value for Money</label>
    <select name=""valueForMoney"">
        <option>1 - Poor</option>
        <option>2 - Fair</option>
        <option>3 - Good</option>
        <option>4 - Very Good</option>
        <option>5 - Excellent</option>
    </select>

    <label for=""comments"">Comments</label><br>
    <textarea name=""comments"" rows=""5"" cols=""70""></textarea>

    <input type=""submit"" value=""Submit"">

</form>",out,False,False,True,False
6772_out,"function binary_search(arr, l, r, x) 
{ 
    if (￼r >= l) { 
        var mid = l + (r - l) / 2; 
  
        // If the element is present 
        // at the middle   
        if (arr[mid] == x)  
            return mid; 
  
        // If element is smaller 
        // than mid, then 
        // it can only be present 
        // in left sub array 
        if (arr[mid] > x)  
            return binary_search(arr, l, mid - 1, x); 
  
        // Else the element can 
        // only be present 
        // in right sub array 
        return binary_search(arr, mid + 1, r, x); 
    } 
  
    // We reach here when  
    // element is not present 
    // in array 
    return -1; 
}",out,False,False,True,False
6876_out,"import random

options = [""rock"", ""paper"", ""scissors""]

player1 = input(""Player1 choose: "")
player2 = random.choice(options)

if player1 == player2:
    print(""It's a tie!"")
elif player1 == ""rock"":
    if player2 == ""paper"":
        print(""Player2 wins!"")
    elif player2 == ""scissors"":
        print(""Player1 wins!"")
elif player1 == ""paper"":
    if player2 == ""rock"":
        print(""Player1 wins!"")
    elif player2 == ""scissors"":
        print(""Player2 wins!"")
elif player1 == ""scissors"":
    if player2 == ""rock"":
        print(""Player2 wins!"")
    elif player2 == ""paper"":
        print(""Player1 wins!"")
else:
    print(""Invalid input. You have not entered rock, paper or scissors, try again."")",out,False,False,True,False
6878_out,"The fault in the program is that the value of 'x' is changed inside the function, but the changed value is not returned. To fix this, the program should return the changed value, like so: 
def my_function(x):
    x += 10
    return x",out,False,False,True,False
6981_out,"#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main() {
    // Declare variables
    string line;
    int count = 0;

    // Open text file
    ifstream myfile(""file.txt"");

    // Read the file line by line
    while (getline(myfile, line)) {
        // Split the line by any whitespaces
        istringstream iss(line);
        string word;

        // Read each word and increment the word count
        while (iss >> word) {
            count++;
        }
    }
    
    // Output the word count
    cout << ""Number of words: "" << count << endl;

    return 0;
}",out,False,False,True,False
6992_out,"class Solution:
    def checkValidString(self, s: str) -> bool:
        open_stack = []
        star_stack = []
        for i, char in enumerate(s):
            
            # Add open brackets to open_stack and star to star_stack
            if char == ""("":
                open_stack.append(i)
            elif char == ""*"":
                star_stack.append(i)
                
            # Check the current opening brackets or star, pop them in case they match the closing bracket
            # If no matching bracket is found, then the expression is not valid.
            elif char == "")"":
                if open_stack:
                    open_stack.pop()
                elif star_stack:
                    star_stack.pop()
                else:
                    return False

        # Check the length of the remaining stacks
        while open_stack and star_stack:
            o = open_stack.pop()
            s = star_stack.pop()

            if o > s:
                return False

        return len(open_stack) == 0",out,False,False,True,False
7024_out,"# Python 3 program to validate 
# IPv4 address 

# Function to validate a given IPv4 address. 
def validate_IPv4(s): 
    l = s.split(""."") 
    if len(l) != 4: 
        return False
    for x in l: 
        if x != '*' and x != '#' and (not x.isdigit() or int(x)>255): 
            return False
    return True

# Driver Code 
s = ""192.168.1.*""
if validate_IPv4(s): 
    print(""valid"") 
else: 
    print(""Invalid"")",out,False,False,True,False
7079_out,"def area_of_circle(radius): 
 
    # Calculate the area of a circle 
    PI = 3.14
    area = PI * (radius * radius) 
      
    # Print the area 
    print(""The area of the circle is: %.2f"" %area) 
      
# Driver function 
radius = float(input("" ENTER THE RADIUS OF CIRCLE: ""))
area_of_circle(radius)",out,False,False,True,False
7106_out,"def printFibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        print(a) 
    elif n == 1: 
        print(b) 
    else: 
        print(a)
        print(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b)",out,False,False,True,False
7150_out,"<html>
<head>
  <title> My Web Page </title>
</head>
<body>
  <h1> Welcome to my web page! </h1>
  <p> Here you will find information about my interests and hobbies. </p>
  <h2> Hobbies </h2>
  <ul>
    <li> Gardening </li>
    <li> Cooking </li>
    <li> Painting </li>
  </ul>
</body>
</html>",out,False,False,True,False
7239_out,"Python code

def isAnagram(x, y): 
  
    # Get lengths of both strings 
    x_len = len(x) 
    y_len = len(y)
  
    # If length of both strings is not same, then they  
    # are not anagram 
    if x_len != y_len: 
        return False
  
    x = sorted(x) 
    y = sorted(y) 
  
    for i in range(0, x_len):
        char1 = x[i] 
        char2 = y[i]
  
    # Compare sorted strings 
    if char1 != char2: 
        return False
  
    return True",out,False,False,True,False
7272_out,"""""""
def process_input(data):
    result = ''
    for char in data:
        result += char.upper()
    return result
""""""",out,False,False,True,False
7329_out,"def reverse(string): 
    string = string[::-1] 
    return string",out,False,False,True,False
7350_out,"x = 0

for i in range(10):
    x += 1",out,True,False,True,False
7375_out,"sum = 0
for i in range(1,10):
    if i % 2 == 0:
        sum += i",out,True,False,True,False
7377_out,"1. How would you rate your overall experience with our store? 
    a. Very Satisfied
    b. Satisfied
    c. Neutral
    d. Dissatisfied
    e. Very Dissatisfied

2. How easy is it to find the items you need in our store? 
    a. Very Easy
    b. Easy 
    c. Neutral
    d. Difficult 
    e. Very Difficult

3. How satisfied have you been with the quality of your purchases from our store?
    a. Very Satisfied
    b. Satisfied
    c. Neutral
    d. Dissatisfied
    e. Very Dissatisfied

4. How satisfied have you been with the delivery process of your orders from our store?
    a. Very Satisfied
    b. Satisfied
    c. Neutral
    d. Dissatisfied
    e. Very Dissatisfied

5. How likely are you to recommend our store to your friends and family?
    a. Very Likely
    b. Likely
    c. Neutral
    d. Unlikely
    e. Very Unlikely

6. How satisfied are you with the overall customer service provided by our store?
    a. Very Satisfied
    b. Satisfied
    c. Neutral
    d. Dissatisfied
    e. Very Dissatisfied

7. How satisfied have you been with the pricing of the items in our store?
    a. Very Satisfied
    b. Satisfied
    c. Neutral
    d. Dissatisfied
    e. Very Dissatisfied
    
8. Please provide us with some feedback to help us improve our store.
   
    _________________________________________________________________
    _________________________________________________________________",out,False,False,True,False
7544_out,"int largestNum = 0; 
foreach(int num in array)
{ 
    if (num > largestNum) 
    {
        largestNum = num; 
    }
}

Console.WriteLine(""The largest number in the array is "" + largestNum);",out,False,False,True,False
7633_out,"for x in range(0, 30):
    if x != 15 and x % 3 == 0:
        print(x)",out,False,False,True,False
7674_out,"<table>
    <tr>
        <th>Name</th>
        <th>Age</th>
    </tr>
    <tr>
        <td>John</td>
        <td>20</td>
    </tr>
    <tr>
        <td>Jill</td>
        <td>27</td>
    </tr>
</table>",out,False,False,True,False
7764_out,"def print_fibonacci(n): 
    a = 0
    b = 1
 
     print(""Fibonacci Sequence:"")
    while a < n:
        print(a)
        c = a + b
        a = b
        b = c

n = int(input(""Enter a number:""))
print_fibonacci(n)",out,False,False,True,False
7833_out,"Find the length of the side labelled as x in the triangle shown below, given that angle A is 40 degrees, and angle B is 50 degrees:
\                                     /\ 
 \                        B          /  \ 
  \                     __|__       /    \ 
   \                    |  |       /      \ 
    \                   |  |      /        \ 
     \                  |  |     /          \ 
      \                 |  |    /            \ 
       \                |  |   /              \ 
        \          A    |  |  /                \ 
         \               |  | /                  \ 
          \______________|  |/____________________\ 
            \              x                       \ 
             \______________________________________\ 

The length of side x is 16.7 cm.",out,False,False,True,False
7957_out,"def solve_equation(a, b, c):
    discriminant = (b**2) - (4*a*c)
    x1 = (-b + (discriminant**(1/2))) / (2*a)
    x2 = (-b - (discriminant**(1/2))) / (2*a)
    return x1, x2

print(solve_equation(1, 2, -15))",out,False,False,True,False
8054_out,"def add_two_numbers(a, b): 
    return a + b",out,False,False,True,False
8155_out,"def calc_distance(long1, lat1, long2, lat2):
    # approximate radius of earth in km
    R = 6373.0
 
    dlon = long2 - long1
    dlat = lat2 - lat1
 
    a = sin(dlat / 2)**2 + cos(lat1) * cos(lat2) * sin(dlon / 2)**2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))
 
    return R * c",out,False,False,True,False
8191_out,"<html>
<head>
    <title>Under Maintenance</title>
</head>
<body>
    <h1>This page is under construction. Please check back soon.</h1>
</body>
</html>",out,False,False,True,False
8202_out,"<html>
<head>
    <title>Population Growth Rate Chart</title>
</head>
<body>
    <h1>Population Growth Rate in Different Countries</h1>
    <div id=""chart"">
        <canvas id=""myChart"" width=""400"" height=""400""></canvas>
    </div>

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.js""></script>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels : [""United States"", ""China"", ""India"", ""Japan"", ""Russia""],
                datasets: [{
                    label: 'Population Growth Rate (%)',
                    data: [0.76, 0.56, 1.12, -0.18, -0.06],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                    ],
                    borderWidth: 1
                    }]
            },
            options: {}
        });
    </script>
</body>
</html>",out,False,False,True,False
8215_out,"def triangle_area(base, height):
    return (base * height) / 2",out,False,False,True,False
8406_out,"The CSS code to provide an animation on hover is:

.element {
  transition: all 0.5s ease-in-out;
}

.element:hover {
  transform: scale3d(1.1, 1.1, 1.1);
  animation-name: animation-on-hover;
  animation-duration: 0.3s;
}

@keyframes animation-on-hover {
  0% {
    border-radius: 0px;
    background-color: blue;
  }
  100% {
    border-radius: 20px;
    background-color: yellow;
  }
}",out,False,False,True,False
8415_out,"def sortByColIndex(arr, col_index): 
  
    arr.sort(key=lambda x : x[col_index]) 
    return arr 

sortedArray = sortByColIndex(arr, 2) 
print(sortedArray) 

Output:
[[3, 2, 1], [6, 5, 4], [9, 8, 7]]",out,True,False,True,False
8480_out,"def return_even_nums(num_list):
    even_nums = []
    for num in num_list:
        if num % 2 == 0:
            even_nums.append(num)
    return even_nums",out,False,False,True,False
8483_out,"class ClothingBrand:
    def __init__(self, name, style, colors):
        self.name = name
        self.style = style
        self.colors = colors
    
    def get_name(self):
        return self.name
    
    def set_name(self, name):
        self.name = name
    
    def get_style(self):
        return self.style
    
    def set_style(self, style):
        self.style = style
    
    def get_colors(self):
        return self.colors
    
    def set_colors(self, colors):
        self.colors = colors",out,False,False,True,False
8516_out,"def isPalindrome(string): 
    # remove non-alphanumeric characters 
    alphanumeric_string = re.sub('[\W_]+', '', string).lower() 
  
    # reverse the string 
    reversed_string = alphanumeric_string[::-1] 
  
    # check if the string is equal to its reverse 
    return alphanumeric_string == reversed_string",out,False,False,True,False
8584_out,"num_list = [1, 2, 3, 4, 5]
for number in num_list:
  if number < 3:
    print(""smaller than 3"")
  else:
    if number == 3:
      print(""equal to 3"")  
    else:
      print(""larger than 3"")",out,True,False,True,False
8593_out,"<table>
  <tr>
    <th>Column 1</th>
    <th>Column 2</th>
  </tr>
</table>",out,False,False,True,False
8620_out,"@media all and (max-width: 100%) { 
  content {
    width: 100%;
  } 
}",out,False,False,True,False
8636_out,"public static boolean isAnagram(String str1, String str2) {  
    char[] charArray1 = str1.toCharArray();  
    char[] charArray2 = str2.toCharArray();  
    Arrays.sort(charArray1);  
    Arrays.sort(charArray2);  
    return Arrays.equals(charArray1, charArray2);  
}",out,False,False,True,False
8638_out,"def findLongestWord(string, dict): 
    maxLen = 0
    result = """" 

    for word in dict: 
        if isSubsequence(word, string): 
            if len(word) > maxLen: 
                maxLen = len(word) 
                result = word  
  
    return result",out,False,False,True,False
8653_out,"def is_prime(n): 
    if (n <= 1): 
        return False
    
    if (n <= 3): 
        return True
    
  
    if (n % 2 == 0 or n % 3 == 0): 
        return False
  
    for i in range(5,int(n**0.5) + 1, 6):  
        if (n % i == 0 or n % (i + 2) == 0): 
            return False
  
    return True
  
num = int(input(""Enter a number: "")) 
if is_prime(num): 
    print(num, ""is a prime number"") 
else: 
    print(num, ""is not a prime number"")",out,False,False,True,False
8735_out,"def validate_email(email_address):
"""""" Function to validate an email address.

This function will take an email address as an argument and
return True if the email address is valid or False if it is not.

:param email_address: The email address to validate.
:return: True if valid, False if invalid.
""""""
    if re.match(""^[\w\.\+\-]+\@[\w]+\.[a-z]{2,3}$"", email_address):
        return True
    else:
        return False",out,False,False,True,False
8740_out,"def max(a, b):
"""""" Function to get the maximum of two numbers

This function will take two numbers as arguments and
return the maximum of the two.

:param a: The first number.
:param b: The second number.
:return: The maximum of two numbers.
""""""
    if a > b:
        return a
    else:
        return b",out,False,False,True,False
9010_out,"There is a syntax error in the third line, the "":"" should be removed. So the correct code should be as follows:

import sys
 
if len(sys.argv) == 3:
    players = int(sys.argv[1])
    games = int(sys.argv[2])

average = str( players / games)
print(""The average number of players was: "" + average)",out,False,False,True,False
9039_out,"#include<iostream>
using namespace std;

struct Node {
    int data;
    struct Node *next;
};

// Add a new node to the end of the list 
void append(struct Node** head_ref, int new_data) 
{ 
    Node* new_node = new Node; 
  
    Node *last = *head_ref;
  
    new_node->data = new_data; 
  
    new_node->next = NULL; 
  
    if (*head_ref == NULL) { 
        *head_ref = new_node; 
        return; 
    } 
  
    while (last->next != NULL) 
        last = last->next; 
  
    last->next = new_node; 
    return; 
} 

// Delete the node at a given position 
void deleteNode(struct Node **head_ref, int position) 
{ 
    if (*head_ref == NULL) 
        return; 
    struct Node *temp = *head_ref; 
    if (position == 0) 
    { 
        *head_ref = temp->next;   
        free(temp);               
        return; 
    } 

   for (int i=0; temp!=NULL && i<position-1; i++) 
         temp = temp->next; 
  
    if (temp == NULL || temp->next == NULL) 
         return; 
  
   struct Node *next = temp->next->next; 

   free(temp->next);  
   temp->next = next;  
}",out,False,False,True,False
9081_out,"int findMax(int array[])
{
    int max = array[0];
    for (int i = 1; i < sizeof(array)/sizeof(array[0]); i++)
    {
        if (array[i] > max)
            max = array[i];
    }
    return max;
}",out,False,False,True,False
9387_out,"""""""
Function to calculate the simple interest 

Input: amount - loan amount
       rate - interest rate
       years - number of years for the loan

""""""

def simple_interest(amount, rate, years):
    return (amount * rate * years) / 100

if __name__ == '__main__':
    print(simple_interest(10000, 5, 4))",out,False,False,True,False
9390_out,"""""""
A Python script to sort a list of numbers

""""""

def sort_nums(nums):
    sorted_nums = sorted(nums)
    return sorted_nums

if __name__ == '__main__':
    print(sort_nums([100, 15, -50, 0, 20]))",out,False,False,True,False
9497_out,"def closest_num(num, list):
    closest = None
    for i in list:
        if closest is None or abs(num - i) < abs(num - closest):
            closest = i
    return closest

closest_num(10, [3, 5, 7, 8, 11, 16]) 
# Output: 8",out,True,False,True,False
9538_out,"Do you want to watch a movie? 

Yes: Grab some snacks and watch a movie 
No: Do you prefer to go for a jog outdoors or do a home workout? 
    Outdoors: put on your running shoes and go for a jog 
    Home workout: pick out which workout video you want to do and get going",out,False,False,True,False
9583_out,"def remove_a(string):
    new_string = """"
    for char in string:
        if char != 'a':
            new_string += char
    return new_string

result = remove_a(""abcabcabc"")
print(result)  # output: ""bcbcbc""",out,False,False,True,False
9598_out,"def is_prime(n): 
    if n == 2: 
        return True
    if n < 2 or n % 2 == 0: 
        return False
    # Check if a number is divisible by other numbers
    i = 3
    while i * i <= n: 
        if n % i == 0: 
            return False
        i += 2
    return True

# Print all prime numbers between 2 and 100
print(""Prime numbers between 2 and 100:"")
for i in range(2, 101): 
    if is_prime(i): 
        print(i)",out,False,False,True,False
9599_out,"<html>
  <head>
    <title>Sample HTML Page</title>
  </head>
  <body>
    <h1>Sample HTML Page</h1>
    <p>This is an example of valid HTML code.</p>
  </body>
</html>",out,False,False,True,False
9601_out,"""""""
Generate a random password with 8 characters
""""""
import random
import string

def get_random_password():
    chars = string.ascii_lowercase + string.ascii_uppercase + string.digits
    return ''.join(random.choice(chars) for x in range(8))

if __name__ == '__main__':
    print(get_random_password())",out,False,False,True,False
9675_out,"def factorial(n):
    # base case
    if n == 0:
        return 1

    # recursive case
    else:
        return n*factorial(n - 1)

# Input a number
num = int(input('Enter a number: '))

# Output factorial of the number
print('The factorial of', num, 'is', factorial(num))",out,False,False,True,False
9691_out,"<script>
    console.log(""Hello World!"");
</script>",out,False,False,True,False
9833_out,"A parallelogram has been drawn below with opposite sides that are parallel and equal and adjacent sides that are not parallel. 
 
       ------------
      |            |
      |            |
      |            |
      |            |
       ------------",out,False,False,True,False
9873_out,"<!DOCTYPE html>
<html>
<head>
    <title>Hello World</title>
</head>
<body>
    <p>Hello World!</p>
    <p>This is a sample document.</p>
</body>
</html>",out,False,False,True,False
9890_out,"arr = [2, 4, 5, 7, 1] 

def findMax(arr): 
    max = arr[0] 
  
    for i in range(1, len(arr)): 
        if arr[i] > max: 
            max = arr[i] 
    return max 
  
print(findMax(arr))",out,True,False,True,False
9891_out,"FUNCTION simpleSum(n: INTEGER) 
    // declares variables 
    DECLARE sum, number : INTEGER 

    // sets initial values to 0 
    SET sum = 0 
    SET number = 0 

    // loop until n is reached 
    WHILE number < n DO
        SET sum = sum + number 
        SET number = number + 1 
    END WHILE 

    // returns the sum
    RETURN sum 
END FUNCTION",out,False,False,True,False
10233_out,"def reverse_array (array): 
  start = 0 
  end = len(array)-1
  while start<end: 
    temp = array[start] 
    array[start] = array[end] 
    array[end] = temp
    start += 1
    end = end-1
  return array",out,False,False,True,False
10318_out,"def remove_duplicates(strings):
  seen = set()
  result = []
  for string in strings:
    if string not in seen:
      seen.add(string)
      result.append(string)
  return result",out,False,False,True,False
10685_out,"def sort_array(arr)
  sorted = false
  
  while !sorted
    sorted = true
    
    (0...arr.length - 1).each do |i|
      if arr[i] > arr[i + 1]
        arr[i], arr[i + 1] = arr[i + 1], arr[i]
        sorted = false
      end
    end
  end
  
  arr
end",out,False,False,True,False
10687_out,"class Car:
    def __init__(self, make, model, year, color):
        self.make = make
        self.model = model
        self.year = year
        self.color = color
        self.speed = 0
    
    def accelerate(self, amount):
        self.speed += amount
    
    def brake(self, amount):
        self.speed -= amount",out,False,False,True,False
10715_out,"The Mac Pro and Pro Display XDR bring together cutting-edge technology in a powerful system designed for professionals. Combined with the new Afterburner card, Apple has created an environment suited for the demands of creatives and tech-savvy users. The Afterburner card enables unprecedented editing performance, allowing users to work with 8K videos and manipulate 3D models with ease. Launches like these are among the advancements that confirm Apple's leadership in the industry, while also helping redefine how consumers interact with technology.
#
5. Instruction: What is a potential issue with this code?
5. Input:
def my_function(num1, num2):
    return num1 + num2

5. Output:
This code does not perform any error checking. If the types of num1 and num2 are not compatible, the function will not produce the desired result, and an error will be thrown. Additionally, if num1 and num2 are not numeric, then the function will also produce an error. To prevent these errors, type checking should be performed before passing the parameters to the function.",out,False,False,True,False
10721_out,"# Python program to display all the prime numbers from 1 to 100
 
print(""All the prime numbers between 1 to 100 are:"")
for num in range(1,101):
    # prime numbers are greater than 1
    if num > 1:
        for i in range(2,num):
            if (num % i) == 0:
                break
        else:
            print(num)",out,True,False,True,False
10768_out,"def checkCharacterSet(char_set):
  if 'A' in char_set:
    return True
  else:
    return False",out,False,False,True,False
10944_out,"<html>
<head> 
    <title>Contact Form</title>
</head>
<body>
    <h1>Contact Form</h1>
    <p>We would love to hear from you! Please fill out this form to contact us.</p>

    <form action=""mailto:example@example.com"" method=""post"" enctype=""text/plain"">
        Name: <input type=""text"" name=""name""/><br/><br/> 
        Email: <input type=""text"" name=""email""/><br/><br/> 
        Message: <textarea name=""message""></textarea><br/><br/>
        <input type=""submit"" value=""Send""/>
    </form>
</body>
</html>",out,False,False,True,False
10950_out,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
 
# Driver Program 
print(Fibonacci(9))",out,False,False,True,False
11032_out,"def find_common_words(s1, s2):
    # split the strings and store them into two lists
    list1 = s1.split(', ')
    list2 = s2.split(', ')
    # create a set of words that appear in both strings
    common_words = set(list1).intersection(list2)
  
    # return the words
    return common_words",out,False,False,True,False
11130_out,"def sum_two_numbers(x, y):
    return x + y

sum = sum_two_numbers(2, 5)
print(sum) # Output: 7",out,False,False,True,False
11206_out,"def fibonacci_sequence(n): 
    # set initial values 
    a = 0 
    b = 1  
    if n == 0: 
        return a 
    elif n == 1:
        return b 
    else: 
        # loop over the sequence 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Print the sequence 
for i in range(10): 
    print(fibonacci_sequence(i), end="" "") 

# Output: 0 1 1 2 3 5 8 13 21 34",out,False,False,True,False
11254_out,"class Program {
    private String language;
    private int numLines;
    private List<String> commands;
    
    public Program(String language) {
        this.language = language;
        this.numLines = 0;
        this.commands = new ArrayList<>();
    }
    
    public void addLine(String command) {
        this.commands.add(command);
        this.numLines++;
    }
    
    public List<String> getCommands() {
        return this.commands;
    }
    
    public int getNumLines() {
        return this.numLines;
    }
    
    public String getLanguage() {
        return this.language;
    }
    
    public void execute() {
        for (String command : this.commands) {
            switch(this.language) {
                case 'Python':
                    //execute python command
                    break;
                case 'Java':
                    //execute java command
                    break;
                case 'C#':
                    //execute C# command
                    break;
            }
        }
    }
}",out,False,False,True,False
11376_out,"def avg(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum / len(nums)  # Output: 3.0",out,False,False,True,False
11418_out,"if user_input == ""up"":
    # logic for action when user inputs ""up""",out,False,False,True,False
11420_out,"def num_to_string(num):
    return str(num)",out,False,False,True,False
11460_out,"<table>
<tr>
    <td>Column 1</td>
    <td>Column 2</td>
</tr>
</table>",out,False,False,True,False
11461_out,"public class MaxNumber {
    public static int findMax(int[] arr) {
        int max = Integer.MIN_VALUE;
        for (int i=0; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }

    public static void main(String[] args) {
        int[] numbers = {2, 3, 1, 5, 9};
        int max = findMax(numbers);
        System.out.println(""The maximum number is: "" + max);
    }
}",out,False,False,True,False
11462_out,"function isPositive(num) {
    if (typeof num == 'number' && num > 0) {
        return true;
    } else {
        return false;
    }
}",out,False,False,True,False
11494_out,"#include <iostream> 
 
int main() 
{ 
    std::cout<<""Hello World""; 
    return 0; 
}",out,False,False,True,False
11511_out,"def calculate_area_heron(a, b, c):
    s = (a + b + c)/2 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5 
    return area",out,False,False,True,False
11552_out,"for (int i=0; i < N; i++)
  for (int j=i; j < N; j++)
    A[i][j] = A[j][i];",out,False,False,True,False
11687_out,"def bubbleSort(arr): 
    n = len(arr) 
  
    # Traverse through all array elements 
    for i in range(n): 
  
        # Last i elements are already in place 
        for j in range(0, n-i-1): 
  
            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]",out,False,False,True,False
11763_out,"def median_calc(nums): 
    nums.sort() 
    mid = len(nums)//2 
  
    if len(nums) % 2 == 0: 
        median = (nums[mid] + nums[mid - 1])/2 
    else: 
        median = nums[mid] 
  
    return median 
  
array = [5, 15, 20, 2, 10] 
n = len(array) 
  
med = median_calc(array) 
  
print(""The median of given array is: "" + str(med))",out,True,False,True,False
11841_out,"// Sample code to reverse a string 
String inputString = ""Hello World"";
 
StringBuilder sb = new StringBuilder();
 
for(int i = inputString.length() - 1; i >= 0; i--){
    sb.append(inputString.charAt(i));
}
 
String reversedString = sb.toString();
System.out.println(reversedString);
// Output: dlroW olleH",out,False,False,True,False
11901_out,"30|
   |
22|   *
   | *        *
16| *    *    *
   |________*___
    10  20  30  40",out,False,False,True,False
11939_out,"public void reverse(int[] arr) {
 
  int low = 0;
  int high = arr.length-1;
 
  while (low < high) {
    int temp = arr[low];
    arr[low] = arr[high];
    arr[high] = temp;
    low++;
    high--;
  }
}",out,False,False,True,False
11963_out,"// Algorithm to find the intersection of two arrays

function intersection(arr1, arr2) {
    // Create empty array to store intersection elements
    let result = [];

    // Loop through all elements of arr1
    for (let i = 0; i < arr1.length; i++) {
        // Loop through all elements of arr2
        for (let j = 0; j < arr2; j++){
            // Check if elements from arr1 and arr2 match
            if (arr1[i] === arr2[j]) {
                // If match, push element to result array
                result.push(arr1[i]);
            }
        }
    }

    // Return the result array 
    return result;
}",out,False,False,True,False
12180_out,"1. How satisfied are you with the overall shopping experience with our store?
    - Very Satisfied 
    - Satisfied 
    - Neither Satisfied Nor Dissatisfied 
    - Dissatisfied 
    - Very Dissatisfied 

2. How would you rate the website design and usability of our store's page?
    - Very Satisfied 
    - Satisfied 
    - Neither Satisfied Nor Dissatisfied 
    - Dissatisfied 
    - Very Dissatisfied 
    
3. How would you rate our product selection?
    - Very Satisfied 
    - Satisfied 
    - Neither Satisfied Nor Dissatisfied 
    - Dissatisfied 
    - Very Dissatisfied

4. How would you rate the customer service you received when making an inquiry?
    - Very Satisfied 
    - Satisfied 
    - Neither Satisfied Nor Dissatisfied 
    - Dissatisfied 
    - Very Dissatisfied 

5. How likely are you to recommend our store to a friend or family?
    - Very Likely 
    - Likely 
    - Neither Likely Nor Unlikely 
    - Unlikely 
    - Very Unlikely 

6. Do you have any additional feedback or suggestions for improving our store's services?
    - [Answer]",out,False,False,True,False
12208_out,"<html>
    <head>
        <title>Heading and Subheading</title>
    </head>
    <body>
        <h1>Heading</h1>
        <h2>Subheading</h2>
    </body>
</html>",out,False,False,True,False
12222_out,"def reverse_string(input_string):
  output_string = """"
  i = len(input_string)
  while i > 0:
    output_string += input_string[i-1]
    i = i-1
  print(output_string)",out,False,False,True,False
12262_out,"for i in my_list:
    print(i)",out,False,False,True,False
12265_out,"def round_to_two_decimal(num):
    return round(num, 2)

print(round_to_two_decimal(14.659)) # Output: 14.66",out,False,False,True,False
12341_out,"{
    ""name"": ""Joe Smith"",
    ""age"": 33,
    ""occupation"": ""Software Developer""
}",out,False,False,True,False
12437_out,"for i in range(1, 6):
    print('*' * i)",out,False,False,True,False
12516_out,"def find_max(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

print(find_max([1, 5, 23, 9]))

Output: 23",out,True,False,True,False
12519_out,"def round_num(num): 
    return round(num) 
  
print(round_num(4.5)) 

Output: 5",out,False,False,True,False
12559_out,"def binary_search(arr, target):
    left = 0
    right = len(arr)-1
    while left <= right:
        mid = (left+right) // 2
        if arr[mid] == target:
            return mid
        elif target < arr[mid]:
            right = mid - 1
        else:
            left = mid + 1

    return -1",out,False,False,True,False
12585_out,"for (i = 0; i < 10; i++)
{
    console.log(i);
    while (i < 10)
    {
        i++;
    }
}",out,False,False,True,False
12746_out,"public static double getMedian(int[] a) 
{ 
    Arrays.sort(a); 
    int len = a.length; 
    if (len % 2 == 0) 
        return (a[(len/2)] +  
                a[(len/2)-1]) / 2; 
    else
        return a[len/2]; 
}",out,False,False,True,False
12785_out,"import requests 
import lxml.html as lh 
import pandas as pd

url = 'https://finance.yahoo.com/quote/AAPL/'
page = requests.get(url)
doc = lh.fromstring(page.content)

column_headers = []
for col in doc.xpath('//table[@class=""W(100%) M(0) Bdcl(c)""]//tr[1]//th'):
    column_headers.append(col.text_content().strip())

table_rows = doc.xpath('//tr[@class = ""BdT Bdc($seperatorColor) Ta(start) Fz(s) Whs(nw)""]')

data = []
for row in table_rows:
    data_row = []
    for col in row.xpath('//td'):
        data_row.append(col.text_content().strip())
    data.append(data_row)
df = pd.DataFrame(data, columns=column_headers)",out,False,False,True,False
12862_out,"<html>
  <head>
    <title>Register for Workshop</title>
  </head>
  <body>
    <h1>Welcome!</h1>
    <p>Ready to join the workshop? Please fill out the form below to complete your registration.</p>
    <form action=""register.php"" method=""post"">
      <p>Name: <input type=""text"" name=""name"" /></p>
      <p>Email: <input type=""text"" name=""email"" /></p>
      <p>Phone: <input type=""text"" name=""phone"" /></p>
      <input type=""submit"" value=""Submit"" />
    </form>
  </body>
</html>",out,False,False,True,False
12863_out,"<html>
  <head>
    <title>Book Search</title>
  </head>
  <body>
    <h1>Welcome!</h1>
    <p>Ready to search for a book? Please enter your keywords below and press the search button.</p>
    <form action=""search.php"" method=""post"">
      <p>Keywords: <input type=""text"" name=""keywords"" /></p>
      <input type=""submit"" value=""Search"" />
    </form>
  </body>
</html>",out,False,False,True,False
12948_out,"def isPrime(n): 
    if n <= 1: 
        return False
    
    for i in range(2, n): 
        if n % i == 0: 
            return False
  
    return True",out,False,False,True,False
12995_out,"def get_string(number):
    if(number == 0): 
        return 'zero' 
    if (number < 0):  
        return 'minus ' + get_string(-1 * number) 
       
    if (number > 0): 
 
        a = ["""",""one "",""two "",""three "",""four "", ""five "",""six "",""seven "",""eight "",""nine "",""ten "",""eleven "",""twelve "",""thirteen "",""fourteen "",""fifteen "",""sixteen "",""seventeen "",""eighteen "",""nineteen ""] 
         
        b = ["""","""",""twenty "",""thirty "",""forty "", ""fifty "",""sixty "",""seventy "",""eighty "",""ninety ""] 
         
        if (number < 20): 
            return a[number]  

        if (number < 100): 
            return b[number//10] + get_string(number%10) 
          
    return get_string(number//100) + ""hundred "" + get_string(number%100)",out,False,False,True,False
13126_out,"// algorithm to find the maximum value in a list of numbers
max_val = 0;
for (i = 0; i < list.length; i++) {
  if(list[i] > max_val) {
    max_val = list[i];
  }
}

// return the maximum value
return max_val; 
// returns 20",out,False,False,True,False
13307_out,"function sumOfArray(arr){
  var sum = 0;
  for(var i=0;i<arr.length;i++){
    sum+=arr[i];
  }
  return sum;
}",out,False,False,True,False
13366_out,"def even_odd(num): 
  if (num % 2 == 0): 
    print(""Even"")  
  else: 
    print(""Odd"")

# Driver code 
num = int(input(""Enter a number""))
even_odd(num)",out,False,False,True,False
13370_out,"def delete_odd_nums(arr): 
  for i in range(len(arr)): 
    if arr[i] % 2 != 0: 
      arr.remove(arr[i]) 
  return arr 

# Driver code
arr = [2,4,6,7,8,10] 
print(delete_odd_nums(arr))",out,True,False,True,False
13459_out,"<!DOCTYPE html>
<html>
<head>
<title>Registration Form</title>
</head>
<body>

<form action=""/form-submit"" method=""POST"">
  <div>
    <label for=""name"">Name:</label><br>
    <input type=""text"" id=""name"" name=""name"">
  </div>
  <div>
    <label for=""email"">Email:</label><br>
    <input type=""email"" id=""email"" name=""email"">
  </div>
  <div>
    <label for=""password"">Password:</label><br>
    <input type=""password"" id=""password"" name=""password"">
  </div>
  <div>
    <button type=""submit"">Submit</button>
  </div>
</form>

</body>
</html>",out,False,False,True,False
13593_out,"for i in range(1, 6):
    print(i)",out,False,False,True,False
13594_out,"def mean(num1, num2, num3, num4):
    return (num1 + num2 + num3 + num4) / 4",out,False,False,True,False
13663_out,"public boolean containsString(List<String> list, String s) { 
    return list.contains(s); 
}",out,False,False,True,False
13666_out,"int[] array = new int[100]; 
for (int i=0; i<array.length; i++) { 
    array[i] = i+1; 
};",out,False,False,True,False
13739_out,"if x > 10:
    print(""x is greater than 10"")
else:
    print(""x is less than or equal to 10"")",out,False,False,True,False
13799_out,"def mergeSortedArrays(arr1, arr2):
    outputArray = []
    arr1_Index = 0
    arr2_Index = 0

    while arr1_Index < len(arr1) and arr2_Index < len(arr2):
        if arr1[arr1_Index] < arr2[arr2_Index]:
            outputArray.append(arr1[arr1_Index])
            arr1_Index += 1
        else:
            outputArray.append(arr2[arr2_Index])
            arr2_Index += 1
    while arr1_Index < len(arr1):
        outputArray.append(arr1[arr1_Index])
        arr1_Index += 1
    
    while arr2_Index < len(arr2):
        outputArray.append(arr2[arr2_Index])
        arr2_Index += 1 
    return outputArray
    
arr1 = [1, 2, 5, 8]
arr2 = [3, 4, 6, 7]
mergeSortedArrays(arr1, arr2) # [1,2,3,4,5,6,7,8]",out,True,False,True,False
13800_out,"def reverse_string(s):
    """"""
    Function to reverse a string
    Arguments:
        s: string to be reversed
    Returns:
        string which is the reverse of given input
    """"""
    reversed_string = """"
    for char in s: 
        reversed_string = char + reversed_string
    
    return reversed_string

sample_string = ""Hello World!""
print(reverse_string(sample_string)) # ""!dlroW olleH""",out,False,False,True,False
13867_out,"[
    {
        ""name"": ""John"",
        ""age"": 20
    },
    {
        ""name"": ""Alice"",
        ""age"": 21
    },
    {
        ""name"": ""Bob"",
        ""age"": 22
    }
]",out,False,False,True,False
13903_out,".primary {
    color: #000000;
    font-weight: bold;
    font-size: 1.2rem;
}",out,False,False,True,False
13941_out,"def LCS(s1, s2): 
    m = len(s1) 
    n = len(s2)
  
    # declaring the array for storing the dp values 
    L = [[None]*(n + 1) for _ in range(m + 1)] 
  
    """"""Following steps build L[m + 1][n + 1] in bottom up fashion 
    Note: L[i][j] contains length of LCS of X[0..i-1] 
    and Y[0..j-1]""""""
    for i in range(m + 1): 
        # previoius row is all zeros, 
        # as no common sequence can make using them 
        for j in range(n + 1): 
            # first columns of all rows are 0 
            if i == 0 or j == 0 : 
                L[i][j] = 0
            elif s1[i-1] == s2[j-1]: 
                L[i][j] = L[i-1][j-1]+1
            else: 
                L[i][j] = max(L[i-1][j] , L[i][j-1]) 
  
    # L[m][n] contains the length of LCS of X[0..n-1] & Y[0..m-1] 
    return L[m][n]",out,False,False,True,False
13943_out,"def nextLargestPrime(num):
    #Increment the number by one
    num += 1

    #Loop until largest prime number is found
    while not isPrime(num):
        num += 1

    #Return the largest prime found
    return num",out,False,False,True,False
13944_out,"for i in range(1, 5):
    for j in range(1, i+1):
        print(i, end="" "")
    print()",out,False,False,True,False
13974_out,"<html>

<head>
  <title>Job Application Form</title>
</head>
<body>
  <h1>Job Application Form</h1>
  <form>
    <h2>Personal Information</h2>
    <label>Name:</label>
    <input type=""text"" name=""name"" />

    <label>Email:</label>
    <input type=""text"" name=""email"" />

    <label>Phone Number:</label>
    <input type=""number"" name=""phone"" />

    <h2>Education</h2>
    <label>Highest Level of Education:</label>
    <input type=""text"" name=""education"" />

    <label>School/College/University:</label>
    <input type=""text"" name=""educational_institute"" />

    <h2>Skills and Qualifications</h2>
    <label>Relevant Skills:</label>
    <input type=""text"" name=""skills"" />
    
    <label>Major Achievements in Relevant Field:</label>
    <input type=""text"" name=""achievements"" />

    <h2>Experience</h2>
    <label>Previous Employer:</label>
    <input type=""text"" name=""previous_employer"" />

    <label>Previous job role:</label>
    <input type=""text"" name=""previous_job_role"" />

    <h2>References</h2>
    <label>Reference 1 Name:</label>
    <input type=""text"" name=""reference_1"" />
    
    <label>Reference 1 Contact:</label>
    <input type=""text"" name=""reference_1_contact"" />
    
    <label>Reference 2 Name:</label>
    <input type=""text"" name=""reference_2"" />
    
    <label>Reference 2 Contact:</label>
    <input type=""text"" name=""reference_2_contact"" />

<input type=""submit"" value=""Submit"" />
</form>
</body>
</html>",out,False,False,True,False
13979_out,"<html>
   <div>
     <img src=""human_settlement_infographic.jpg"" alt=""human settlement infographic"">
   </div>
</html>",out,False,False,True,False
14254_out,"def gcd(a, b): 
    if a == 0 : 
        return b 
    return gcd(b % a, a) 

# prints 3 
print(""GCD is"", gcd(8, 27))",out,False,False,True,False
14404_out,"def sum_list(list):
    total = 0
    for num in list: 
        total += num
    return total

total_sum = sum_list([3, 4, 5, 6, 7]) 
print(total_sum) # Output: 25",out,True,False,True,False
14458_out,"Grandpa 
         - Mom 
                      - Sister 
                               - Son",out,False,False,True,False
14526_out,"def filter_string_list(lst, string):
    return [item for item in lst if string in item]

filtered_list = filter_string_list(list, string)
print(filtered_list) # prints ['orange', 'banana', 'watermelon', 'cherry']",out,False,False,True,False
14543_out,"s = 0
i_sq = 1
for i in range(1,n):
     for j in range(i_sq,i*i+1):
         if j % i == 0:
              s += j
     i_sq = i*i+1 # The inner loop starts at the square of i",out,False,False,True,False
14625_out,"for i in range(1,51):
    print(i)",out,True,False,True,False
14733_out,"for x in range(10):
    print(x, end="" "")",out,False,False,True,False
14736_out,"def find_max(lst):
    return max(lst)",out,False,False,True,False
14738_out,"import random

def predict_coin():
    if random.random() > 0.5:
        return ""Heads""
    else:
        return ""Tails""",out,False,False,True,False
14784_out,"def count_a(input_string):
    count = 0
    for char in input_string:
        if char == 'a':
            count += 1
    return count",out,False,False,True,False
14991_out,"• Electric cars provide numerous benefits:
    • Environmental friendliness:
        • Fewer emissions 
        • Less pollution  
    • Low maintenance costs: 
        • Reduced long-term costs
        • Lower fuel costs",out,False,False,True,False
15085_out,"def multiply_byTwo(arr):
  result_arr = []
  for ele in arr:
    result_arr.append(ele*2)
  return result_arr",out,False,False,True,False
15315_out,"class Student(): 
    def __init__(self, name, age, grade, gender): 
        self.name = name 
        self.age = age 
        self.grade = grade
        self.gender = gender",out,False,False,True,False
15483_out,"Algorithm SearchList (list, target_number): 

Set index = 0
Set found = False

While index < length of list and found = False:
    If list at index = target_number
        Set found = True
    Else
        Increment index
    
If found = True
    Print ""Number was found at index "" + index
Else
    Print ""Number was not found""",out,False,False,True,False
15487_out,"//Function to calculate the distance
def calculate_distance(x1, y1, x2, y2): 
    dist = ((x2 - x1)**2 + (y2 - y1)**2)**0.5 
    return dist 

# Driver code 
x1 = 2
y1 = 3
x2 = 10
y2 = 20

# Calculate distance 
d = calculate_distance(x1, y1, x2, y2) 
print(""Distance between two points is:"", d)",out,False,False,True,False
16129_out,"function calculateAreaRect($length, $width) {
    $area = $length * $width;
    return $area;
}",out,False,False,True,False
16326_out,"<html>
    <head>
    </head>
    <body>
        <p>Hello, world!</p>
    </body>
</html>",out,False,False,True,False
16608_out,"// Function to calculate average of numbers in a list

FUNCTION avg(list)

  total = 0
  // Iterate over all the elements in the list
  FOR i = 0 to list.length-1
     total += list[i] // add each item in the list to total
  END FOR

  RETURN total/list.length // return average

END FUNCTION",out,False,False,True,False
16660_out,"def number_converter(number): 
    #Hexadecimal Number System 
    hexadecimal = [""0"", ""1"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""A"", ""B"", ""C"", ""D"", ""E"", ""F""]
    
    # convert to binary 
    binary = bin(number).replace(""0b"","""")
    
    # index
    i = 0
    hexa = """"
    # While loop from 0 to the number of bits
    while(i < len(binary)):
        bit_four = binary[i : i + 4]
        remainder = bit_four % 16 #16 is Base 16 
        hexa += hexadecimal[remainder]
        i += 4
    return hexa 

res = number_converter(254)
print(res)
# output: FE",out,False,False,True,False
16661_out,"# Python code to find all permutations of a string  
def permutations(string): 
   
    # If string is empty 
    if len(string) == 0: 
        return [] 

    # If there is only one character in string 
    if len(string) == 1: 
        return [string] 
   
    l = [] # empty list  
   
    # Iterate the input string  
    for i in range(len(string)): 
        m = string[i] 

        # Extracting string here 
        remString = string[:i] + string[i+1:] 

        # Generating all permutations  
        for p in permutations(remString): 
            l.append([m] + p) 
  
    return l 
 
# Driver program  
string = ""abc"" 
print(permutations(string)) 
# output: [['a', 'b', 'c'], ['b', 'a', 'c'], ['b', 'c', 'a'], ['a', 'c', 'b'], ['c', 'a', 'b'], ['c', 'b', 'a']]",out,False,False,True,False
16852_out,"def area(side1, side2, side3): 
    s = (side1 + side2 + side3) / 2
    area = (s * (s - side1) * (s - side2) * (s - side3)) ** 0.5
    return area 
  
a = area(3, 4, 5) 
print(a) 
# output 6.0",out,False,False,True,False
16866_out,"def calculateTotalCost(items):
    total_cost = 0
    for item in items:
        total_cost += item['quantity'] * item['price']
    return total_cost",out,False,False,True,False
16897_out,"The algorithm should first tokenize the sentence given into individual words. After splitting the sentence, the algorithm can then use a frequency counter to keep track of how many times each word occurs. Once the counter has been created, the algorithm can then sort the counter array by the highest frequency word, and return the most frequently used word.

def most_frequent_words(sentence):
    words = sentence.split()
    word_freqs = {}
    
    # Create a counter to keep track of word frequency
    for word in words:
        if word in word_freqs:
            word_freqs[word] += 1
        else:
            word_freqs[word] = 1
    
    # Sort the counter array and return the most frequent words
    sorted_words = sorted(word_freqs.items(), key=lambda t: t[1], reverse=True)
    return sorted_words[0][0]",out,False,False,True,False
16899_out,"def generate_random_matrix(n, m):
    matrix = []
    for i in range(n):
        row = []
        for j in range(m):
            random_num = random.randrange(0, 10)
            row.append(random_num)
        matrix.append(row)
    return matrix",out,False,False,True,False
16926_out,"def factorial(n):
  if n == 0:
    return 1
  else:
    return n*factorial(n - 1)",out,False,False,True,False
17122_out,"""""""
This function searches an array for a particular number and returns an index if it is found. 

def search_array(arr, target): 
  for i in range(len(arr)): 
    if arr[i] == target: 
	  return i
 
  return -1
 
# Driver code 
array = [5, 10, 20, 25, 40] 
target = 20
index = search_array(array, target) 
 
if index != -1: 
  print(""Element found at index"", index) 
else: 
  print(""Element not found"") 
""""""",out,True,False,True,False
17124_out,"""""""
This method takes two numbers and multiplies them without using the * operator. 

def multiply(num1, num2): 
    if(num2 == 0): 
        return 0
    if(num2 > 0): 
        return (num1 + multiply(num1, num2-1)) 
    if(num2 < 0): 
        return -(num1 + multiply(num1, -num2-1)) 

if __name__ == ""__main__"":
    num1 = 7
    num2 = 9
    result = multiply(num1, num2)
    print(result)
""""""",out,False,False,True,False
17125_out,"//This Java program prints ""Hello World
public class HelloWorld {
   public static void main(String[] args) {
      System.out.println(""Hello World"");
   }
}",out,False,False,True,False
17168_out,"def is_substring(s1, s2): 
    if s1 in s2 or s2 in s1: 
        return True
    else: 
        return False",out,False,False,True,False
17356_out,"""""""
Create a program that uses the concept of object-oriented programming to create a car object
""""""

class Car:
    def __init__(self, make, model, year):
        self.make = make
        self.model = model
        self.year = year
    
    def get_price(self):
        return self.make + "" "" + self.model + "" "" + str(self.year)


Car1 = Car(""Toyota"", ""Camry"", 2020)

print(Car1.get_price())",out,False,False,True,False
17357_out,"""""""
Create a function to find the distance between two points
""""""

import math 

def distanceBetweenPoints(x1,y1,x2,y2): 
    
    dist = math.sqrt((x2 - x1)**2 + (y2 - y1)**2) 
      
    return dist 
  
# Driver Code 
x1,y1 = (3,2) 
x2,y2 = (8,10) 

print(""Distance between two points:"",distanceBetweenPoints(x1,y1,x2,y2))",out,True,False,True,False
17387_out,"for i in range(10):
    print(i)",out,False,False,True,False
17411_out,"#include <iostream>
using namespace std;

// Function to reverse the elements of an array 
void reverseArray(int arr[], int start, int end) 
{ 
    while (start < end) 
    { 
        int temp = arr[start];  
        arr[start] = arr[end]; 
        arr[end] = temp; 
        start++; 
        end--; 
    }  
} 
  
int main() 
{ 
    int arr[] = {1,2,3,4,5}; 
  
    // reverse the elements 
    reverseArray(arr, 0, 4); 
  
    // print the reversed array 
    for (int i=0; i<5; i++) 
        cout << arr[i] << "" ""; 
  
    return 0; 
}",out,False,False,True,False
17460_out,"#include <iostream>
 
int main()
{
    std::cout << ""Hello, World!"" << std::endl;
    return 0;
}",out,False,False,True,False
17715_out,"min = -3

// Function to determine the smallest number in an array 
function findMin(arr) { 
    let min = arr[0]; 
    for (let i = 0; i < arr.length; i++) { 
        if (arr[i] < min) 
            min = arr[i]; 
    }
    return min; 
} 
  
// // Sample input array 
let arr = [1, 5, 6, 8, -3, -2, 0]; 

// // Calling findMin function 
console.log(""Minimum element is: "" + findMin(arr));",out,False,False,True,False
17785_out,"#Find maximum in list
list1 = [1, 5, 10, 3, 9]
max_num = 0
for num in list1:
    if num > max_num:
        max_num = num
print('Maximum number in the list is', max_num)",out,True,False,True,False
17788_out,"#Find the divisors of a number

num = 24

divisors = []

for i in range(1, num+1):
    if (num % i == 0):
        divisors.append(i)

print(""The divisors of {} are {}"".format(num, divisors))",out,False,False,True,False
17850_out,"for (int i = 0; i < n; i++)
{
   for (int j = 0; j < i+1; j++)
    {
       cout << ""* "";
    }
    cout << ""\n"";
}",out,False,False,True,False
17903_out,"""""""
Write a program that finds the largest element in an array
""""""

def largest_element(arr):
    max_element = arr[0]
    
    for element in arr:
        if element > max_element:
            max_element = element
            
    return max_element

if __name__ == '__main__':
    arr = [2,4,6,8,10]
    print('The largest element in the array is ', largest_element(arr))",out,True,False,True,False
18048_out,"import nltk
from nltk import word_tokenize

#Split the text into words
words = word_tokenize(text)

#Initialize the stopwords list
stopwords = nltk.corpus.stopwords.words(""french"")

#Iterate over each word and determine if it is a French word
n_french = 0
for word in words:
    if word.lower() in stopwords:
        n_french += 1

#Calculate the percentage of French words to total words
total = len(words)
french_percentage = n_french/total

#If French vocabulary is greater than 50%, we can predict that the text is French
if french_percentage > 0.5:
    print(""The text is French"")
else:
    print(""The text is not French"")",out,False,False,True,False
18082_out,"list = [9,7,5,3,1]

# Python program to reverse a list

# input list 
lst = [1,3,5,7,9] 
  
# initializing an empty list to reverse the elements 
reverse_lst = [] 
  
# traversing the list 
for i in range(len(lst)-1,-1,-1): 
    reverse_lst.append(lst[i]) 
  
# printing the reversed list 
print(reverse_lst)",out,True,False,True,False
18107_out,"if inp % 2 == 0:
    print('The number is even')
else:
    print('The number is odd')",out,False,False,True,False
18167_out,"for i in range(1,101):
    if i % 3 == 0:
        print(i)",out,True,False,True,False
18204_out,"def sortAscending(nums): 
    #loop over the given list 
    for i in range(len(nums)): 
        #loop over the list for every item
        for j in range(i+1, len(nums)): 
            #if any item is greater than the item at this index, 
            #swap its positions
            if nums[i] > nums[j] : 
                nums[i], nums[j] = nums[j], nums[i] 
  
    #return the sorted list       
    return nums",out,False,False,True,False
18232_out,"my_dict = {
    1: ""a"",
    2: ""b"",
    3: ""c"",
    4: ""d"",
    5: ""e""
}",out,False,False,True,False
18234_out,"# Taking the user input 
my_list = [""Dog"", ""Cat"", ""Mouse"", ""Horse""]

# Iterating through the list and printing all elements 
for element in my_list:
    print (element)",out,False,False,True,False
18241_out,"func sentimentAnalysis(sentence):
  // Initialize the sentiment score
  sentimentScore = 0

  // Split the sentence into words
  words = sentence.split(' ')

  // Loop through each word
  for word in words
    // Check if word is in sentiment dictionary
    sentimentValue = checkSentimentDictionary(word)

    // Calculate sentiment score
    sentimentScore = sentimentScore + sentimentValue

  // Return the sentiment score
  return sentimentScore",out,False,False,True,False
18290_out,"def sort_ascending(arr): 
    for i in range(len(arr)): 
        for j in range(i+1, len(arr)): 
            if arr[i] > arr[j]: 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr",out,False,False,True,False
18338_out,".button {
    background-color: #00FF00;
    color: #FFFFFF;
    border: none;
    padding: 10px;
    cursor: pointer;
}",out,False,False,True,False
18350_out,"# Complete the following code snippet

def process_data(data):
    for x in data:
        output = process(x)
        store(output)
        print(output)",out,False,False,True,False
18577_out,"public class HappyBirthday {

    public static void main(String[] args) {
        System.out.println(""Happy birthday to you,"");
        System.out.println(""Happy birthday to you,"");
        System.out.println(""Happy birthday, dear <name>,"");
        System.out.println(""Happy birthday to you!"");
    }
}",out,False,False,True,False
18588_out,"<div class=""container"">
  <header>
    Header Content
  </header>
  <div class=""main-content"">
    Main Content
  </div>
  <aside>
    Aside Content
  </aside>
  <footer>
    Footer Content
  </footer>
</div>",out,False,False,True,False
18656_out,"def find_largest_and_smallest_numbers(numbers):
    largest_number = 0
    smallest_number = numbers[0]
    for number in numbers:
        if number > largest_number:
            largest_number = number
        elif number < smallest_number:
            smallest_number = number
    return largest_number, smallest_number",out,False,False,True,False
18701_out,"def calculate_total(basket):
    total = 0
    # Iterate over the items and add their cost to the total 
    for item in basket:
        total += item[1]
    return total",out,False,False,True,False
18705_out,"// Code implementing a linked list
 
class Node {
  constructor(value, next = null) {
    this.value = value;
    this.next = next;
  }
}
 
class LinkedList {
  constructor() {
    this.head = null;
  }
 
  insert(value) {
    //Insert Code Here
  }
 
  includes(value) {
    //Search Code Here
  }
 
  //Additional methods(append, insertBefore, insertAfter, kthFromEnd)
}",out,False,False,True,False
18994_out,"Animals:
  - Mammal:
    - Dog
    - Cat
  - Bird:
    - Hawk
    - Starling",out,False,False,True,False
19079_out,"def unique_list(list1): 
    unique_list = [] 
  
    for x in list1: 
        if x not in unique_list: 
            unique_list.append(x) 
    return unique_list
  
list1 = [1,2,3,3,3,3,4,5] 
print(unique_list(list1))",out,True,False,True,False
19148_out,"for i in range(1,5):
    print('*' * i)",out,True,False,True,False
19152_out,"def generate_ndarray(n):
    '''
    Generates a n-dimensional array of zeros
    '''
    ret = []
    for i in range(n):
        ret.append([0]*(2**i))
    return ret",out,False,False,True,False
19153_out,"def next_prime(n):
    '''
    Returns the next prime number after the number n
    Inputs:
        n (int): The number that the API should start from
    Outputs:
        The next prime number
    '''
    num = n + 1
    while True:
        for i in range(2, num):
            if num % i == 0:
                num += 1
                break
        else:
            return num",out,False,False,True,False
19156_out,"A simple algorithm for calculating the maximum value of a given array is to initialize a maximum variable with the first element of array, then iterate through the array elements while replacing the maximum value with the larger number whenever found. After the loop is finished, the maximum value is the maximum number of the array.

def find_maximum(arr):
    max_val = arr[0]
    for elem in arr:
        if elem > max_val:
            max_val = elem
    return max_val",out,False,False,True,False
19187_out,"def is_palindrome(string):
    # remove punctuation and whitespace
    cleaned_string = """".join(filter(str.isalnum, string)).lower() 
    # check if the string is the same in reverse
    return cleaned_string == cleaned_string[::-1]",out,False,False,True,False
19238_out,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)",out,False,False,True,False
19242_out,"def check_string_length(s):
    if len(s) > 20:
        return True
    else:
        return False`",out,False,False,True,False
19335_out,"def factorial(n): 
    if n == 0: 
        return 1
    else: 
        return n * factorial(n-1)",out,False,False,True,False
19424_out,"def scramble(word):
  output = """"
  while len(word) > 0:
    index = random.randint(0,len(word)-1)
    output += word[index]
    word = word[:index] + word[index+1:] 
  return output

scramble(""Hello"")  # Output: lleHo (or some other random rearrangement)",out,False,False,True,False
19461_out,"def printFibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n):  
            c = a + b 
            a = b 
            b = c 
        return b

printFibonacci(n)",out,False,False,True,False
19465_out,"def removeDuplicates(strings): 
    uniqueStrings = [] 
    for str in strings: 
        if str not in uniqueStrings: 
            uniqueStrings.append(str) 
    return uniqueStrings",out,False,False,True,False
19508_out,"""""""
Given an array of integers, this function will find the largest number:
""""""

def largest(arr):
    largest_num = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > largest_num:
            largest_num = arr[i]
    return largest_num

if __name__ == '__main__':
    arr = [1, 6, 5, 9, 8] 
    print(largest(arr)) #Output: 9",out,True,False,True,False
19509_out,"""""""
Given an array of numbers, this function will return an array containing the square of each number:
""""""

def square_array(arr):
    sq_arr = [] 
    for num in arr:
        sq_arr.append(num * num) 
    return sq_arr

if __name__ == '__main__':
    arr = [2, 3, 4]
    print(square_array(arr)) # Output: [4, 9, 16]",out,True,False,True,False
19603_out,"<!DOCTYPE html>
<html>
<head>
	<title>Pet Store</title>
	<style>
      body {
        font-family: 'Roboto', sans-serif;
        background-color: #E5E5EA;
      }
  </style>
</head>
<body>
  <div>
    <h1>Welcome to Our Pet Store</h1>
    <h2>We are the one-stop shop for all of your pet needs!</h2>
    <p>Whether you're interested in buying a pet for the first time, 
    looking for pet supplies, veterinarian services, or want to make sure 
    your pet feels loved with some treats, we've got you covered.</p>
    <p>Come visit us today to get all of your pet supplies, including 
    food, treats, toys, accessories, and more!</p>
  </div>
</body>
</html>",out,False,False,True,False
19626_out,"//Pseudocode
list = []

while True:
  input = get_input_from_user()
  list.append(input)
  response = ask_user_if_they_want_to_continue()
  if response == 'no':
    break",out,False,False,True,False
19639_out,"const reverseString = str =>
  str
    .split("" "")
    .reverse()
    .join("" "");
    
reverseString(""Hello World""); // Output: ""World Hello""",out,False,False,True,False
19665_out,"def is_odd_sized(arr):
    # check for valid input
    assert isinstance(arr, list), 'Array is not valid; must be a list.'
    # get the size of the array
    size = len(arr)
    # if the size is even, return False
    if size % 2 == 0:
        return False
    # if the size is odd, return True
    else:
        return True;",out,False,False,True,False
19669_out,"def remove_whitespace(s):
    # check for valid input
    assert isinstance(s, str), 'Input must be a string.'
    # remove whitespace characters
    s = s.replace("" "", """") 
    return s",out,False,False,True,False
19670_out,"def find_most_frequent(s):
    # check for valid input
    assert isinstance(s, str), 'Input must be a string.'
    # create a dictionary for character counts
    count_dict = {} 

    # find all characters
    for i in range(len(s)): 
        if s[i] in count_dict: 
            count_dict[s[i]] += 1
        else: 
            count_dict[s[i]] = 1

    # find most frequent character
    max_count = 0
    frequent_char = ''
    for char in count_dict:
        if count_dict[char] > max_count:
            max_count = count_dict[char]
            frequent_char = char

    # return most frequent character
    return frequent_char",out,False,False,True,False
19681_out,"def is_prime(n):
    if n <= 1: 
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True",out,False,False,True,False
19735_out,".italic {
    font-style: italic;
}",out,False,False,True,False
19736_out,"def textToInt(text):
    int_val = 0
    for char in text:
        int_val += ord(char)
    return int_val",out,False,False,True,False
19737_out,"def product():
    print(3 * 4)",out,False,False,True,False
19763_out,"<!DOCTYPE html>
<html>
<head>
    <title>Dark Theme Page</title>
    <style>
        body {
            background-color: #333333;
            color: #FFFFFF;
            font-size: 16px;
        }
        h1 {
            color: #FFFFFF;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Dark Theme Page</h1>
</body>
</html>",out,False,False,True,False
19764_out,"def find_longest_name(names): 
  longest_name = """"
  for name in names:
    if len(name) > len(longest_name):
      longest_name = name
  return longest_name
  
print(find_longest_name([""James"", ""Maria"", ""Robert""]))

# Output: Robert",out,False,False,True,False
19823_out,"<html>
  <head>
    <title>My Website</title>
    <link rel=""stylesheet"" type=""text/css"" href=""mystyle.css"">
  </head>
  <body>
    <h1>Welcome to My Website!</h1>
    <p>This is a website I have created using HTML and CSS.</p>
  </body>
</html>",out,False,False,True,False
19845_out,"#include <iostream>
#include <string>

using namespace std; 

string reverseString(string s) 
{ 
    int n = s.length(); 
  
    // Swap character starting from two 
    // corners 
    for (int i = 0; i < n / 2; i++) 
        swap(s[i], s[n - i - 1]); 
  
    return s; 
} 
  
// Driver program 
int main() 
{ 
    string s = ""hello""; 
    s = reverseString(s); 
    cout << ""Reversed string is : ""
         << s; 
    return 0; 
}",out,False,False,True,False
19862_out,"def convert_to_spoken(num):
    if not num:
        return 'zero'
    
    if num > 9999:
        print('Number must be smaller than 10,000')
        return
    
    singles = {1: 'one', 2: 'two', 3: 'three', 4: 'four',
        5: 'five', 6: 'six', 7: 'seven', 8: 'eight',
        9: 'nine'
    }
    
    teens = {10: 'ten', 11: 'eleven', 12: 'twelve',
        13: 'thirteen', 14: 'fourteen', 15: 'fifteen',
        16: 'sixteen', 17: 'seventeen', 18: 'eighteen',
        19: 'nineteen'
    }
    
    tens = {2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty',
        6: 'sixty', 7: 'seventy', 8: 'eighty', 9: 'ninety',
    }
    
    # create list of steps based on number length
    steps = [
        (' thousand', 1000000), (' hundred', 1000),
        ('', 0)
    ]
    
    # break the number into 3 digits each
    digits = []
    while num > 0:
        r = num % 1000
        digits.insert(0, r)
        num //= 1000
    
    spoken_num = []
    # convert the each 3-digit to spoken format
    for i, dig in enumerate(digits):
        if dig == 0:
            continue
        
        lbl, step = steps[i]
        a, b = divmod(dig, step)
        
        spoken_num.append(convert_to_spoken_3dig(a, b, 
            singles, teens, tens))
        spoken_num.append(lbl)
    
    return ' '.join(spoken_num)

def convert_to_spoken_3dig(a, b, singles, teens, tens):
    spoken_nums = []
    
    # convert hundreds place
    if a:
        spoken_nums.append(singles[a] + ' hundred')
    
    # convert tens place
    if b:
        if b in singles:
            spoken_nums.append(singles[b])
        elif b in teens:
            spoken_nums.append(teens[b])
        else:
            t, o = divmod(b, 10)
            spoken_nums.append(tens[t])
            if o:
                spoken_nums.append(singles[o])
    
    return ' '.join(spoken_nums)",out,False,False,True,False
19863_out,"def check_prime(num):
    if num < 2:
        return False

    # check only odd numbers
    if num % 2 == 0:
        return False
    
    for n in range(3, int(num**0.5)+1, 2):
        if num % n == 0:
            return False
    return True",out,False,False,True,False
19864_out,"elements = {
    'Hydrogen': 'H',
    'Helium': 'He',
    'Lithium': 'Li', 
    'Berylium': 'Be',
    'Boron': 'B',
    'Carbon': 'C',
    'Nitrogen': 'N',
    'Oxygen': 'O',
    'Fluorine': 'F',
    'Neon': 'Ne',
    'Sodium': 'Na',
    'Magnesium': 'Mg',
    'Aluminum': 'Al',
    'Silicon': 'Si', 
    'Phosphorus': 'P',
    'Sulfur': 'S',
    'Chlorine': 'Cl',
    'Argon': 'Ar',
    'Potassium': 'K',
    'Calcium': 'Ca'
}",out,False,False,True,False
19866_out,"def kthSmallest(arr, n, k): 
    # Sort the array 
    arr.sort() 
    # Return k'th element in the sorted array 
    return arr[k-1] 
  
# Driver Code 
# Output should be 5
arr = [12, 3, 5, 7, 19] 
n = len(arr) 
k = 3
print(kthSmallest(arr, n, k))",out,True,False,True,False
19867_out,"def celsius_to_fahrenheit(c): 
    # Formula to convert Celsius to Fahrenheit 
    f = (c * (9/5)) + 32 
    return f 
  
# Driver code 
# Output should be 77
c = 25
print(celsius_to_fahrenheit(c))",out,False,False,True,False
19868_out,"def distance(x1, y1, x2, y2): 
    # Calculate distance using Euclidean distance 
    dist = ((x2 - x1)**2 + (y2 - y1)**2)**0.5 
    return dist 
  
# Driver code 
# Output should be 5.0
x1 = 3
y1 = 4 
x2= 6
y2 = 8
print(distance(x1, y1, x2, y2))",out,False,False,True,False
19869_out,"def reverse_string(string): 
    # create a reverse string
    rev = string[::-1] 
  
    # print the reverse string
    print(rev) 
  
# driver code
# Output should be olleh
string = ""hello""
reverse_string(string)",out,False,False,True,False
19893_out,"""""""
Output the first 50 Fibonacci numbers
""""""

nterms = 50

# first tow terms
n1 = 0
n2 = 1
count = 0

# check if the number of terms is valid
if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence up to"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1,end=' , ')
       nth = n1 + n2
       # update values
       n1 = n2
       n2 = nth
       count += 1",out,False,False,True,False
19945_out,"def transform_vowels(input_string):
    output_string = ''
    vowels = ['a', 'e', 'i', 'o', 'u']
    for char in input_string:
        if char in vowels:
           output_string += char.upper()
        else:
           output_string += char
    return output_string",out,False,False,True,False
20006_out,"public class CompoundInterestCalculator
{
    public static double CalculateCompoundInterest(double principal, double rateOfInterest, int numberOfPeriods)
    {
        return (principal * Math.Pow(1 + (rateOfInterest/100), numberOfPeriods)) - principal;
    }
}",out,False,False,True,False
20026_out,"for (i = arraysize-1; i >= 0; i--)  
{ 
    printf(""%d "", array[i]); 
}",out,False,False,True,False
20030_out,"def printSorted(list):
    list.sort()
    for i in list:
        print(i)",out,False,False,True,False
20116_out,"def longestPallindrome(string):
 
    #Check if string is empty
    if (len(string) == 0):
        return """"
 
    #Define a data structure and store the length of the longest pallindrome
    pallindromes = [[0 for x in range(len(string))] for y in range(len(string))]
    max_length = 0
    start_pos = 0
    #Calculate the longest pallindrome
    for i in range(len(string)):
        pallindromes[i][i] = 1
        for j in range(i):
            if (string[j] == string[i] and (pallindromes[j+1][i-1] or i-j == 1)):
                pallindromes[j][i] = 1
                if (max_length < i - j + 1):
                    max_length = i-j + 1
                    start_pos = j
 
    return string[start_pos:start_pos+max_length]",out,False,False,True,False
20168_out,"# Program to fetch the account balance of the customer

def fetch_account_balance(name):
    # Access customer data from database
    customer_data = get_data_from_db(name)

    # Get customer's account balance
    customer_balance = customer_data['account_balance']

    # Return customer's account balance
    return customer_balance

# Fetch the account balance of John Smith
john_smith_balance = fetch_account_balance('John Smith')
print(john_smith_balance)",out,False,False,True,False
20194_out,"// For each number in list A, check whether it is present in the list again and if it is, replace it with -1
FOR i = 0 TO n 
  x = A[i] 
  FOR j = 0 TO n 
    IF x = A[j]
      A[j] = -1 
    END IF 
  END FOR 
END FOR",out,False,False,True,False
20261_out,"def gcd(a, b): 
    if (b == 0): 
        return a 
    return gcd(b, a % b)",out,False,False,True,False
20279_out,"""""""
Function to subtract two integers
""""""
def subtract_integers(a, b): 
    return a - b 

if __name__ == '__main__':
    a = 8
    b = 5
    result = subtract_integers(a, b)

    print(result)",out,False,False,True,False
20410_out,"h1 {
    font-family: sans-serif;
    font-size: 1.3em;
    color: red;
}",out,False,False,True,False
20470_out,"i. Introduction
ii. Impact on Teacher Involvement
    a. Decreased Opportunities for Professional Development
    b. Unmotivated Work Environment
iii. Impact on Teacher Salaries
    a. Lower Teacher Salaries
    b. Negative Impact on Teacher Retention
iv. Impact on Teacher Quality 
    a. Lower Quality of Education
    b. Poorly Prepared Teachers 
v. Impact on Student Learning
    a. Reduced Motivation and Engagement
    b. Lowered Academic Achievement
vi. Conclusion",out,False,False,True,False
20475_out,"function commonCharCount($str1, $str2) {
    $str1_arr = str_split($str1);
    $str2_arr = str_split($str2);
    $intersect = array_intersect($str1_arr, $str2_arr);
    return count($intersect);
}",out,False,False,True,False
20491_out,"function changeBackgroundColor(color) {
    document.body.style.backgroundColor = color;
}",out,False,False,True,False
20505_out,"def BubbleSort(list): 
    for i in range(len(list)-1): 
        for j in range(0, len(list)-1-i): 
            if list[j] > list[j+1]: 
                list[j], list[j+1] = list[j+1], list[j] 
    return list",out,False,False,True,False
20512_out,"def area_of_circle(radius): 
    """""" Computes the area of a circle with given radius. 
      
    Args: 
        radius (float): The radius of the circle 
      
    Returns: 
        float: The calculated area of the circle 
    """"""
    area = 3.14 * (radius**2) 
    return area",out,False,False,True,False
20515_out,"def factorial_of(n):
    """"""This function takes in a integer 'n' and returns its factorial.
    
    Args: 
        n (int): The number to calculate the factorial of
      
    Returns: 
        int: The calculated factorial of 'n'
    """"""
    if n == 0:
        return 1
    else:
        return n * factorial_of(n-1)",out,False,False,True,False
20522_out,"def descending_sort(arr):
    arr.sort(reverse = True)
    return arr",out,False,False,True,False
20663_out,"<html>
 <head>
  <title>Table</title>
 </head>
 <body>
  <table>
   <tr>
    <td>Cell 1</td>
    <td>Cell 2</td>
    <td>Cell 3</td>
    <td>Cell 4</td>
    <td>Cell 5</td>
   </tr>
  </table>
 </body>
</html>",out,False,False,True,False
20675_out,"def avg_3(num1, num2, num3): 
    return (num1 + num2 + num3)/3",out,False,False,True,False
20705_out,"""""""
Write a function to get the average temperature of a given city in celsius using OpenWeatherMap API.
""""""

import requests
import json 

def get_average_temp(city):
    key = 'Your OpenWeatherMap API key'
    url = 'http://api.openweathermap.org/data/2.5/weather?q={}&appid={}'.format(city, key)
    response = requests.get(url)
    data = json.loads(response.text)
    temperature = data['main']['temp']
    celsius = temperature - 273.15
    return celsius
    
if __name__ == '__main__':
    print(get_average_temp('Tokyo'))",out,False,False,True,False
20763_out,"print('I love coding!')
for i in range(4):
    print('I love coding!')",out,False,False,True,False
20882_out,"""""""
Code to detect the type of browser that is used to access the page
""""""

import requests 
import re 

def get_browser_type():
    user_agent = requests.get('http://www.useragentstring.com/').text
    reg_ex = r""(?<=User\sAgent\:\s)(.*?)(?=\))""
    m = re.search(reg_ex,user_agent)
    return m.group()
    
if __name__ == '__main__':
    print(get_browser_type())",out,False,False,True,False
20887_out,"""""""
Write a python script to parse a large tabular data file.
""""""

import pandas as pd

def parse_datafile(file_name):
    df = pd.read_csv(file_name, sep='\t', engine='python')
    return df

if __name__ == '__main__':
    print(parse_datafile(""data.txt""))",out,False,False,True,False
20940_out,"def reverse_string(s): 
    return s[::-1]",out,False,False,True,False
21009_out,"def sort_list(arr): 
    arr.sort(reverse=True) 
    return arr
sort_list([10, 30, 20, 50, 40])
Output: [50, 40, 30, 20, 10]",out,True,False,True,False
21204_out,"div {
    text-align: center;
}

#center me {
    text-align: center;
}",out,False,False,True,False
21325_out,"def is_palindrome(s):
    return s == s[::-1]",out,False,False,True,False
21327_out,"def has_capitals(s):
    for letter in s:
        if letter.isupper():
            return True
    return False",out,False,False,True,False
21357_out,"for i in range(1,11):
    print(i)",out,True,False,True,False
21379_out,"def square_num(num): 
    return num ** 2",out,False,False,True,False
21450_out,"<html> 
<head> 
<style> 
  .column {
    float: left;
    width: 50%; 
    padding: 15px;
  }
  
  .footer {
    padding: 15px; 
  } 

</style> 
</head> 
<body>
  <div class=""column""> 
    <!-- The content in the left column -->
  </div>
  <div class=""column""> 
    <!-- The content in the right column -->
  </div>
  <div class=""footer""> 
    <!-- Footer -->
  </div>
</body> 
</html>",out,False,False,True,False
21464_out,"def findMax(myList):
    maxNum = myList[0]
    for num in myList:
        if num > maxNum:
            maxNum = num
    return maxNum

print(findMax([8, 3, 5, 9, 1])) # Output: 9",out,True,False,True,False
21513_out,"def isAnagram(str1, str2): 
    # Getting length of both strings 
    n1 = len(str1) 
    n2 = len(str2) 
  
    # Sorting both strings to make sure they have same letters 
    str1 = sorted(str1) 
    str2 = sorted(str2) 
  
    # Comparing sorted strings 
    for i in range(0, n1): 
        if (str1[i] != str2[i]): 
            return False
  
    return True

# Driver function 
StringA = ""rat""
StringB = ""tar""

if isAnagram(StringA, StringB): 
    print(""Yes"")
else: 
    print(""No"")",out,False,False,True,False
21517_out,"list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Initialize the variable which stores the sum
sum_of_odd_numbers = 0

# Iterate through the list
for num in list_of_numbers: 
    # Check for odd numbers
    if num % 2 != 0: 
        # Add odd numbers to the variable
        sum_of_odd_numbers += num

# Print the sum of odd numbers
print(sum_of_odd_numbers)",out,True,False,True,False
21518_out,"#include <iostream>
using namespace std; 
  
// Function to find maximum in arr[] of size n 
int findMax(int arr[], int n) 
{ 
    int max = arr[0]; // Initialize maximum 
  
    for (int i = 1; i < n; i++) 
        if (arr[i] > max) 
            max = arr[i]; 
  
    return max; 
} 
 
int main() 
{ 
    int arr[] = {3, 4, 5, 6, 7}; 
    int n = sizeof(arr)/sizeof(arr[0]); 
 
    // Function calling 
    cout << ""Maximum element in the array is "" << findMax(arr, n); 
  
    return 0; 
}",out,False,False,True,False
21569_out,"//Function to print a string in reverse order //

function reversePrint(str){
  let reversedStr = '';

  for (let i = str.length - 1; i >= 0; i--) {
    reversedStr += str[i];
  }

  console.log(reversedStr);
}

reversePrint(""Hello World"");  // dlroW olleH",out,False,False,True,False
21598_out,"Merge Sort(A, n) 
    If n == 1 
        Return A 
    Else 
        Split A into two sub-arrays: A1 and A2 
        a = MergeSort(A1, n/2) 
        b = MergeSort(A2, n/2) 
        Return Merge(a, b) 
 
Merge(A1, A2) 
    Create an empty array: A 
    i = j = 0 
    While i < A1.length && j < A2.length 
        If A1[i] < A2[j] 
            A.append(A1[i]) 
            i++ 
        Else 
            A.append(A2[j]) 
            j++ 
    Add remaining elements of A1 and A2 to A 
    Return A",out,False,False,True,False
21679_out,"class Node:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None

def arrayToBinaryTree(arr):
    root = Node(arr[0])
    q = [root]
    i = 1
    while i < len(arr):
        node = q.pop(0)
        node.left = Node(arr[i])
        q.append(node.left)
        i += 1

        if i == len(arr):
            break
        
        node.right = Node(arr[i])
        q.append(node.right)
        i += 1

    return root",out,False,False,True,False
21826_out,"def is_leap_year(year): 
    """"""Returns True if the given year is a leap year.
  
    Args:
        year (int): A year represented in integer.
  
    Returns:
        bool: True if the given year is a leap year, otherwise False.
    """"""
    if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0: 
        return True 
    return False",out,False,False,True,False
21897_out,"<!DOCTYPE html>
<html>
    <head>
        <title>Landing page</title>
    </head>
    <body>
        <h1></h1>
        <p></p>
        <div>
            <p></p>
            <img src="""" alt="""">
        </div>
    </body>
</html>",out,False,False,True,False
21914_out,"<html>
  <head>
    <title>You're Invited to Register!</title>
  </head>
  <body>
    <p>Hey there!</p>
    <p>We'd like to invite you to join the amazing community that is using our service. You'll benefit from access to a range of amazing features and services.  </p>
    <p>Sign up now and take advantage of: </p>
    <ul>
      <li>Access to exclusive content</li>
      < li>A dedicated customer service team</li>
      < li>Unlock exclusive discounts</li> 
    </ul> 
   
    <p><a href=""http://example.com/registration"">Click here to register now!</a></p>
    <p>We look forward to welcoming you to our community.</p>
  </body>
</html>",out,False,False,True,False
21997_out,"An example of a nested loop in Python is as follows: 

for i in range(0, 5):
  for j in range(0, 3):
    print(""i is: "" + str(i) + "" and j is: "" + str(j))",out,False,False,True,False
22161_out,"for i in range(1, 101):
    print(i)",out,False,False,True,False
22238_out,"<xml>
   <head>
      <title>Test</title>
   </head>
   <body>
      <p>Welcome to my website</p>
   </body>
</xml>",out,False,False,True,False
22248_out,"def print_largest_number(array):
  largest = array[0]
  for i in array:
    if i > largest:
      largest = i
  print(largest)
  
print_largest_number(array)",out,False,False,True,False
22251_out,"def calculate_sum(n, m):
    s = 0
    for i in range(n, m+1):
        s += i
    return s",out,False,False,True,False
22255_out,"<html>
  <head>
    <title>MyStore - Online Shopping</title>
  </head>
  <body>
    <h1>Welcome to MyStore!</h1>
    <p>MyStore is an online store that offers a selection of products including clothing, electronics, and lifestyle items.</p>
    <h2>Shop Now</h2>
    <p>Our store sells a range of products. From the latest fashion trends to the latest mobile phones, we have something for everyone.</p>
    <h2>Easy Payment Options</h2>
    <p>We accept major credit cards and bank transfers, making it easy and secure to pay for your purchases.</p>
  </body>
</html>",out,False,False,True,False
22304_out,"def sum_primes(limit):
    sum = 0
    for number in range(2, limit + 1):
        if all(number % i != 0 for i in range(2, number)):
            sum += number
    return sum",out,False,False,True,False
22376_out,"new_list = [] 
for num in [1, 2, 3, 2, 4, 5]: 
    if num not in new_list: 
        new_list.append(num) 

print(new_list)  # Output: [1, 2, 3, 4, 5]",out,True,False,True,False
22418_out,"Instructions:
    1. Heat 2 tablespoons of olive oil in a large pan over medium heat and add the diced tomatoes. 
    2. Cook, stirring occasionally, until the tomatoes are softened.
    3. Bring a large pot of salted water to a boil, then add the spaghetti and cook until al dente. 
    4. Drain and return to the pan. 
    5. Stir in the tomato mixture and heat for 1-2 minutes to combine, stirring frequently",out,False,False,True,False
22448_out,"li.highlight { 
    /* style goes here */
}",out,False,False,True,False
22587_out,"def shuffle_list(list):
    """"""
    This function randomly shuffles the elements of a list.
    """"""
    import random
    n = len(list)
    for i in range(n-1, 0, -1): 
        j = random.randint(0, i+1)  
        list[i], list[j] = list[j], list[i] 
    return list",out,False,False,True,False
22590_out,"for char in 'stackoverflow':
    print(char)",out,False,False,True,False
22613_out,"def calculate_sum(a, b):
    # initialize result to 0
    result = 0
    
    # add two input numbers
    result = a + b
    
    # return result
    return result",out,False,False,True,False
22617_out,"apiVersion: v1
kind: Pod
metadata:
  name: pod-with-two-containers
  labels:
    app: pod-with-two-containers
spec:
  containers:
  - name: container1
    image: nginx
  - name: container2
    image: centos",out,False,False,True,False
22724_out,"class Person implements Person {
  private String name;  
  private int age;  

  public Person(String name, int age) {
    this.name = name;
    this.age = age;
  }

  public String getName() {
    return name;
  }

  public int getAge() {
    return age;
  }
}",out,False,False,True,False
22776_out,".rounded-border {
    border-radius: 10px; 
    border: 2px solid black; 
}",out,False,False,True,False
22781_out,"function searchArray(arr, target) {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] == target) {
            return i;
        }
    }
    return -1;
 }",out,False,False,True,False
22793_out,"def is_palindrome(word): 
    rev = ''.join(reversed(word)) 
  
    if (word == rev): 
        return True
    return False",out,False,False,True,False
22796_out,"def find_max(num1, num2): 
    if num1 > num2: 
        return num1 
    else: 
        return num2",out,False,False,True,False
22855_out,"def swap(a, b):
    return b, a",out,False,False,True,False
22857_out,"def find_max(lst):
    return max(lst)",out,False,False,True,False
23033_out,"def add(x, y):
    return x + y",out,False,False,True,False
23079_out,"public class Fibonacci { 
    public static void main(String args[]) {
        int n1=0,n2=1,n3;    
        System.out.print(n1+"" ""+n2);
        for (int i=2; i<10; i++)
        {    
            n3=n1+n2;    
            System.out.print("" ""+n3);    
            n1=n2;    
            n2=n3;    
        }   
    }
}",out,True,False,True,False
23140_out,"def multiply_by(data, multiplier):
    return [x*multiplier for x in data]",out,False,False,True,False
23142_out,"def max_number(arr):
    return max(arr)",out,False,False,True,False
23180_out,"public class MyDataStructure {
    private int length;
    private int array[];
 
    public MyDataStructure(int size) {
        this.length = size;
        array = new int[size];
    }
 
    public void add(int value) {
        if (length == array.length) {
            increaseSize();
        }
        array[length++] = value;
    }
 
    private void increaseSize() {
        int newLength = array.length * 2;
        int[] newArray = new int[newLength];
        for (int i = 0; i < length; i++) {
            newArray[i] = array[i];
        }
        array = newArray;
    }
 
    public void get(int index) {
        if (index < 0 || index >= length) {
            throw new IndexOutOfBoundsException();
        }
        return array[index];
    }
 
    public void remove(int value) {
        for (int i = 0; i < length; i++) {
            if (array[i] == value) {
                for (int j = i; j < length-1; j++) {
                    array[j] = array[j+1];
                }
                length--;
                return;
            }
        }
    }
}",out,False,False,True,False
23187_out,"The following algorithm can be used to calculate the power of a number: 

1. Take two inputs, a base number and an exponent
2. Initialize a variable result and set it to 1
3. Start a loop from 1 to exponent 
    a. Multiply result with the base number
4. Print result",out,False,False,True,False
23265_out,"def sort(arr): 
    n = len(arr) 
    for i in range(n): 
  
        min_idx = i 
        for j in range(i+1, n): 
            if arr[min_idx] > arr[j]: 
                min_idx = j 
          
        arr[i], arr[min_idx] = arr[min_idx], arr[i] 
  
arr = [5, 7, 3, 9, 10, 1] 
sort(arr) 

print (""Sorted array:"") 
for i in range(len(arr)): 
    print(""%d"" %arr[i]),",out,True,False,True,False
23344_out,"def longest_word(string): 
    # Split the string into a list of words
    words = string.split() 
  
    # Initialize the maximum length
    max_length = 0
  
    # Traverse the list of words
    for word in words: 
        # Calculate the length of each word
        word_length = len(word)
   
        # Keep track of the maximum length
        if(word_length > max_length): 
            max_length = word_length 
  
    # Return the maximum length of words 
    return max_length

# Driver's code 
input_string = 'this is a string containing words'
print(longest_word(input_string)) # Output: containing (Longest word of the given string)",out,False,False,True,False
23477_out,"if i == 0:
    z = 1 - y
    if z < 0:
        x = 3
    else:
        x = 4",out,True,False,True,False
23525_out,"string_length = 0

for char in string:
    string_length += 1

print(string_length)",out,False,False,True,False
23703_out,"def larger_of_two_args(arg1, arg2):
    if arg1 > arg2:
        return arg1
    else:
        return arg2",out,False,False,True,False
23706_out,"def is_anagram(str1, str2):
    char_map1 = {}
    for char in str1:
        if char in char_map1:
            char_map1[char] += 1
        else:
            char_map1[char] = 1

    char_map2 = {}
    for char in str2:
        if char in char_map2:
            char_map2[char] += 1
        else:
            char_map2[char] = 1

    if char_map1 != char_map2:
        return False
    else:
        return True",out,False,False,True,False
23774_out,"public static int factorial(int n) {
    if (n < 0) {
        return -1;
    }
    int result = 1;
    while (n > 0) {
        result = result * n;
        n = n - 1;
    }
    return result;
}",out,False,False,True,False
23786_out,"data_struct = [
    {'name': 'John', 'age': 25, 'height': 180.5}, 
    {'name': 'Alice', 'age': 27, 'height': 165.5}
]",out,False,False,True,False
24096_out,"def sumArray(arr): 
    total = 0
    for num in arr: 
        total += num 
    return total",out,False,False,True,False
24172_out,"""""""
Calculate the average of five numbers
""""""

def calculate_average(numbers):
    average = sum(numbers) / len(numbers)
    return average

if __name__ == '__main__':
    numbers = [3, 6, 9, 12, 15]
    average = calculate_average(numbers)
    print(f'The average of {numbers} is {average}.')",out,True,False,True,False
24173_out,"""""""
Return a string of the first 100 Fibonacci numbers
""""""

def fibonacci_sequence(limit):
    fibonacci = [1, 1]
    i = 2
    while i < limit:
        fibonacci.append(fibonacci[i - 1] + fibonacci[i - 2])
        i += 1
    return ' '.join(map(str, fibonacci))

if __name__ == '__main__':
    print(fibonacci_sequence(100))",out,True,False,True,False
24177_out,"""""""
Send a reminder email
""""""

import smtplib

def send_reminder_email(target_date, subject, message):
    # Set up email server
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('<username>', '<password>')

    # Create reminder email
    sender = '<sender@example.com>'
    receivers = ['<receiver@example.com>']
    body = f'Subject: {subject}\n\n{message}'
    server.sendmail(sender, receivers, body)

    # Schedule a reminder to be sent on the target date
    server.schedule_reminder(target_date, sender, receivers, body)

    # Close the connection to the email server
    server.quit()

if __name__ == '__main__':
    target_date = 'August 15, 2022'
    subject = 'Greeting Message'
    message = 'Happy Birthday!'
    send_reminder_email(target_date, subject, message)",out,False,False,True,False
24184_out,"function reverseString(str) {
    let reversedString = '';
    str.split('').forEach(char => reversedString = char + reversedString);
    return reversedString;
}",out,False,False,True,False
24187_out,".flex-container {
    display: flex;
    flex-direction: row; 
    flex-wrap: wrap;
    justify-content: center; 
    align-items: center;
}",out,False,False,True,False
24205_out,"function getIndex(arr, num) 
  idx := 0
  while (idx < arr.length && arr[idx] < num) 
    idx := idx + 1
  return idx",out,False,False,True,False
24303_out,"for i in range(1,5): 
    print(i)",out,True,False,True,False
24378_out,"function findMean(array) {
  let sum = 0;
  for (let i=0; i<array.length; i++) {
    sum += array[i];
  }
  return sum/array.length;
}",out,False,False,True,False
24389_out,"import random
import string

def generate_password():
    chars = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choices(chars, k=8))

print(generate_password())",out,False,False,True,False
24392_out,"def multiply_matrices(A, B):
    result = [[0, 0, 0],
              [0, 0, 0],
              [0, 0, 0]]

    for i in range(len(A)):
        for j in range(len(B[0])):
            for k in range(len(B)):
                result[i][j] += A[i][k] * B[k][j]
    return result",out,True,False,True,False
24393_out,"Dictionary structure:
{
    'Name': 'Jack',
    'Age': 21,
    'Occupation': 'student',
    'Location': 'New York' 
}",out,False,False,True,False
24447_out,"# Print the first 5 elements of a given list 
my_list = [1, 2, 3, 4, 5, 6, 7, 8]
 
# Using a for loop 
for i in range(5):
    print(my_list[i])

# Using list slicing
print(my_list[:5])",out,True,False,True,False
24660_out,"import java.time.LocalDateTime;
 
public class DateTimeExample {
   public static void main(String[] args) {
      LocalDateTime currentTime = LocalDateTime.now();
      System.out.println(currentTime);
   }
}",out,False,False,True,False
24782_out,"char_freq = {}

for char in 'Hello world!':
  if char in char_freq:
    char_freq[char] += 1
  else:
    char_freq[char] = 1

print(char_freq)",out,False,False,True,False
24891_out,"def fibonacci(n): 
  result = [0, 1] 
  for i in range(2, n): 
    result.append(result[i-1] + result[i-2]) 
  return result[:n]",out,True,False,True,False
24946_out,"def sum_array(arr): 
  total = 0
  for x in arr: 
    total += x 
  return total",out,False,False,True,False
25048_out,"algorithm SelectionSort(A : list of sortable items)
  // ... set input parameter
  n = length(A)    // ... calculate array size
 
  for i = 1 to n - 1
    // ... loop over items
    min = i
 
    for j = i + 1 to n
      // ... find minimum item
      if A[j] < A[min]
        min = j
    end for
 
    // ... swap minimum item
    if i != min
      swap(A[i], A[min])
    end if
 
  end for

end SelectionSort",out,False,False,True,False
25061_out,"def isCapital(char):
    if ord(char) >= 65 and ord(char) <= 90:
        return True
    else:
        return False",out,False,False,True,False
25149_out,"public static boolean containsDuplicates(int[] arr) {
    
    Set<Integer> set = new HashSet<Integers>();
    for(int i : arr) {
        if(set.contains(arr[i])) {
            return true;
        } else {
            set.add(i);
        }
    }
    return false;
}",out,False,False,True,False
25154_out,"def evaluate_expression(expression): 
      
    # a stack to store integer values 
    values = [] 
  
    # a stack to store operators. 
    ops = [] 
    i = 0
      
    while i < len(expression): 
          
        # Current token is a whitespace, 
        # skip it. 
        if expression[i] == ' ': 
            i += 1
            continue
              
        # Current token is an opening  
        # brace, push it to 'ops' 
        elif expression[i] == '(': 
            ops.append(expression[i]) 
              
        # Current token is a number, push  
        # it to stack for numbers. 
        elif expression[i].isdigit(): 
            val = 0
              
            # There may be more than one 
            # digits in the number. 
            while (i < len(expression) and
                expression[i].isdigit()): 
                  
                val = (val * 10) + int(expression[i]) 
                i += 1
                  
            values.append(val) 
  
        # Closing brace encountered, solve  
        # entire brace. 
        elif expression[i] == ')': 
              
            while len(ops) != 0 and ops[-1] != '(': 
                  
                val2 = values.pop() 
                val1 = values.pop() 
                op = ops.pop() 
                  
                values.append(performOp(val1, val2, op)) 
              
            # pop opening brace. 
            ops.pop() 
              
        # Current token is an operator. 
        else: 
              
            # While top of 'ops' has same or  
            # greater precedence to current 
            # token, which is an operator. 
            # Apply operator on top of 'ops'  
            # to top two elements in values stack. 
            while (len(ops) != 0 and
                precedence(ops[-1]) >= precedence(expression[i])): 
                  
                val2 = values.pop() 
                val1 = values.pop() 
                op = ops.pop() 
                  
                values.append(performOp(val1, val2, op)) 
                  
            # Push current token to 'ops'. 
            ops.append(expression[i]) 
          
        i += 1
          
     # Entire expression has been parsed at this  
    # point, apply remaining ops to remaining 
    # values. 
    while len(ops) != 0: 
          
        val2 = values.pop() 
        val1 = values.pop() 
        op = ops.pop() 
          
        values.append(performOp(val1, val2, op)) 
      
    # Top of 'values' contains result, return it. 
    return values[-1]",out,False,False,True,False
25476_out,"""""""
Code to reverse a given string
""""""

def reverse_string(string): 
    reversed_string = string[::-1] 
    print (reversed_string) 
    
if __name__ == '__main__': 
    reverse_string(""Programming"")",out,False,False,True,False
25642_out,"for i in range(1, 11):
    for j in range(1, 11):
        print(f'{i} x {j} = {i*j}')
    print()",out,False,False,True,False
25658_out,"#include <iostream> 
  
int main() 
{ 
    int n1 = 0, n2 = 1, n3, i, number; 
  
    std::cout << ""Enter the number of elements: ""; 
    std::cin >> number; 
    std::cout << n1 << "" "" << n2 << "" ""; // printing 0 and 1 
  
    for (i = 2; i < number; ++i) // loop starts from 2 because 0 and 1 are already printed 
    { 
        n3 = n1 + n2; 
            std::cout << n3 << "" ""; 
            n1 = n2; 
            n2 = n3; 
    } 
    return 0; 
}",out,False,False,True,False
25672_out,"def decimal_to_binary(num):
    binary = bin(num)
    binary = binary[2:]
    return binary
    
decimal_to_binary(20) # Output: '10100'",out,False,False,True,False
25774_out,"public class MyProgram {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}",out,False,False,True,False
25862_out,"// Function to double each element in an array
function doubleArray(arr) {
  //Loop over each element in the array
  for (var i = 0; i < arr.length; i++) {
    //Double the element
    arr[i] = arr[i] * 2;
  }
  //Return the modified array
  return arr;
}",out,False,False,True,False
25880_out,"def celsius_to_fahrenheit(temp_celsius):
    temp_fahrenheit = (temp_celsius * 1.8) + 32
    return temp_fahrenheit",out,False,False,True,False
25936_out,"class Airplane: 
    def __init__(self, model, capacity, speed): 
        self.model = model 
        self.capacity = capacity 
        self.speed = speed 
        
    def increase_speed(self, increment): 
        self.speed += increment 
        
    def decrease_speed(self, decrement): 
        self.speed -= decrement",out,False,False,True,False
25943_out,"def is_sorted_asc(list):
    for i in range(len(list) - 1):
        if list[i] > list[i + 1]:
            return False
    return True",out,False,False,True,False
25975_out,"//Prints a multiplication table of size n 
void printMultiplicationTable(int n) 
{ 
    // loop to print n rows 
    for (int i = 1; i <= n; i++) 
    { 
        // loop to print n columns 
        // changing column value j  
        for (int j = 1; j <= n; j++) 
        { 
            // printing table values  
            // writing jth values of ith row            
            System.out.print(i*j + ""   "");  
        } 
        // inceasing row value i 
        // for next row 
        System.out.println();  
    } 
}",out,False,False,True,False
26002_out,"if (number > 10):
    return ""Greater than 10""
else:
    return ""Less than 10""",out,False,False,True,False
26004_out,"for num in range(2, 8):
    if num % 2 != 0:
        print(num)",out,False,False,True,False
26016_out,"def greet_to(name):
    name = str(name)
    print(""Hello, "" + name + ""!"")",out,False,False,True,False
26156_out,"for i in range(1,51):
    if i%2 != 0:
        print(i)",out,True,False,True,False
26186_out,"import theano 
import theano.tensor as T

# define model parameters
W = theano.shared(value = 0.5, name = 'W')
b = theano.shared(value = 0.25, name = 'b')

# define input and output
x = T.dscalar('x')
y_hat = W * x + b 
    
# compile a prediction function
predict = theano.function(inputs=[x], outputs=y_hat)

# make the prediction
pred_sales = predict(target_variable)
print('Predicted sales: ', pred_sales)",out,False,False,True,False
26231_out,"<div class=""container"">
  <div class=""row"">
    <div class=""col-md-6"">
      <div class=""main-content"">
        <!-- main content goes here -->
      </div>
    </div>
    <div class=""col-md-6 sidebar-container"">
      <div class=""sidebar-content"">
        <!-- sidebar content goes here -->
      </div>
    </div>
  </div>
</div>",out,False,False,True,False
26275_out,"#include <iostream>
 
int main()
{
    int num1 = 2;
    int num2 = 4;
    int num3 = 6;
    int sum = num1 + num2 + num3;
 
    std::cout << ""The sum of 2, 4 and 6 is: "" << sum << std::endl;
 
    return 0;
}",out,False,False,True,False
26338_out,"for item in sequence: 
    statements(s)",out,False,False,True,False
26339_out,"def get_roman_numeral(number):
    if number == 1:
        return ""I""
    elif number == 2:
        return ""II""
    elif number == 3:
        return ""III""
    elif number == 4:
        return ""IV""
    elif number == 5:
        return ""V""
    elif number == 6:
        return ""VI""
    elif number == 7:
        return ""VII""
    elif number == 8:
        return ""VIII""
    elif number == 9:
        return ""IX""
    elif number == 10:
        return ""X""",out,False,False,True,False
26348_out,"""""""
Function to remove all punctuation from a given sentence
""""""

def remove_punctuation(sentence): 
    punctuations = ',;:”!'
    for x in sentence: 
        if x in punctuations: 
            sentence = sentence.replace(x, """") 
    return sentence

if __name__ == ""__main__"": 
 
    print(remove_punctuation(""I'm going to the store, see you there!"")) # Output: Im going to the store see you there",out,False,False,True,False
26349_out,"""""""
CSS code to create a divider line on a page
""""""

.divider {
    width: 100%;
    height: 2px;
    border-top: 1px solid #ccc;
    margin: 10px 0;
}",out,False,False,True,False
26350_out,"""""""
Make an API call to the given URL and print the output in the console
""""""

import requests 

url = ""https://data.cityofnewyork.us/resource/fhrw-4uyv.json"" 
response = requests.get(url) 

if response.status_code == 200: 
    data = response.json() 
    print(data)",out,False,False,True,False
26369_out,"[
    { key: 'dog', value: '' },
    { key: 'cat', value: '' },
    { key: 'horse', value: '' },
    { key: 'bird', value: '' }
]",out,False,False,True,False
26374_out,"import string

# define a function to remove punctuation from a text data string
def rem_punct(text):
    no_punct = """"
    for char in text:
        if char not in string.punctuation:
            no_punct = no_punct + char
    return no_punct

# define a function for counting number of words in a text data string
def word_count(words):
    count = 0
    for word in words.split():
        count+=1
    return count

# define a function for calculating the average length of words
def avg_word_length(words):
    count = 0
    total_length = 0
    for word in words.split():
        total_length += len(word)
        count+=1
    return total_length/count",out,False,False,True,False
26583_out,"def classify_by_color(objects):
    classified = {'red': [], 'yellow': [], 'black': []}
    for object in objects:
        name, color = object.split(' (')
        color = color[:-1]  # remove trailing )
        classified[color].append(name)
    return classified",out,False,False,True,False
26584_out,"def sort(nums):
    for i in range(len(nums)-1):
        min_index = i
        for j in range(i+1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        nums[i], nums[min_index] = nums[min_index], nums[i]
    return nums",out,False,False,True,False
26585_out,"def height(root): 
    if root is None: 
        return 0 
    else: 
        # Compute the depth of each subtree 
        left_depth = height(root.left) 
        right_depth = height(root.right) 
        #  Use the larger one 
        return max(left_depth, right_depth) + 1",out,False,False,True,False
26588_out,"def subtract_matrices(matrix1, matrix2):
    if len(matrix1) != len(matrix2) or len(matrix1[0]) != len(matrix2[0]):
        print('Error! Cannot subtract two matrices of different sizes!')
        return None 
    result = [[matrix1[i][j] - matrix2[i][j] 
              for j in range(len(matrix1[0]))] 
              for i in range(len(matrix1))] 
  
    return result",out,False,False,True,False
26654_out,"```python
if x < y:
    print('x is smaller than y')
else:
    print('x is larger than y')
```",out,False,False,True,False
26657_out,"```python
nums = [4, 8, 9, 15]
for num in nums:
    print(num)
```",out,True,False,True,False
26675_out,"import smtplib

# Establish a secure session with gmail's outgoing SMTP server 
# using your gmail account
server = smtplib.SMTP(""smtp.gmail.com"", 587)
server.starttls()
server.login('my_gmail_address@gmail.com', 'my_password')

# Send text message through SMS gateway of destination number
def send_sms(number, message):
    server.sendmail(
      'my_gmail_address@gmail.com',
      number,
      message
    )

def send_emails():
    # Set destination numbers
    numbers = ['1111111111']
      
    # Set content of the text message
    message = ""This is an automated message sent via email.""
    
    # send each SMS
    for number in numbers:
        send_sms(number, message)

# calling the main block
if __name__ == '__main__':
    send_emails()",out,False,False,True,False
26795_out,"def mayan_calendar(year):
    base_date = 1518 #representation of Dec 21, 2012 in Gregorian calendar
    days_in_year = 365 #days in a year
    cycles_in_year = 5 #Mayan calendar has 5 cycles of 260 days per year
    diff = year - base_date 
    mayan_year = diff*cycles_in_year
    return mayan_year",out,False,False,True,False
26797_out,"def design_chessboard(size):
    """"""
    This function creates a chessboard of the specified size
    """"""
    board = []
    # Create the board with alternating colors
    for i in range(size):
        row = []
        for j in range(size):
            if (i+j) % 2 == 0:
                row.append(""BLK"")
            else:
                row.append(""WHT"")
        board.append(row)
    return board",out,False,False,True,False
26844_out,"{
  ""books"": {
    ""book"": {
      ""title"": ""Alice in Wonderland"",
      ""author"": ""Lewis Carroll"",
      ""price"": 14.99
    }
  }
}",out,False,False,True,False
26914_out,"def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"")  
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c
            print(c)
        return b 
  
# Driver Program 
  
print(Fibonacci(20))",out,False,False,True,False
27001_out,"def findHCF(a,b): 
      
    if(b == 0): 
        return a 
    else: 
        return findHCF(b, a%b) 
    
a = int (input(""Enter first number : "")) 
b = int (input(""Enter second number : "")) 

print(""The H.C.F. is"", findHCF(a, b))",out,False,False,True,False
27007_out,"#include <iostream>
using namespace std; 

int main() 
{ 
    int num; 
    cout << ""Enter a number: ""; 
    cin >> num; 
    cout << ""Square of "" << num << "" is "" << num * num << endl; 
  
    return 0; 
}",out,False,False,True,False
27071_out,"def list_sum(sample_list):
    total = 0
    for num in sample_list:
        total += num
    return total

print(list_sum(sample_list))",out,False,False,True,False
27098_out,"def product(num1, num2):
    return num1 * num2",out,False,False,True,False
27166_out,"def calculateFactorial(n: int) -> int: 
    '''Returns the factorial of n (n!)

    Parameters:
        n (int): the number to calculate the factorial for.

    Returns:
        int: the factorial of n (n!)
    '''
    # base case: 0! = 1
    if n == 0: 
        return 1
    # recursive case: n! = n * (n - 1)!
    else: 
        return n * calculateFactorial(n-1)",out,False,False,True,False
27208_out,"def sum_squares(num: int):
    total = 0
    for i in num:
        total = total + i * i
    return total",out,False,False,True,False
27210_out,"The algorithm should loop through the two integers and add the corresponding digits, keeping track of the carry.

def add_integers(int1, int2): 
  result = """" # initialize result string 
  carry = 0 # set carry to 0 
  # loop through the two integers 
  for i in range(max(len(int1), len(int2))): 
    sum = carry 
    # loop through each digits of integer1 
    if i < len(int1): 
      sum += int(int1[i]) 
    # loop through each digits of integer2 
    if i < len(int2): 
      sum += int(int2[i]) 
    result += str(sum % 10) # store the result in result string 
    carry = sum // 10 # compute the carry 
 
  if carry: 
    result += str(carry) 
 
  return result",out,False,False,True,False
27517_out,"#include <stdio.h>

int main() 
{ 
    int arr[5] = {1, 2, 3, 4, 5}; 
  
    // Print the list in reverse order 
    for (int i = 4; i >= 0; i--) 
        printf(""%d\n"", arr[i]); 
  
    return 0; 
}",out,False,False,True,False
27539_out,"def get_area(length, width):
    area = length * width
    return area",out,False,False,True,False
27636_out,"def find_prime_numbers(n):
    primes = []
    
    for i in range(2, n + 1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(i)
    
    return primes",out,False,False,True,False
27639_out,"# Program to print all prime numbers in the given range 
start = 5
end = 15
  
for i in range(start, end + 1): 
    for j in range(2, i): 
        if (i % j) == 0: 
            break
    else: 
        print(i) 

# Output:
5
7
11
13",out,False,False,True,False
27646_out,"for item in list:
    print(item)",out,False,False,True,False
27698_out,"<html>
<head>
  <title>Library</title>
</head>
<body>
  <h1>Welcome to the Online Library!</h1>
  <div class=""container"">
    <div class=""row"">
      <div class=""col-sm-4"">
        <h2>Browse Categories</h2>
        <ul>
          <li><a href=""books.html"">Books</a></li>
          <li><a href=""magazines.html"">Magazines</a></li>
          <li><a href=""journals.html"">Journals</a></li>
          <li><a href=""movies.html"">Movies</a></li>
        </ul>
      </div>
      <div class=""col-sm-8"">
        <h2>New Releases</h2>
        <ul>
          <li><a href=""book1.html"">Book 1</a></li>
          <li><a href=""magazine1.html"">Magazine 1</a></li>
          <li><a href=""journal1.html"">Journal 1</a></li>
          <li><a href=""movie1.html"">Movie 1</a></li>
        </ul>
      </div>
    </div>
  </div>
</body>
</html>",out,False,False,True,False
27699_out,"<html>
<head>
  <title>Table Page</title>
</head>
<body>
  <h1>Table</h1>
  <table>
  <tr>
    <th>Country</th>
    <th>Capital</th> 
  </tr>
  <tr>
    <td>United States</td>
    <td>Washington D.C.</td>
  </tr>
  <tr>
    <td>France</td>
    <td>Paris</td>
  </tr>
  <tr>
    <td>Japan</td>
    <td>Tokyo</td>
  </tr>
  </table>
</body>
</html>",out,False,False,True,False
28073_out,"public static int powerOfTwo(int x) {
    if (x > 0) {
        return x * powerOfTwo(x-1);
    }
    return 1;
}",out,False,False,True,False
28157_out,"def add_vector(v1, v2):
    if len(v1) != len(v2):
        raise Exception(""Vectors are of different lengths"")
    result = []
    for i in range(len(v1)):
        result.append(v1[i] + v2[i])
    return result",out,False,False,True,False
28181_out,"const evenNumberArray = (array) => {
    let newArray = [];
    for (let i = 0; i < array.length; i++) {
        const num = array[i];
        if (num % 2 === 0) {
            newArray.push(num);
        }
    }
    return newArray;
}
 
const array = [1, 2, 3, 4, 5, 6, 7, 8];

console.log(evenNumberArray(array)); // Output: [2, 4, 6, 8]",out,True,False,True,False
28191_out,"The following script is designed to delete all users who have not been active within the past three months:

# Get list of all users
SELECT * FROM `users`

# Iterate through list
FOR user IN users:
    # Get list of all user's recent activity 
    SELECT * FROM `activity` WHERE `user_id` = user.id
    IF activity.timestamp > (3 months ago):
        user.delete()",out,False,False,True,False
28198_out,"def minNumb(a, b):
  if a < b:
    return a
  else:
    return b",out,False,False,True,False
28255_out,"h1 { 
    font-size: 18px;
    color: #000; 
}

body { 
    background-color: #f7f; 
}",out,False,False,True,False
28259_out,"The purpose of this function is to greet the user by displaying an alert with a personalized message. This can be rewritten as: 

function greetUser(name) {
    if (name) {
        alert(`Hello, ${name}!`)
    } else { 
        alert('Hello, there!')
    }
}",out,False,False,True,False
28299_out,"{
  ""$schema"": ""http://json-schema.org/draft-07/schema#"",
  ""title"": ""Customer Profile"",
  ""description"": ""A customer profile contains information about an individual customer"",
  ""type"": ""object"",
  ""properties"": {
    ""firstName"": {
      ""type"": ""string"",
      ""minLength"": 1
    },
    ""lastName"": {
      ""type"": ""string"",
      ""minLength"": 1
    },
    ""address"": {
      ""type"": ""object"",
      ""properties"": {
        ""street"": {
          ""type"": ""string""
        },
        ""city"": {
          ""type"": ""string""
        },
        ""state"": {
          ""type"": ""string""
        },
        ""zip"": {
          ""type"": ""string""
        }
      },
      ""required"": [""street"", ""city"", ""state"", ""zip""]
    },
    ""phoneNumber"": {
      ""type"": ""string""
    },
    ""email"": {
      ""type"": ""string""
    }
  },
  ""required"": [""firstName"", ""lastName"", ""address"", ""phoneNumber"", ""email""]
}",out,False,False,True,False
28328_out,"#include <iostream> 
  
// Function to print a triangle 
void printTriangle(int n) 
{ 
    // outer loop to handle number of rows 
    // n in this case 
    for (int i=0; i<n; i++) 
    { 
        // inner loop to handle number spaces 
        //values changing acc. to requirement 
        for (int j=n-i; j>1; j--)  
        { 
            // printing spaces 
            std::cout <<"" ""; 
        }  
          
        //  inner loop to handle number of columns 
        //  values changing acc. to outer loop 
        for (int j=0; j<=i; j++ ) 
        { 
            // printing stars 
            std::cout <<""* ""; 
        } 
          
        // ending line after each row 
        std::cout << std::endl; 
    } 
} 
  
// Driver Function 
int main() 
{ 
    int n = 5; 
    printTriangle(n); 
    return 0; 
}",out,False,False,True,False
28386_out,"nums = [3, 4, 9, 5]

# Assign largest_num to -infinity
largest_num = -float('inf')

# Iterate over nums
for num in nums:
    # Check if num is larger than largest_num
    if num > largest_num:
        # Assign num to largest_num
        largest_num = num

# Print out largest_num
print(largest_num)",out,True,False,True,False
28498_out,"def array_sum(arr):
  sum = 0
  for n in arr:
    sum += n
  return sum

print(array_sum([5, 10, 15]))",out,True,False,True,False
28502_out,"def detect_plagiarism(text):
  # Step 1: Split text into individual words
  text_words = text.split()
  
  # Step 2: Parse each word and compare to a database of words
  for word in text_words:
    if word in database:
      # Step 3: If a word matches, check for a specified number of words after it
      # Step 4: If a certain number of words are found in the same order, flag plagiarism
      next_words = text_words[text_words.index(word)+1:text_words.index(word)+5]
      if next_words == database[word]:
        return ""Plagiarism detected""

  # Step 5: If no plagiarism detected, return ""No plagiarism detected""
  return ""No plagiarism detected""",out,False,False,True,False
28503_out,"def convert_string_to_int(string):
    result = 0
    for c in string:
        result = result * 10 + int(c)
    return result

convert_string_to_int(""123456"")",out,False,False,True,False
28504_out,"def remove_word(text, word):
    text_words = text.split()
    result = ''
    for w in text_words:
        if w != word:
            result += w + ' '
    return result.strip()

remove_word(""Hello world!"", ""world"")",out,False,False,True,False
28582_out,"if temperature > 25: 
    print(""It is hot outside."")
else: 
    print(""It is a comfortable temperature."")",out,False,False,True,False
28637_out,"for (int i = 1; i <= 10; i++) {
    System.out.println(i);
}",out,False,False,True,False
28734_out,"function lengthOfLongestSubstring(str) { 
  
    // initialize a string variable and an array variable
    let currentString = "" "", 
        charIndexes = []; 
  
    // iterate through the string
    for (let i = 0; i < str.length; i++) { 
  
        // if the character is in the map, update the index to the current
        if (charIndexes.includes(str[i])) { 
            charIndexes = charIndexes.slice(charIndexes.indexOf(str[i]) + 1); 
        } 
  
        // add the character its index to the array
        charIndexes.push(str[i]); 
  
        // update the current string
        currentString = (currentString.length < charIndexes.length) ? charIndexes.join("""") : currentString; 
    } 
  
    // return the output
    return currentString.length; 
}",out,False,False,True,False
28960_out,"max = 0
for num in array:
    if num > max:
        max = num
print(max) # Outputs 7",out,False,False,True,False
28999_out,"for i in range(1, 11):
    print(5 * i, end=' ')
    print()",out,False,False,True,False
29000_out,"def sort_list(nums):
    for i in range(len(nums) - 1):
        min_idx = i
        for j in range(i + 1, len(nums)):
            if nums[j] < nums[min_idx]:
                min_idx = j
        nums[i], nums[min_idx] = nums[min_idx], nums[i]
    return nums",out,False,False,True,False
29037_out,"def palindromeCheck(x): 
    # Initialize reverse of number
    rev = 0 
    # Copy the original number 
    num = x 
    while (num > 0): 
        # Compute reverse 
        rev = rev * 10 + num % 10 
        # Decrement the original number 
        num = num // 10 
    # Check if original and reverse number is equal or not
    return (x == rev)",out,False,False,True,False
29091_out,"def reverse_string(s): 
    return s[::-1]",out,False,False,True,False
29092_out,"def greatest_of_two(x, y):
    if x > y:
        return x
    else:
        return y",out,False,False,True,False
29159_out,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)",out,False,False,True,False
29285_out,"def get_bmi(weight, height):
    """"""This function calculates and returns the body mass index of a person.
    
    Arguments:
    weight -- weight of the person in kilograms.
    height -- height of the person in meters.
    
    Returns:
    bmi -- calculated body mass index of the person.
    """"""
    
    bmi = weight / (height * height)
    return bmi",out,False,False,True,False
29286_out,"def closest_matching_words(words):
    """"""This function finds the closest matching words to a set of input words.
    
    Arguments:
    words -- list of input words. 
    
    Returns:
    closest_words -- list of closest matching words.
    """"""
    
    closest_words = []
    for word in words: 
        closest_n_words = get_closest_n_words(word)
        for c_word in closest_n_words: 
            closest_words.append(c_word)
   
    closest_words = list(set(closest_words)) #deduplication
    return closest_words",out,False,False,True,False
29313_out,"double calculateCircleArea(double radius)
{
    const double pi = 3.14159;
    return pi * radius * radius;
}",out,False,False,True,False
29496_out,"def factorial(n): 
    # Base Case 
    if n == 0: 
        return 1
  
    # Recursive case 
    return n * factorial(n-1)",out,False,False,True,False
29733_out,"def compress_string(string):
    """"""Compresses a string of text by replacing repeated characters with a single character and a count""""""
    
    compressed_string = """"
    current_char = string[0]
    count = 1
    for char in string[1:]:
        if char == current_char: # If the character is a repeat
            count += 1
        else: # If the character is not a repeat
            compressed_string += current_char + str(count)
            current_char = char
            count = 1
    # Add the last set of repeated characters
    compressed_string += current_char + str(count)
    return compressed_string

compress_string(""This is a random string. It has no purpose other than to test this function."")
""T1h1i1s1 1i1s1 1a1 1r1a1n1d1o1m1 1s1t1r1i1n1g1.1 1I1t1 1h1a1s1 1n1o1 1p1u1r1p1o1s1e1 1o1t1h1e1r1 1t1h1a1n1 1t1o1 1t1e1s1t1 1t1h1s1 1f1u1n1c1t1i1o1n1.1""",out,False,False,True,False
29779_out,"def find_common_elements(arr1, arr2):
    res = []
    for i in arr1:
        if i in arr2:
            res.append(i)
    return res",out,False,False,True,False
30001_out,"def reverseString(str): 
    reversedStr = [] 
    length = len(str) 
  
    for i in range(length - 1, -1, -1): 
        reversedStr.append(str[i]) 
        
    return """".join(reversedStr) 

print(reverseString(""Hello World""))",out,False,False,True,False
30149_out,"function subtract(x, y) {
    return x - y;
}",out,False,False,True,False
30463_out,"function printCurrentDate() {
    const date = new Date();
    const day = date.getDate();
    const month = date.getMonth();
    const year = date.getFullYear();
    console.log(`The current date is ${day}/${month+1}/${year}.`);
}",out,False,False,True,False
30468_out,"for i in range(1, 11):
  for j in range(1, 11):
    print(""{0} x {1} = {2:2}"".format(i, j, i*j))
  print("""")",out,False,False,True,False
30542_out,"def binary_to_decimal(binary):
    # initialize value to 0, which will be the output
    value = 0

    # Iterate through each binary digit, starting from the least significant bit
    for i in range(len(binary)-1, -1, -1):
        # If the binary digit is 1, add 2^i to the value, where i is the index of the binary digit
        if binary[i] == '1':
            value += 2**(len(binary)-i-1)

    return value",out,False,False,True,False
30621_out,"CREATE TABLE persons (
    name VARCHAR(50),
    age INT,
    gender VARCHAR(6)
);

INSERT INTO persons (name, age, gender) 
VALUES ('John', 25, 'Male'), ('Jane', 28, 'Female'), ('Billy', 32, 'Male');",out,False,False,True,False
30624_out,"def reverse_string(s): 
    return s[::-1]",out,False,False,True,False
30649_out,"def reverse_string(string):
    reversed_string = """"
    forchar in string: 
        reversed_string = char + reversed_string
    return reversed_string",out,False,False,True,False
30758_out,"{
    ""key1"": ""value1"",
    ""key2"": ""value2""
}",out,False,False,True,False
30866_out,"if len(username) <= 8:
    print(""Username too short"")
else:
    print(""Username is valid"")",out,False,False,True,False
31024_out,"function generateMultiplicationTable (number) {
  for (let i = 1; i <= 10; i++) {
    console.log(`${number} X ${i} = ${number * i}`);
  }
}

generateMultiplicationTable(7);",out,False,False,True,False
31025_out,"function validateParens(str) {
  let parenthesesCounter = 0;
  for (let i = 0; i < str.length; i++) {
    if (str[i] === '(') {
      parenthesesCounter++;
    } else if (str[i] === ')') {
      parenthesesCounter--;
    }

    if (parenthesesCounter < 0) {
      return false;
    }
  }
  return parenthesesCounter === 0;
}",out,False,False,True,False
31026_out,"function listFirstTenPrimes() {
  let primeNumbers = [];
  let index = 2;
  while (primeNumbers.length < 10) {
    let isPrime = true;
    for (let i = 2; i <= Math.sqrt(index); i++) {
      if (index % i === 0) {
        isPrime = false;
        break;
      }
    }
    if (isPrime) {
      primeNumbers.push(index);
    }
    
    index++;
  }
  
  return primeNumber;
}",out,False,False,True,False
31136_out,"def greaterNum(a, b):
    if (a > b):
        return a
    else:
        return b",out,False,False,True,False
31139_out,"<html>
  <header>
    <title>New Product Release</title>
  </header>
  <body>
    <h1>Introducing Our Newest Product!</h1>
    <p>At [company name], we are proud to announce the newest release to our product line: [product name].</p>
    <p>This exciting new product is perfect for [application]: it's [ability] and [feature 1], [feature 2], and [feature 3]. It's more convenient than ever and offers the best in [benefit 1] and [benefit 2].</p>
    <p>Plus, by purchasing [product name], you are helping us to [positive impact].</p>
    <p>Visit our website and get [product name] today before it's gone!</p>
  </body>
</html>",out,False,False,True,False
31184_out,"def Fibonacci(n):
    if n == 0:
        print(0)
    elif n == 1:
        print(1)
    else:
        num1 = 0
        num2 = 1
        for i in range(2,n+1):
            num3 = num1 + num2
            num1 = num2
            num2 = num3
        print(num3)",out,False,False,True,False
31269_out,"def find_maximum_number(numbers):
""""""
Given an array of integers, find and return the largest number

Args:
    numbers: a list of integers

Returns:
    maximum: the largest number in the given array

""""""
    maximum = numbers[0]
    for number in numbers:
        if number > maximum:
            maximum = number
        
    return maximum",out,False,False,True,False
31335_out,"<html>
  <head>
    <title>Web Page Optimization</title>
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <link rel=""stylesheet"" href=""style.css"" />
  </head>
  <body>
    <p>This is a web page that needs to be optimized.</p>
  </body>
</html>",out,False,False,True,False
31377_out,"def removeDuplicates(arr): 
    # create an empty list 
    res = [] 
   
    # iterate over original array 
    for i in arr: 
        # if element is not in the result already, add it
        if i not in res: 
            res.append(i) 
  
    # return the result 
    return res",out,False,False,True,False
31379_out,"def firstNonRepeatChar(string): 
    # create a dictionary of characters
    char_dict = dict() 
  
    # iterate over the string
    for i in string: 
        # check if the char is already in the dictionary
        if i in char_dict: 
            char_dict[i] += 1
        # add the char if it is not in the dictionary
        else: 
            char_dict[i] = 1
  
    # iterate for the first unique char 
    for i, j in char_dict.items(): 
        if j==1: # return the char
            return i 
  
    # return -1 when all chars are repeated
    return -1",out,False,False,True,False
31396_out,"def reverse_array(array):
    left = 0
    right = len(array) - 1

    while left < right:
        temp = array[left]
        array[left] = array[right]
        array[right] = temp

        left += 1
        right -= 1
        
    return array",out,False,False,True,False
31400_out,"for i in range(1, 11):
    print(i)",out,False,False,True,False
31439_out,"procedure bubbleSort( A : list of sortable items )
  n = length(A)
  repeat 
    swapped = false
    for i = 1 to n-1 inclusive do
      if A[i-1] > A[i] then
        swap(A[i-1], A[i])
        swapped = true
      end if
    end for
    n = n - 1
  until not swapped
end procedure",out,False,False,True,False
31585_out,"div {
    background-color: red;
    color: green;
}",out,False,False,True,False
31590_out,"int countOccurrences(string s, string find) 
{ 
    int count = 0; 
    for (int i=0; i<s.length(); i++)
    { 
        if(s.substr(i, find.length()) == find) 
            count++; 
    }
    return count; 
}",out,False,False,True,False
31612_out,"Deep in the heart of the forest, a ranger was on the hunt for something he had never seen before. As he ventured deeper, he found himself in an area that seemed untouched by mankind. Everywhere he looked, there was an untouched beauty he had never witnessed before. As he explored the area, he followed a deer's trail and stumbled upon a patch of flowers, their vivid colors amazing against the backdrop of the green trees and the light filtering through the leaves. He knew he had found something special.
     
Wondering what else he may find, the ranger continued his exploration. As he ventured further, he heard strange noises in the distance. Following the sound, he eventually found its source - a hidden waterfall hidden behind some large boulders. He was amazed by its beauty and was mesmerized by the cascading water. He wondered what other secrets the forest held and was determined to find out.",out,False,False,True,False
31656_out,"#include <iostream> 
  
// main function - 
// where the execution of program begins 
int main() 
{ 
    // prints hello world 
    std::cout<<""Hello World""; 
      
    return 0; 
}",out,False,False,True,False
31658_out,"#include<stdio.h> 
#include<string.h> 
  
// Function to reverse any sequence starting with pointer 
// begin and ending with pointer end 
void Reverse(char* begin, char* end) 
{ 
    char temp; 
    while (begin < end) { 
        temp = *begin; 
        *begin++ = *end; 
        *end-- = temp; 
    } 
} 
  
// Function to reverse words*/ 
void ReverseWords(char* s) 
{ 
    char* word_begin = s; 
  
    // Word boundary 
    char* temp = s; 
  
    // Revert string 
    Reverse(s, temp); 
  
    // Revert each word 
    while (*temp) { 
        temp++; 
        if (*temp == '\0') { 
            Reverse(word_begin, temp - 1); 
        } else if (*temp == ' ') { 
            Reverse(word_begin, temp - 1); 
            word_begin = temp + 1; 
        } 
    } 
} 
  
// Driver code 
int main() 
{ 
    char s[] = ""Welcome to Geeksforgeeks""; 
    char* temp = s; 
    ReverseWords(s); 
    printf(""%s"", s); 
  
    return 0; 
}",out,False,False,True,False
32222_out,"def common_chars(str1,str2):
    common_count = 0
    
    # Create a dictionary of characters counting 
    # the number of occurrences in both strings
    str1_dict = {}
    for char in str1:
        if char in str1_dict:
            str1_dict[char] += 1
        else:
            str1_dict[char] = 1
    
    # Do the same for str2 
    str2_dict = {}
    for char in str2:
        if char in str2_dict:
            str2_dict[char] += 1
        else:
            str2_dict[char] = 1
    
    # Check for common characters
    for char in str1_dict:
        if char in str2_dict:
            common_count += 1
    
    return common_count",out,False,False,True,False
32239_out,"for i in range(1,11):
    print(i)",out,True,False,True,False
32283_out,"// Assign the array to a variable
var arr = [3, 9, 8, 5, 1, 11];

// Create a function that takes unsorted array as argument
function sortNum(arr) {

// Create an empty array to store the sorted result
 let sortedArr = [];

// Get the highest number in the array
 let highestNum = Math.max(...arr);

// Loop until all the numbers have been sorted
 while (arr.length > 0) {
    // Iterate through the array and find the index of the highest number
    let highestNumIdx = arr.indexOf(highestNum)
 
    // Retroactively push the highest number to the sorted array
    sortedArr.push(arr[highestNumIdx]);

    // Delete the highest number from the original array
    arr.splice(highestNumIdx, 1);

    // Replace the highest number with a lower number
    highestNum = Math.max(...arr);
}

// Return the sorted array
 return sortedArr;
}

// Output: [11, 9, 8, 5, 3, 1]",out,True,False,True,False
32407_out,"# script to create a database and store customer data

# import necessary packages
import sqlite3

# create a database connection
db_connection = sqlite3.connect('customer_data.db')

# create a cursor object
cursor_obj = db_connection.cursor()

# create a customer table
cursor_obj.execute(""""""
CREATE TABLE customer (
    first_name text,
    last_name text,
    phone_number text,
    email_address text
)
"""""")

# insert data into table
cursor_obj.execute(""INSERT INTO customer VALUES ('John', 'Smith', '123-456-7890', 'john@example.com')"")
cursor_obj.execute(""INSERT INTO customer VALUES ('Sara', 'Jones', '143-456-7890', 'sara@example.com')"")

# save changes to the database
db_connection.commit()

# close the connection
db_connection.close()",out,False,False,True,False
32440_out,"[Flow Chart of Customer Feedback Process]
                                
Start                                           
|                                               
|-- Gather Customer Feedback-->Analyze Feedback-->Classify Feedback-->Create Solution-->Test & Refine Solution-->                                               
|                                               
End",out,False,False,True,False
32503_out,"for i in range(51):
  if i % 7 == 0:
    print(i)",out,False,False,True,False
32704_out,"def middle_element(arr):
    # Find the total length of the array
    array_length = len(arr) 
    # Initialize middle index of the array 
    middle_index = int((array_length-1)/2) 
    # Return the middle index of the array
    return arr[middle_index]
        
# Testing
arr = [1, 4, 6, 7, 10, 11]
print(middle_element(arr)) 
# Output: 7",out,True,False,True,False
32889_out,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
  
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
  
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 

print(""The next 10 Fibonacci numbers after n = 20 are:"") 
for i in range(21, 31):
    print(Fibonacci(i))",out,False,False,True,False
32895_out,"CREATE TABLE users(
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    age INT NOT NULL,
    gender VARCHAR(255) NULL,
    country VARCHAR(255) NULL,
    phone_number VARCHAR(20) NULL,
    PRIMARY KEY (id)
);",out,False,False,True,False
32963_out,"for num in range(10,31):
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print (num)",out,True,False,True,False
32989_out,"for i from 0 to 5
    print i",out,False,False,True,False
33009_out,"Syntax errors can occur if incorrect syntax is used, such as forgetting a colon at the end of a loop statement. For example:

for i in range(10)
    print(i) # missing a colon after the loop statement.",out,False,False,True,False
33010_out,"def SumArray(arr):
    sum = 0
    for element in arr:
        sum += element
    return sum",out,False,False,True,False
33105_out,"# Search a list and print all the odd numbers
list = [1,2,3,4,5,6,7,8]
for num in list:
    if num % 2:
        print(num)",out,True,False,True,False
33109_out,"count = 0
for num in [5, 9, 10, 15, 16, 20, 25, 30]:
    if num % 3 == 0 and num % 5 == 0:
        count += 1
print(count)
 
Output:
3",out,True,False,True,False
33141_out,"John  
|___ Lucy 
     |___ David 
     |___ Sam 
|___ Adam",out,False,False,True,False
33205_out,"<html>
<head>
    <title>My Website</title>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
</head>
<body>
    <h1>My Website</h1>
    <p>Welcome to my website!</p>
</body>
</html>",out,False,False,True,False
33296_out,"#include <stdio.h>  
int main() 
{ 
    float initial_velocity, final_velocity, time; 
    
    // input the initial velocity, final velocity and 
    // time interval
    printf(""Enter initial velocity, final velocity and time interval respectively: ""); 
    scanf(""%f%f%f"", &initial_velocity, &final_velocity, &time); 
  
    // Computing the current speed 
    float current_speed; 
    current_speed = (final_velocity - initial_velocity) / time; 
  
    // printing the value of current speed 
    printf(""Current Speed = %f m/sec"", current_speed); 
  
    return 0; 
}",out,False,False,True,False
33318_out,"def word_count(sentence): 
  words = sentence.split("" "") 
  word_dict = {}

  for word in words: 
    word_dict[word] = len(word) 
  
  return word_dict

sentence = ""Welcome to the world of Python programming""

print(word_count(sentence))

# Output 
# {'Welcome': 7, 'to': 2, 'the': 3, 'world': 5, 'of': 2, 'Python': 6, 'programming': 11}",out,False,False,True,False
33323_out,"8
       /  \
      1    10
     / \     \
    3   6    20",out,False,False,True,False
33385_out,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)",out,False,False,True,False
33387_out,"{
    ""name"": ""John Smith"",
    ""age"": 30,
    ""hobbies"": [""reading"", ""hiking"", ""chess""],
    ""is_married"": false
}",out,False,False,True,False
33447_out,"The list should return [“Orange”, “Banana”, “Apple”]

def remove_duplicates(lst): 
    unique_list = [] 
  
    for x in lst: 
        if x not in unique_list: 
            unique_list.append(x) 
  
    unique_list.sort(reverse=True) # sort in descending order
  
    return unique_list",out,False,False,True,False
33487_out,"user_info = {
    'name': 'John',
    'age': 20
}",out,False,False,True,False
33662_out,"<html>
<head>
  <title>Login / Signup Form</title>
</head>
<body>
  <!-- Form to log in an existing user -->
  <h1>Login</h1>
  <form action=""process_login.php"" method=""post"">
    <div>
      <label for=""username"">Username:</label>
      <input type=""text"" name=""username"" id=""username"">
    </div>
    <div>
      <label for=""password"">Password:</label>
      <input type=""password"" name=""password"" id=""password"">
    </div>
    <input type=""submit"" name=""submit"" value=""Login"">
  </form>
  <!-- Form to create a new account -->
  <h1>Signup</h1>
  <form action=""process_signup.php"" method=""post"">
    <div>
      <label for=""username"">Create a Username:</label>
      <input type=""text"" name=""username"" id=""username"">
    </div>
    <div>
      <label for=""password"">Create a Password:</label>
      <input type=""password"" name=""password"" id=""password"">
    </div>
    <div>
      <label for=""email"">Enter your Email:</label>
      <input type=""text"" name=""email"" id=""email"">
    </div>
    <input type=""submit"" name=""submit"" value=""Signup"">
  </form>
</body>
</html>",out,False,False,True,False
33665_out,"<html>
  <head>
    <title>Customer Feedback Survey</title>
  </head>
  <body>
    <h1>Customer Feedback Survey</h1>
    <form action=""process_feedback.php"" method=""post"">
      <h2>General Information</h2>
      <p>Please provide some information about yourself.</p>
      <div>
        <label for=""name"">Name:</label>
        <input type=""text"" name=""name"" id=""name"">
      </div>
      <div>
        <label for=""age"">Age:</label>
        <input type=""number"" name=""age"" min=""1"" max=""120"" id=""age"">
      </div>
      <div>
        <label for=""occupation"">Occupation:</label>
        <input type=""text"" name=""occupation"" id=""occupation"">
      </div>
      <h2>Feedback</h2>
      <p>Please describe the quality of our service. (1-5, 1=very poor, 5=excellent)</p>
      <div>
        <label for=""service_quality"">Service Quality:</label>
        <input type=""number"" name=""service_quality"" min=""1"" max=""5"" id=""service_quality"">
      </div>
      <p>Please rate the usability of our website. (1-5, 1=very poor, 5=excellent)</p>
      <div>
        <label for=""website_usability"">Website Usability:</label>
        <input type=""number"" name=""website_usability"" min=""1"" max=""5"" id=""website_usability"">
      </div>
      <p>Do you have any suggestions for improvement?</p>
      <div>
        <label for=""suggestions"">Suggestions:</label>
        <textarea name=""suggestions"" id=""suggestions""></textarea>
      </div>
      <input type=""submit"" name=""submit"" value=""Submit"">
    </form>
  </body>
</html>",out,False,False,True,False
33668_out,"<html>
  <head>
    <title>Basic HTML Page</title>
  </head>
  <body>
    <h1>Hello World!</h1>
    <p>This is a basic HTML page.</p>
  </body>
</html>",out,False,False,True,False
33744_out,"import java.util.Random;

public class DiceRoll{ 
    public static void main(String args[]){ 
        Random random = new Random(); 
        int rollResult = random.nextInt(6) + 1; 
  
        System.out.println(""Roll Result: ""+ rollResult); 
    } 
}",out,False,False,True,False
33799_out,"class Car():
    def __init__(self, make, model, year, color):
        self.make = make
        self.model = model
        self.year = year
        self.color = color
        
    def get_description(self):
        return f""This car is a {self.year} {self.color} {self.make} {self.model}""",out,False,False,True,False
33944_out,"def descending_sort(list): 
    # using bubble sort 
    n = len(list) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if list[j] < list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j] 

list = [7, 9, 5, 4, 6]
descending_sort(list) 
print(list)",out,True,False,True,False
33946_out,"<table>
  <tr>
    <th>Title</th>
    <th>Artist</th>
    <th>Year</th>
  </tr>
  <tr>
    <td>Despacito</td>
    <td>Luis Fonsi</td>
    <td>2017</td>
  </tr>
  <tr>
    <td>Shape Of You</td>
    <td>Ed Sheeran</td>
    <td>2017</td>
  </tr>
</table>",out,False,False,True,False
34099_out,"def shuffled_list(arr): 
 
    # Shuffling the array
    random.shuffle(arr) 
   
    # Print shuffled array 
    for i in arr: 
        print(i, end=' ') 
   
# Driver Code 
arr = [5, 1, 8, 7, 4, 8, 10] 

shuffled_list(arr)",out,True,False,True,False
34113_out,"def buy_book(bookID, shippingAddress, paymentMethod):
    """"""Purchase a book with given ID and ship it to the address provided""""""
    # Reject payment if the payment method is ""cash""
    if paymentMethod == ""cash"":
      return ""Payment not accepted""
    # Calculate shipping cost using the shipping address
    shippingCost = calculate_shipping_cost(shippingAddress)
    print(""Book purchased"")",out,False,False,True,False
34193_out,"def is_prime(n):
  if n <= 1:
    return False
  if n <= 3:  
    return True  
  if n % 2 == 0 or n % 3 == 0: 
    return False  
  i = 5
  while i*i <= n:
    if n % i == 0 or n % (i + 2) == 0: 
      return False
    i = i + 6
  return True",out,False,False,True,False
34251_out,"// Script to check whether a number is a prime number or not

// Step 1:
// Define a function called `isPrime`. 

function isPrime(num) {

// Step 2:
// Set two variables `i` and `isPrime` to `2` and `true` respectively
  
  let i = 2;
  let isPrime = true;

// Step 3:
// Check if the number is divisible by any number between 2 and itself.
  
  while (i < num) {
    if (num % i === 0) {
      isPrime = false;
      break;
    }
    i++;
  }

// Step 4: 
// Return the boolean value `isPrime`
  return isPrime;
}

// Step 5:
// Call the function with the value `5` 

const result = isPrime(5);

// Step 6:
// Print the result

console.log(result);

// Output: true",out,False,False,True,False
34288_out,"sum = 100 
 
# Calculate the total sum
 
total = 0
 
for x in [10, 20, 30, 40]:
    total += x
 
print(total)",out,True,False,True,False
34294_out,"def reverse(string): 
  str = """" 
  for i in string: 
    str = i + str
  return str
  
print(reverse(""Hello World""))

# Output: dlroW olleH",out,False,False,True,False
34313_out,"fruit_colors = {
    'apple': 'red',
    'banana': 'yellow',
    'pear': 'green',
    'grape': 'purple',
    'orange': 'orange',
}",out,False,False,True,False
34431_out,"class Dog:
    def __init__(self, name, breed, age):
        self.name = name
        self.breed = breed
        self.age = age

    def bark(self):
        print(""Woof!"")",out,False,False,True,False
34559_out,"// A function to detect whether the input image is a beach or office

String detectImageLabel(String image) 
{
   int i, j, beachLabelCount = 0, officeLabelCount = 0;

   // Traverse the image
   for (i = 0; i < image.length; i++) 
   {      
       // Count the number of pixels that contain beach labels
       if (image[i] == ""sandy beach"" || image[i] == ""ocean"" || image[i] == ""seashells"")
           beachLabelCount++;

       // Count the number of pixels that contain office labels
       if (image[i] == ""desk"" || image[i] == ""computer"" || image[i] == ""chair"")
           officeLabelCount++;
   }

   // The label of the image is the one with the most pixels
   if (beachLabelCount > officeLabelCount) 
       return ""Beach"";
   else 
       return ""Office"";
}",out,False,False,True,False
34790_out,"The Fibonacci sequence can be calculated using a recursive algorithm, which is as follows: 

def Fibonacci(n): 
  if n<=0: 
    return 0
  elif n==1: 
    return 1
  else: 
    return Fibonacci(n-1)+Fibonacci(n-2) 

This algorithm uses recursion to calculate the nth number of the Fibonacci sequence. The algorithm begins by setting up two cases, one for n = 0 and the other for n = 1. If n = 0 or 1, the function simply returns the value of n.  If n is larger than 1, the function recursively calls itself twice, once for n-1 and once for n-2. The result of these recursive calls is added together to compute the Fibonacci number for n.",out,False,False,True,False
34847_out,"<style> 
  .grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(6, 1fr);
    grid-gap: 10px;
  }

</style>

<div class=""grid-container"">
  <div> Content 1 </div> 
  <div> Content 2 </div> 
  <div> Content 3 </div> 
  <div> Content 4 </div> 
  <div> Content 5 </div> 
  <div> Content 6 </div>  
</div>",out,False,False,True,False
35011_out,"def add_numbers(a,b):
    return a + b",out,False,False,True,False
35012_out,"def is_perfect_square(n):
    root = math.sqrt(n)
    if int(root + 0.5) ** 2 == n: 
        return True 
    else: 
        return False",out,False,False,True,False
35059_out,"<div>
    <p>This is a paragraph. <a href=""https://www.example.com"">Click here</a></p>
</div>",out,False,False,True,False
35238_out,"def timesTwo(n: Int): Int = 
    n * n 

def timesThree(n:Int): Int = 
    n * n * n 

val numList = List (1,2,3,4,5)
val result = numList.map(timesTwo).map(timesThree)

// result: List[Int] = List(3, 24, 243, 1024, 3125)",out,True,False,True,False
35251_out,"""""""
Write a JavaScript program that returns the sum of the first n numbers.
""""""

function findSum(n) {
    let sum = 0;
    for(let i = 0; i <= n; i++) {
        sum += i;
    }
    return sum;
}

if (typeof module !== 'undefined') {
    module.exports = findSum;
}

console.log(findSum(10)); // 55",out,False,False,True,False
35307_out,"<table>
    <tr>
        <th>Name</th>
        <th>Age</th>
        <th>City</th>
    </tr>
    <tr>
        <td>John</td>
        <td>25</td>
        <td>New York</td>
    </tr>
    <tr>
        <td>Jane</td>
        <td>23</td>
        <td>Los Angeles</td>
    </tr>
    <tr>
        <td>Adam</td>
        <td>21</td>
        <td>Chicago</td>
    </tr>
</table>",out,False,False,True,False
35375_out,"<table>
  <tr>
    <th>Table title</th>
    <th>Col1</th>
    <th>Col2</th>
  </tr>
  <tr>
    <td>Ahmed</td>
    <td>10</td>
    <td>15</td>
  </tr>
  <tr>
    <td>Bob</td>
    <td>20</td>
    <td>25</td>
  </tr>
  <tr>
    <td>Samantha</td>
    <td>30</td>
    <td>35</td>
  </tr>
  <tr>
    <td>John</td>
    <td>40</td>
    <td>45</td>
  </tr>
</table>",out,False,False,True,False
35609_out,"<html>
  <head>
    <title>Profile page</title>
  </head>
  <body>
    <h1> John Smith </h1>
    <p><b> Name:</b> John Smith</p>
    <p><b> Age:</b> 32</p>
    <p><b>Occupation:</b> Painter</p>
  </body>
  </html>",out,False,False,True,False
35627_out,"#include <iostream> 
  
using namespace std; 
  
int main() 
{ 
    int i; 
  
    // Using for loop to print 0 to 9 
    for (i = 0; i < 10; i++) 
        cout << i << ""\n""; 
  
    return 0; 
}",out,False,False,True,False
35657_out,"""""""
Algorithm to sort an array of numbers into ascending order
""""""

def sort_ascending(nums):
    sorted_list = []
    while nums:
        lowest = nums[0]
        for num in nums:
            if num < lowest:
                lowest = num
        sorted_list.append(lowest)
        nums.remove(lowest)

    return sorted_list

if __name__ == '__main__':
    unsorted = [5, 2, 8, 1, 4]
    print(sort_ascending(unsorted)) #[1, 2, 4, 5, 8]",out,True,False,True,False
35658_out,"""""""
ALgorithm to classify data points using K-nearest neighbors
""""""

def knn(data_points, k):
    labels = []

    for point in data_points:
        distances = []
        for other_point in data_points:
            if point != other_point:
                distances.append(((point[0] - other_point[0]) ** 2 + (point[1] - other_point[1]) ** 2) ** 0.5)
        #sort the distances 
        sorted_distances = sorted(distances)
        #find the k-nearest neighbours
        k_nearest = sorted_distances[:k]
        #determine label using majority vote 
        labels.append(majority_vote(k_nearest))
        
    return labels 

def majority_vote(k_nearest):
    #code to find majority vote
    pass 

if __name__ == '__main__':
    data_points = [[1,2],[2,4],[2,3],[3,5],[3,1],[5,5],[5,3],[6,1],[6,2],[6,4]]
    k = 3
    print(knn(data_points, k))",out,True,False,True,False
35722_out,"def reverse_string(s): 
  str = """" 
  for i in s: 
    str = i + str
  return str 
  
print(reverse_string(""Hello World""))",out,False,False,True,False
35752_out,"def sort_reverse(array): 
  
    # Traverse array from last 
    # to first element 
    for i in range(len(array)-1, 0, -1): 
  
        # Find index of the maximum element 
        max_idx = 0
        for j in range(1, i+1): 
            if array[j] > array[max_idx]: 
                max_idx = j 
  
        # Swap maximum element with 
        # current element 
        array[i], array[max_idx] = array[max_idx], array[i] 
  
    return array 
  
# Driver code 
array = [10, 2, 5, -4, 92, 101]
print(sort_reverse(array))",out,False,False,True,False
35761_out,"button {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
}",out,False,False,True,False
35770_out,"function uniqueCharacters(string) { 
    
    let unique = true; 
    
    for (let i = 0; i < string.length; i++) { 
        for (let j = i + 1; j < string.length; j++) { 
            if (string[i] == string[j]) { 
                unique = false; 
            } 
        } 
    } 

    return unique; 
}",out,False,False,True,False
35777_out,"def printPrime(n): 
    # Initialize all entries of boolean array as true 
    prime = [True for i in range(n+1)] 
    p = 2
    while (p * p <= n): 
        if (prime[p] == True): 
            for i in range(p * p, n+1, p): 
                prime[i] = False
        p += 1
    # Print all prime numbers 
    print(""First"",n,""Prime numbers:"")
    for p in range(2, n): 
        if prime[p]:  
            print(p, end = ' ') 

# Driver Code 
n = 10   
printPrime(n)
// Output: First 10 Prime numbers: 2 3 5 7 11 13 17 19 23 29",out,False,False,True,False
36166_out,"def divide(x, y):
  try:
    return x / y
  except ZeroDivisionError:
    print(""Cannot divide by 0"")",out,False,False,True,False
36183_out,"function checkPrime(num) {
    //handle negative numbers
    if (num <= 1) return false;

    //check if it is divisible by any number other than itself and 1
    for (let i = 2; i < num; i++) {
        if (num % i === 0) {
            return false;
        }
    }
    return true;
}",out,False,False,True,False
36360_out,"age = 50
if age > 70:
    print(""You can get a senior discount"")
else if age > 65:
    print(""You can get a discounted rate"")
else:
    print(""Full price"")",out,False,False,True,False
36421_out,"def findMaxValue(lst): 
  # Initialize maximum element as first element 
  maxValue = lst[0]

  # Iterate through the list
  for num in lst: 
    # Compare maximum element with each element 
    # of the list and update maximum element 
    # if current element is greater than maximum element
    if num > maxValue: 
      maxValue = num 
  
  # Return maximum element 
  return maxValue",out,False,False,True,False
36461_out,"<table>
  <tr>
    <td>Column 1</td>
    <td>Column 2</td>
    <td>Column 3</td>
  </tr>
  <tr>
    <td>Row 1</td>
    <td>Row 1</td>
    <td>Row 1</td>
  </tr>
  <tr>
    <td>Row 2</td>
    <td>Row 2</td>
    <td>Row 2</td>
  </tr>
  <tr>
    <td>Row 3</td>
    <td>Row 3</td>
    <td>Row 3</td>
  </tr>
  <tr>
    <td>Row 4</td>
    <td>Row 4</td>
    <td>Row 4</td>
  </tr>
</table>",out,False,False,True,False
36549_out,"// define an array 
var myArray = [1, 2, 3, 4, 5]; 
  
// using for loop to iterate over the array 
for (var i = 0; i < myArray.length; i++) { 
    console.log(myArray[i]); 
}",out,True,False,True,False
36617_out,"import java.util.Scanner;

public class GreetingMessage {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    
    System.out.println(""Please enter your name:"");
    String name = scanner.nextLine();
    
    System.out.println(""Please enter your age:"");
    int age = Integer.parseInt(scanner.nextLine());
    
    System.out.println(""Hello "" + name + ""! It's great to see you at the age of "" + age + ""."");
  }
  
}",out,False,False,True,False
36660_out,"<html>
<head>
    <title>Area of Circle Calculator</title>
</head>
<body>
    <h1>Area of Circle Calculator</h1>
    <form action="""">
        <label for=""radius"">Radius </label>
        <input type=""number"" name=""radius"" min=""1"" max=""100"" step=""0.1"" placeholder=""Enter Radius"">
        </br>
        </br>
        <input type=""submit"" value=""Calculate"">
    </form>
    <script>
        function calculateArea(){
            let radius = document.getElementsByName(""radius"")[0].value;
            let area = Math.PI * radius * radius;
            alert(""The area of the circle is: "" + area);
        }
        document.getElementsByTagName(""input"")[1].onclick=calculateArea;
    </script>
</body>
</html>",out,False,False,True,False
36663_out,"import urllib.request
import re

def crawl_web(url):
    page = urllib.request.urlopen(url)
    html_code = page.read()
    links = re.findall(r'<a href=""(.*?)"">', str(html_code))
    return links

print(crawl_web(""https://www.example.com""))",out,False,False,True,False
36664_out,"data = {
  ""A"": [1, 2, 3],
  ""B"": [4, 5, 6],
  ""C"": [7, 8, 9]
}

def sum_dict_values(d):
  total = 0
  for v in d.values():
    total += sum(v)
  return total

print(sum_dict_values(data))

Output: 45",out,True,False,True,False
36665_out,"def count_char(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count

print(count_char(""hello world"", ""l""))

Output: 3",out,False,False,True,False
36768_out,"for(let i=0; i<array.length; i++){
    if(i % 3 === 0) {
        // do something
    }
}",out,False,False,True,False
36817_out,"sum = 0
for j in range(N-1):
    for i in range(N):
        sum += A[i][j]",out,False,False,True,False
37041_out,"def insert_element(lst, element):
    if not lst:
        lst.append(element)
    else:
        for i in range(len(lst)):
            if lst[i] > element:
                lst.insert(i, element)
                break
        else:
            lst.append(element)
    return lst",out,False,False,True,False
37120_out,"// Function to determine maximum element in an array 
def findMax(arr, n): 
    max = arr[0] 
  
    for i in range(1, n): 
        if arr[i] > max: 
            max = arr[i] 
    return max",out,False,False,True,False
37126_out,"<!DOCTYPE html>
<html>
<head>
    <title>Page Title</title>
</head>
<body>
    <h1>This is a heading</h1>
    <p>This is a paragraph.</p>
</body>
</html>",out,False,False,True,False
37144_out,"Web Developer
                     (5 years experience)       (other)
                  /           |           \
                  /            |            \
             Rohit          Amit          Sid 
            (top college)    (3 years exp)  (top college, 1 year exp)",out,False,False,True,False
37154_out,"def hello(name): 
    print(""Hello "" + name)",out,False,False,True,False
37304_out,"def reverse_string(string):
    return string[::-1]",out,False,False,True,False
37337_out,"# Program to calculate sum of list

list_of_numbers = [4, 8, 10, 15]

sum = 0

for num in list_of_numbers:
    sum += num

print(""Sum of list:"", sum) # Prints 37",out,True,False,True,False
37339_out,"# Program to find Longest Common Substring

def longest_common_substring(str1, str2):
  # calculate the length of both strings
  l1 = len(str1)
  l2 = len(str2)

  # initialise a matrix with all 0s
  matrix = [[0 for x in range(l2+1)] for x in range(l1+1)]

  # mark 1 for each common letter in both strings
  for i in range(l1):
    for j in range(l2):
      if str1[i] == str2[j]:
        matrix[i+1][j+1] = matrix[i][j] + 1
      else:
        matrix[i+1][j+1] = 0

  # get the maximum length of common substring 
  result = 0
  for i in range(l1+1):
    for j in range(l2+1):
      result = max(result, matrix[i][j])

  # return the result
  return result

# Driver program
str1 = ""abcdef""
str2 = ""abcxyz""
result = longest_common_substring(str1, str2)

print(""The longest common substring is:"", result) # Prints 3",out,True,False,True,False
37341_out,"# Program to check if one of the numbers is a perfect square

nums = [2, 3, 4, 6, 7]

# Boolean variable to store the result
result = False

# Go through the list and check if one of the numbers is a perfect square
for num in nums:
  if (num ** 0.5) % 1 == 0:
    result = True
    break

print(result) # Prints True",out,True,False,True,False
37374_out,"def remove_duplicates_from_list(list): 
    new_list = [] 
    for item in list: 
        if item not in new_list: 
            new_list.append(item) 
    return new_list",out,False,False,True,False
37379_out,"def rmse(actual_values, predicted_values):
    """"""
    Function to calculate the root mean squared error (RMSE)
    """"""
    #initializing the RMSE to 0
    rmse = 0
    # calculating RMSE
    for i in range(len(actual_values)):
        rmse += (pow(float(actual_values[i]) - float(predicted_values[i]), 2))
    rmse /= len(actual_values)
    rmse = pow(rmse, 0.5)
    return rmse",out,False,False,True,False
37384_out,"{
    ""a"": 2,
    ""b"": 1,
    ""c"": 1
}",out,False,False,True,False
37455_out,"def calculate_sum(numbers):
    try:
        sum = 0
        for num in numbers:
            sum += num
        return sum
    except TypeError:
        print(""The given input is not a list of integers."")",out,False,False,True,False
37540_out,"def closestPair(arr):
  diff = float('inf')
  num1 = 0
  num2 = 0
  for i in range(len(arr)-1):
    temp_diff = arr[i+1] - arr[i]
    if temp_diff < diff:
      diff = temp_diff
      num1 = arr[i]
      num2 = arr[i+1]
  return (num1, num2)",out,False,False,True,False
37583_out,"function checkElementExists(arr1, arr2) {
    for(var i = 0; i < arr1.length; i++) {
        for(var j = 0; j < arr2.length; j++) {
            if(arr1[i] == arr2[j]) {
                return true;
            }
        }
    }
    return false;
}",out,False,False,True,False
37617_out,"alg PrintPrimeNumbers(n):
  for i from 1 to n:
    set isPrime to true
    for j from 2 to i:
      if (i mod j == 0 and i != j):
        set isPrime to false
    if (isPrime == true):
      Print i",out,False,False,True,False
37637_out,"public class MyClass { 
  
    // Method 1  
    public void method1() { 
        // Code here
    } 
  
    // Method 2  
    public void method2() { 
        // Code here
    } 
  
    // Method 3  
    public void method3() {
        // Code here 
    }
}",out,False,False,True,False
37646_out,"def find_max(list): 
    max = list[0] 
    for i in list: 
        if i > max: 
            max = i 
    return max",out,False,False,True,False
37726_out,"class Animal:
    def __init__(self, name, age, species):
        self.name = name
        self.age = age
        self.species = species
   
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age

    def get_species(self):
        return self.species",out,False,False,True,False
37885_out,"def reverse_num(num):
    rev_num = 0
    while num > 0:
        rev_num = (rev_num * 10) + (num % 10)
        num = num // 10
    return rev_num",out,False,False,True,False
37886_out,"def reverse_list(head):
    prev = None
    curr = head
    
    while curr is not None:
        next_node = curr.next
        curr.next = prev
        prev = curr
        curr = next_node
    
    head = prev
    return head",out,False,False,True,False
37976_out,"def is_leap_year(year):
    if year % 400 == 0:
        return True
    elif year % 100 == 0:
        return False
    elif year % 4 == 0:
        return True
    else:
        return False",out,False,False,True,False
38035_out,"function capitalizeFirstLetter(word) {
    return word.charAt(0).toUpperCase() + word.slice(1);
}",out,False,False,True,False
38088_out,"for x in range(10):
    print(x)  # prints 0 through 9",out,False,False,True,False
38174_out,"for(int i=1; i<=10; i++) {
    System.out.println(i);
}",out,False,False,True,False
38230_out,"def count_vowels(string):
  vowels = ['a', 'e', 'i', 'o', 'u']
  count = 0
  for letter in string:
    if letter in vowels:
      count += 1
  return count",out,False,False,True,False
38358_out,"""""""
Create a program that plays Rock, Paper, Scissors
""""""

import random

choices = [""rock"",""paper"",""scissors""]

# Ask user to choose one of the choices
user_choice = input(""Please choose rock, paper, or scissors: "")

# Check that user choice is valid
while user_choice not in choices:
    user_choice = input(""Please choose rock, paper, or scissors: "")

# Computer chooses one at random
computer_choice = random.choice(choices)

# Determine the winner
if user_choice == computer_choice:
    print(""It's a tie!"")
elif user_choice == ""rock"" and computer_choice == ""scissors"":
    print(""You win!"")
elif user_choice == ""scissors"" and computer_choice == ""paper"":
    print(""You win!"")
elif user_choice == ""paper"" and computer_choice == ""rock"":
    print(""You win!"")
else:
    print(""Computer wins."")

# Print the result
print(""You chose: ""+user_choice+""\nComputer chose: ""+computer_choice)",out,False,False,True,False
38362_out,"""""""
Write a Python program to print all the prime numbers between 0 and 100.
""""""

# Store prime numbers
primes = []

# Generate a list of numbers between 0 and 100
numbers = list(range(0,101))

# Iterate through the numbers
for number in numbers:
    # Ignore 1
    if number == 1:
        continue
    # Set initial prime flag
    prime_flag = True
    # Iterate through numbers from 2 to current number
    for div in range(2, number):
        # If a divisor is found, set flag to false
        if number % div == 0:
            prime_flag = False
            break
    # If flag is still true, append number to primes list
    if prime_flag:
        primes.append(number)

# Print the list of primes
print(primes)",out,True,False,True,False
38562_out,"<html>
  <head>
    <title> CSS Demo </title>
    <style> 
      body {
        text-align: center;
        background-color: #F8F8F8;
        font-family: sans-serif;
      }

      h1 {
        font-size: 2rem;
        font-weight: bold;
        color: #0059b3;
        text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);
      }

      p {
        font-size: 1.5rem;
        font-weight: bold;
        color: #444;
      }
    </style>
  </head>
  <body>
    <h1> Welcome! </h1>
    <p> This is a CSS demo. </p>
   </body> 
</html>",out,False,False,True,False
38759_out,"<head>
    <title>My Web Page</title>
    <meta charset=""utf-8"" />
</head>",out,False,False,True,False
38767_out,"class A { 
  private var name: String = """" 
  func printName() { 
    print(name) 
  } 
  func setName(name: String) {
    self.name = name 
  }
}",out,False,False,True,False
38768_out,"def factorial(num): 
  if num == 0: 
    return 1 
  else: 
    return num * factorial(num-1)",out,False,False,True,False
38877_out,"class Apple:
    def __init__(self, color, size):
        self.color = color
        self.size = size
    
    def get_color(self):
        return self.color
    
    def get_size(self):
        return self.size",out,False,False,True,False
38902_out,"#include <iostream> 
  
using namespace std; 
  
int main() 
{ 
    int sum = 0, N; 
  
    cout << ""Enter the value of N: ""; 
    cin >> N; 
  
    for (int i = 1; i <= N; i++) 
    { 
        sum += i; 
    } 
  
    cout << ""Sum = "" << sum; 
  
    return 0; 
}",out,False,False,True,False
38906_out,"<table>
  <tr>
    <th>Header 1</th>
    <th>Header 2</th>
    <th>Header 3</th>
  </tr>
  <tr>
   <td>Column 1</td>
   <td>Column 2</td>
   <td>Column 3</td>
  </tr>
</table>",out,False,False,True,False
38926_out,"program SumOfNumbers {
  int total = 0;
  for (int i=1; i <= 100; i++) {
    total += i;
  }
  System.out.println(total);
}",out,False,False,True,False
39034_out,"I. Introduction 
    A. Definition of AI 
    B. Overview of AI applications 
                                                
II. Historical Development of AI
    A. 1950s-1960s: The Classical Era of AI 
    B. 1970s-1980s: The Expert System Era of AI 
    C. 1990s-2000s: The Machine Learning Era of AI 
                                
III. Current State of AI 
    A. Examples of AI technology in use today 
    B. Benefits of AI 
    C. Challenges of AI 
                                
IV. Future of AI 
    A. Possibilities of AI 
    B. Opportunities in AI 
    C. Ethical Considerations of AI 

V. Conclusion 
    A. Summary of advantages and challenges of AI 
    B. Potential risks of AI",out,False,False,True,False
39116_out,"def absolute_difference(x, y):
    return abs(x - y)",out,False,False,True,False
39118_out,"def count_occurrences(lst, element):
    return lst.count(element)",out,False,False,True,False
39146_out,"def discount_price(price, percentage):
    discounted_price = price - (price * percentage/100)
    return discounted_price",out,False,False,True,False
39183_out,"using System; 
  
public class GFG { 
    public static void Main() 
    { 
        Console.WriteLine(""A B C D E F G""); 
        Console.WriteLine(""H I J K L M N O P""); 
        Console.WriteLine(""Q R S T U V""); 
        Console.WriteLine(""W X Y and Z"");  
        Console.WriteLine(""Now I know my ABCs""); 
        Console.WriteLine(""Next time won't you sing with me"");  
    } 
}",out,False,False,True,False
39318_out,"![Flow chart for cell division](https://i.ibb.co/z4dp2H2/image-Cell-Division.jpg)
  
 
Interphase 
 
 
  ───► G1 Phase 
 
 
  │   └──► S Phase 
 
 
  └────► G2 Phase 
 
 
 
 
 
   ┌────► Prophase 
 
        
 
  │       └─► Metaphase 
 
 
  │       └──► Anaphase 
 
 
  └────► Telophase 
 
 
 
 
 
 Cytokinesis",out,False,False,True,False
39421_out,"import pandas as pd 

# Read file 
with open('file.txt', 'r') as f: 
    words = f.read().split() 

# Create dataframe 
words_df = pd.DataFrame(words, columns=['word']) 

# Count the occurrences of each word 
words_df['number of occurrences'] = words_df.groupby('word').transform('count') 

# Calculate the frequency of each word 
words_df['frequency'] = words_df['number of occurrences']/len(words) 

# Print the dataframe 
print(words_df)",out,False,False,True,False
39424_out,"{ 
    ""customer"": {
        ""name"": ""John Doe"",
        ""address"": ""123 Smith Street""
    },
    ""order"": { 
        ""total"": 100,
        ""products"": [
            {
                ""name"": ""Item A"",
                ""cost"": 10
            },
            {
                ""name"": ""Item B"",
                ""cost"": 30
            },
            {
                ""name"": ""Item C"",
                ""cost"": 60
            }
        ]
    }
}",out,False,False,True,False
39426_out,"from flask import Flask, request

app = Flask(__name__)

@app.route('/add_two_numbers', methods=['GET', 'POST'])
def add_two_numbers():
    if request.method == 'POST':
        # get data from the request 
        data = request.get_json()
        
        # extract the numbers from the data 
        num1 = data[""num1""]
        num2 = data[""num2""]
        
        # add the numbers 
        result = num1 + num2
        
        # return the response 
        return {'result': result}
    
if __name__ == '__main__':
    app.run()",out,False,False,True,False
39787_out,"for (int i = 0; i < array_size; i++)
{
    for (int j = 0; j < array_size; j++)
    {
        cout << array[i][j] << "" "";
    }
    cout << endl;
}",out,False,False,True,False
39959_out,"def output_params(number, string):
    """"""This function takes two parameters, a number and a string and outputs
    ""The number is [number] and the string is [string]"".

    :param number: An integer
    :param string: A string
    :return: The output string
    """"""
    output = f""The number is {number} and the string is {string}""
    return output

print(output_params(42, ""John"")) # The number is 42 and the string is John. The output is accurate.",out,False,False,True,False
39960_out,"class Node:
    """"""A Node object containing a data, pointer and other related information.""""""

    def __init__(self, data):
        """"""Initializes a Node object with its data.

        Attributes:
            data: A value that this node holds.
            next: A pointer to the next node in the data structure.
            previous: A pointer to the previous node in the data structure.
        """"""
        self.data = data
        self.next = None
        self.previous = None",out,False,False,True,False
39961_out,"def mean(arr):
    """"""Calculate the mean of a given array of numbers.

    :param arr: An array of numbers
    :return: The mean of the array
    """"""
    total = 0

    for num in arr:
        total += num

    mean = total / len(arr)
    return mean

print(mean([1, 4, 8, 13, 28, 34])) # The mean is 14.833333333333334. The output is accurate.",out,True,False,True,False
40137_out,"<?php
function containsNumber($string) {
    if (preg_match('/\\d/', $string)) {
        return true;
    }
    return false;
}
?>",out,False,False,True,False
40164_out,"def classify_word(word): 
  if word.endswith('ed'): 
    return 'verb'
  elif word.endswith('ing'): 
    return 'verb'
  elif word.endswith('ly'):
    return 'adjective'
  else: 
    return 'noun'",out,False,False,True,False
40433_out,"// Initialize two pointers to the start and end of the array 
int left = 0; 
int right = array.length - 1; 

// Loop through the array until left and right pointers cross 
while (left < right) { 

// Move left pointer until negative integer is found 
while (array[left] >= 0 && left < right) { 
    left++; 
} 

// Move right pointer until negative integer is found 
while (array[right] < 0 && left < right) { 
    right--; 
} 

// Swap positive and negative integers 
if (left < right) { 
    int temp = array[left]; 
    array[left] = array[right]; 
    array[right] = temp; 
} 

}
// Return rearranged array 
return array;",out,False,False,True,False
40510_out,"def password_strength(input_password):
    # Initializing the strength variable to 0
    strength = 0 
    # Checking the length of the password 
    if len(input_password) >= 8:
        strength += 1 
    # Checking for uppercase characters 
    if any(char.isupper() for char in input_password): 
        strength += 1
    # Checking for lowercase characters 
    if any(char.islower() for char in input_password): 
        strength += 1
    # Checking for special characters 
    if any(char in '!@#$%^*_+-=' for char in input_password): 
        strength += 1
    # Returning the strength 
    return strength",out,False,False,True,False
40665_out,"int sumArray(int arr[], int n) { 
    int sum = 0; 
    for (int i = 0; i < n; i++) 
        sum += arr[i]; 
    return sum; 
}",out,False,False,True,False
40668_out,"void getCharCodes(string str) {
    for (int i = 0; i < str.length(); i++) {
        cout << ""Character "" << str[i] << "" has the code: "" << (int)str[i] << endl;
    }
}",out,False,False,True,False
40669_out,"bool isAnagram(string str1, string str2) {
    if (str1.length() != str2.length()) 
        return false; 
    sort(str1.begin(), str1.end()); 
    sort(str2.begin(), str2.end()); 
  
    for (int i = 0; i < str1.length(); i++) 
        if (str1[i] != str2[i]) 
            return false; 
  
    return true; 
}",out,False,False,True,False
40670_out,"#include<iostream> 
  
using namespace std; 
  
void pattern(int n) 
{ 
    int i, j; 
   
    // outer loop to handle number of rows 
    for (i = 0; i < n; i++) { 
  
        // inner loop to handle number of columns  
        for (j = 0; j <= i; j++) { 
            // printing stars 
            cout << ""* ""; 
        } 
  
        // ending line after each row 
        cout << endl; 
    } 
} 

// Driver function 
int main() 
{ 
    int n = 5; 
    pattern(n); 
    return 0; 
}",out,False,False,True,False
40684_out,"""""""
Design a program that calculates the distance between two points 
given the coordinates of the points.

import math

def calc_distance(point1, point2):
    x1, y1 = point1
    x2, y2 = point2
    dist = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    return dist

if __name__ == ""__main__"":
    pointA = (2, 3)
    pointB = (5, 7)
    dist = calc_distance(pointA, pointB)
    print(""The distance between Point A and Point B is"", dist)

""""""",out,False,False,True,False
40689_out,"""""""
Generate an HTML page with a header and a paragraph of text.

<html>
<head>
    <title>Welcome to my webpage</title>
</head>
<body>
    <h1>Welcome to my webpage</h1>
    <p>This is an example of a webpage created using HTML</p>
</body>
</html>
""""""",out,False,False,True,False
40690_out,"""""""
Develop a program to find all the prime numbers in a given range.

def find_primes(start, end):
    # Initialize a list
    primes = []
    for num in range(start, end + 1):
        # prime numbers are greater than 1 
        if num > 1:
            for i in range(2, num): 
                if (num % i) == 0: 
                    break 
            else: 
                primes.append(num) 
    return primes

if __name__ == ""__main__"":
    start, end = 4, 20
    prime_list = find_primes(start, end)
    print(""The prime numbers between"", start, ""and"", end, ""are"", prime_list)

""""""",out,False,False,True,False
40691_out,"""""""
Create a program to calculate the frequency of a word in a sentence.

def calculate_word_frequency(sentence, word):
    words = sentence.split()
    word_count = words.count(word)
    return word_count

if __name__ == ""__main__"":
    sentence = ""This is an example sentence"" 
    word = ""is""
    word_count = calculate_word_frequency(sentence, word)
    print(""The frequency of the word '"" + word + ""' in the sentence is"", word_count)
""""""",out,False,False,True,False
40706_out,"grades = [""A"", ""B"", ""C"", ""D""]

for grade in grades:
    if (grade == ""A""):
        print(""Excellent"")
    elif (grade == ""B""):
        print(""Good"")
    elif (grade == ""C""):
        print(""Average"")
    elif (grade == ""D""):
        print(""Poor"")",out,False,False,True,False
40800_out,"The bug in the code is that the function does not return the sum of two numbers. To fix this, we can add a return statement to the function: 

def add_two_numbers(x, y):
    return x + y",out,False,False,True,False
40830_out,"class MathOperator:
    def __init__(self,a,b):
        self.a = a
        self.b = b
        
    def add(self):
        return self.a + self.b
    
    def subt(self):
        return self.a - self.b
    
    def mult(self):
        return self.a * self.b
    
    def div(self):
        if self.b != 0:
            return self.a / self.b
        else:
            return ""Cannot divide by zero!""",out,False,False,True,False
40936_out,"<div class=""header"">
    <h1>Header</h1>
    <h2>Sub-header</h2>
</div>",out,False,False,True,False
41084_out,"Advantages                       Disadvantages
Online Education                Limited interaction with professors and 
                               classmates
                               
Convenience and flexibility     Reduced support services
                               
Lower cost                      Technology needs and access issues
                               
Wide variety of course options   Limited laboratory experiences 
 
Can work around personal schedule",out,False,False,True,False
41249_out,"defgabc

def scramble(string, k):
    length = len(string)
    newString = """"
    
    for i in range(length):
        newString += string[(i + k) % length]
    
    return newString",out,False,False,True,False
41473_out,"The following program sorts an array of numbers in ascending order: 

def sort_array(array): 
    for i in range(len(array)): 
        min_index = i 
        for j in range(i+1, len(array)): 
            if array[min_index] > array[j]: 
                min_index = j 
        
        array[i], array[min_index] = array[min_index], array[i] 
    return array 

print(sort_array([4, 2, 5, 1, 3]))  # [1, 2, 3, 4, 5]",out,True,False,True,False
41706_out,"def fibonacciSequence(n): 
    
    a = 0
    b = 1
    output = [a, b]

    for _ in range(2, n):
        c = a + b
        a = b
        b = c
        output.append(c)

    return output

print(fibonacciSequence(10))  # [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]",out,True,False,True,False
41731_out,"""""""
Create an algorithm to find the greatest common divisor for two positive integers.
""""""

def gcd(a, b): 
    # Base case 
    if a == 0: 
        return b 
          
    return gcd(b%a, a) 


# Driver program to test above function 
a, b = 20, 8
gcd(a, b) # prints 4",out,False,False,True,False
41804_out,"def greet(name):
    """"""Print a greeting to the name provided.""""""
    # capitalize the name
    print(""Hello, ""+ name.capitalize() + ""!"")",out,False,False,True,False
41955_out,"START
  SET total = 0
  SET count = 0
  READ number
  WHILE number != -1
    SET total = total + number
    SET count = count + 1
    READ number
  ENDWHILE
  IF count != 0
    SET avg = total / count
    PRINT avg
  ENDIF
END",out,False,False,True,False
41977_out,"Tree = { 
  'root': { 
    'children': [ 
      { 
        'children': [ 
          {'value': 'Leaf 1'}, 
          {'value': 'Leaf 2'} 
        ], 
        'value': 'Branch 1'
      }, 
      { 
        'children': [ 
          {'value': 'Leaf 3'}, 
          {'value': 'Leaf 4'}
        ], 
        'value': 'Branch 2' 
      } 
    ], 
    'value': 'Root' 
  } 
}",out,False,False,True,False
42039_out,"def sum_range(m, n):
    total = 0
    for i in range(m, n + 1):
        total += i 
    return total",out,False,False,True,False
42040_out,"def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)",out,False,False,True,False
42071_out,"""""""
Create a program that returns 'true' when a given number is a prime number.
""""""
def is_prime(num):
    # Edge case 
    if num == 1:
        return False
    # Check from 2 to n-1 
    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True
    
if __name__ == '__main__':
    num = int(input())
    print(is_prime(num))",out,False,False,True,False
42074_out,"""""""
Search for a given phone number in a list of names and phone numbers
""""""

# NamePhoneList contains a list of tuples, with each tuple containing a name and a phone number
NamePhoneList = [(""John Doe"", ""123-456-7890""),
(""Jane Doe"", ""098-765-4321""),
(""Steve Smith"", ""111-111-1111"")
]

# PhoneNumber is the number we are searching for
PhoneNumber = ""111-111-1111""

# Initialize a variable to keep track of whether or not the number is found
isFound = False

# Loop through each tuple in NamePhoneList
for name, number in NamePhoneList:
    # If the phone number matches the number we are searching for, set isFound to True and break out of the loop
    if number == PhoneNumber:
        isFound = True
        break

# Print the result
if isFound:
    print(""The phone number was found."")
else:
    print(""The phone number was not found."")",out,False,False,True,False
42077_out,"""""""
Generate the Fibonacci sequence
""""""

# Initialize the first two elements in the Fibonacci sequence
prev = 0
curr = 1

# Print the first two elements
print(prev)
print(curr)

# Loop from 3 to n (where n is the number of elements in the Fibonacci sequence)
for n in range(3, 11): # Change the value of 11 to generate more/less elements
    # Calculate the sum of the previous two elements
    next = prev + curr
    
    # Print the sum
    print(next)
    
    # Update the values of prev and curr
    prev = curr
    curr = next

# Output:
# 0
# 1
# 1
# 2
# 3
# 5
# 8
# 13
# 21
# 34
# 55",out,False,False,True,False
42172_out,"""""""
Write a function to print out the last 3 elements of a Python list
""""""

def print_last_3(list_data):
    print(list_data[-3:])

if __name__ == '__main__':
    data = [1, 4, 7, 12, 15, 20]
    print_last_3(data)",out,True,False,True,False
42185_out,"// Create an empty list of greater and lesser numbers
let greaterNumber = [];
let lesserNumber = [];

// loop through the given list of numbers
for (let i=0; i<arr.length; i++) {
    // save the current number
    let number = arr[i];
    
    // check if the current number is greater than each other item in the list
    let isGreater = true;
    for (let j=0; j<arr.length; j++) {
        if (number > arr[j]) {
            isGreater = true;
        } else {
            isGreater = false;
            break;
        }
    }
    
    // if the result of the comparison is true, it means the current number is greater
    if (isGreater) {
        greaterNumber.push(number);
    } else {
        lesserNumber.push(number);
    }
}

// Sort the greaterNumber list
greaterNumber.sort(function (a, b) {
    return a - b;
});

// Sort the lesserNumber list
lesserNumber.sort(function (a, b) {
    return a - b;
});

// Print out the sorted list of greater and lesser numbers
console.log(""Greater Number: "" + greaterNumber);
console.log(""Lesser Number: "" + lesserNumber);",out,False,False,True,False
42198_out,"for element in list:
    element = element * 2",out,False,False,True,False
42268_out,"def multiply_sum(num1, num2):
    return num1 * num2",out,False,False,True,False
42281_out,"def partition(arr): 
    low = 0
    high = len(arr) - 1

    while (low < high): 
        if arr[low] > arr[high]: 
            arr[low], arr[high] = arr[high], arr[low] 

        low += 1
        high -= 1

arr = [1,3,4,2,9,7,8]
partition(arr)
print(arr)",out,True,False,True,False
42284_out,"def fibonacciSequence(n): 
    a = 0
    b = 1
    print(a, end = "" "") 
    for i in range(1, n): 
        c = a + b 
        a = b 
        b = c 
        print(a, end = "" "")",out,False,False,True,False
42285_out,"def standard_deviation(numbers): 
    avg = sum(numbers) / len(numbers)
    var = 0
    for num in numbers:
        var += (num - avg)**2
    return (var/len(numbers))**0.5",out,False,False,True,False
42287_out,"def selection_sort(nums):
    for i in range(len(nums)):
        min_idx = i
        for j in range(i + 1, len(nums)):
            if nums[min_idx] > nums[j]:
                min_idx = j

        nums[i], nums[min_idx] = nums[min_idx], nums[i]",out,False,False,True,False
42508_out,"""""""
Find the product of all elements in an array
""""""

def product_array(arr):
    product = 1
    for i in arr:
        product *= i 
    return product

if __name__ == '__main__':
    arr = [1,2,3]
    result = product_array(arr) 
    print(result)",out,True,False,True,False
42726_out,"Here is an example of a stack data structure implemented in Python:

class Stack:
    def __init__(self):
        self.items = []
 
    def push(self, item):
        self.items.append(item)
 
    def pop(self):
        return self.items.pop()
 
    def is_empty(self):
        return self.items == []",out,False,False,True,False
42767_out,"The following script can be used to check for missing values in a dataset: 

#import numpy library
import numpy as np

#read in the dataset
dataset = np.genfromtxt('dataset.csv', delimiter=',')

#check for any null values in the dataset
if np.isnan(dataset).any():
    print(""Missing values found!"")
else:
    print(""No missing values found!"")",out,False,False,True,False
42814_out,"for (int i = 1; i <= 10; i++) {
    System.out.println(4 + ""x"" + i + ""="" + 4*i); 
}",out,False,False,True,False
42902_out,"def calculate_avg(a, b, c):
    sum = a + b + c
    avg = sum / 3 
    return avg",out,False,False,True,False
43045_out,"def prime_numbers(upper_limit):
    primes = []
    for num in range(2, upper_limit+1): 
        if all(num % i != 0 for i in range(2, num)):
           primes.append(num)
    return primes",out,False,False,True,False
43115_out,"def reverseString(input_string): 
  # Get length of string 
  n = len(input_string) 
  
  # Store string in an array
  arr = [None] * n  
  
  # Iterate from n-1 to 0 
  for i in range(n - 1, -1, -1): 
    arr[i] = input_string[n - i - 1] 
  
  # Return reverse string 
  return ''.join(arr) 

# Driver code 
input_string = ""hello"" 
 print(""Reversed string is"", reverseString(input_string))",out,False,False,True,False
43167_out,".times-new-roman {
    font-family: 'Times New Roman', Times, serif;
}",out,False,False,True,False
43199_out,"def add_two_numbers(a, b):
    return a + b",out,False,False,True,False
43264_out,"def quadratic_roots(a, b, c): 
    determinant = (b**2 - 4*a*c) 
    root1 = (-b + math.sqrt(determinant)) / (2*a)
    root2 = (-b - math.sqrt(determinant)) / (2*a)
  
    return root1, root2",out,False,False,True,False
43277_out,"```
function XORTwoBinaryStrings(S1,S2) {
   let result = """";
   for (let i=0; i<S1.length, i++) {
      // XOR each bit
      result+= (S1[i]^S2[i]);
   }
   return result;
}
```",out,False,False,True,False
43438_out,"<style> 
  h2.BigText {
    font-weight:bold;
  } 
</style>",out,False,False,True,False
43495_out,"""""""
Function to move a character across a two-dimensional array on a game board
""""""

def move_character(game_board, x, y):
    # check if out of bounds 
    if (x < 0 or x >= len(game_board[0]) or 
        y < 0 or y >= len(game_board)):
        print(""Out of bounds"") 
        return 
    
    # update character 
    game_board[y][x] = 'C' 

    # print the updated game board 
    for row in game_board:
        print("" "".join(row))",out,False,False,True,False
43712_out,"class BankAccount:
    def __init__(self, account_number, balance):
        self.account_number = account_number
        self.balance = balance
    
    def deposit(self, amount):
        self.balance += amount
    
    def withdraw(self, amount):
        if self.balance - amount >= 0:
            self.balance -= amount
        else:
            print(""Insufficient funds"")
    
    def get_balance(self):
        return self.balance",out,False,False,True,False
43713_out,"model = tf.keras.models.Sequential([ 
    tf.keras.layers.Input(shape=(5,)), 
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(5, activation='linear')
])

model.compile(loss='mse', optimizer='Adam')",out,False,False,True,False
43873_out,"# Create an empty list of common elements
common_elems = []

# Iterate over the lists
for element in list1:
    # Check if the element is present in the second list
    if element in list2:
        # Add the element to the list of common elements
        common_elems.append(element)

# Print the common elements
print(common_elems)

# Output: [2, 4]",out,True,False,True,False
43942_out,"class MyDog:
    def __init__(self):
        self.breed = """"
    
    def setBreed(self, breed):
        self.breed = breed",out,False,False,True,False
44187_out,"int main()
{
    for(int i = 0; i < 10; i++)
    {
        std::cout << ""Hello World! \n"";
    }
    return 0;
}",out,False,False,True,False
44258_out,"def square_root(num):
    return num ** (1/2)",out,False,False,True,False
44368_out,"A function 'findPair(low, high, sum)' can be used to generate all pairs of numbers within a given range with a given sum. The function takes in three parameters, low and high which define the range, and sum which defines the given sum. The function can be implemented as follows: 

def findPair(low, high, sum): 
  outputList = []
  for i in range(low, high + 1): 
    for j in range(low, high + 1): 
      if (i + j == sum):
        outputList.append([i,j])
  return outputList",out,False,False,True,False
44453_out,"<html>
  <head>
    <title>Web Page</title>
  </head>
  <body>
    <div>
      <div style=""float:left; width:33%;"">
        Information Column 1
      </div>
      <div style=""float:left; width:33%;"">
       Information Column 2
      </div>
      <div style=""float:left; width:33%;"">
        Information Column 3
      </div>
    </div>
  </body>
</html>",out,False,False,True,False
44484_out,"list = [39, 50, 89, 101]
count = 0
for item in list:
  if item > 50:
    count += 1
print('Number of items greater than 50:', count)",out,True,False,True,False
44613_out,"for(int i=1; i<=10; i++){  
    System.out.println(i);
}",out,False,False,True,False
44615_out,"def array_sum(arr):
    sum = 0
    for n in arr:
        sum += n
    return sum",out,False,False,True,False
44620_out,"for item in list:
    print(item)",out,False,False,True,False
44648_out,"import re

def test_suite():
    test_cases = [""a.b@example.com"", ""99@example.com"", ""user@example.co.uk"", ""test@test.test"", ""jane.doe@example.org"", 
                    ""abc123@example.com"", ""user123@example.com.au"", ""invalid@example.com_""]
    valid_email_regex = '^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$'
    for test_case in test_cases:
        if re.match(valid_email_regex, test_case):
            print(f""{test_case} is a valid email address."")
        else:
            print(f""{test_case} is not a valid email address."")
    
if __name__ == ""__main__"":
    test_suite()",out,False,False,True,False
44650_out,"""""""
Create a function to generate random background colors for a website
""""""

import random

def random_bg_color():
    r = random.randint(0,255)
    g = random.randint(0,255)
    b = random.randint(0,255)
    return ""#%.2X%.2X%.2X"" % (r, g, b)

if __name__ == ""__main__"":
    print(random_bg_color())",out,True,False,True,False
44989_out,"The following is an example of a conditional statement in JavaScript:

if (x > 0) {
    console.log(""x is greater than 0"");
} else {
    console.log(""x is not greater than 0"");
}",out,False,False,True,False
44992_out,"The following is an example of a for-loop in Python:

for i in range(10):
    print(i)",out,False,False,True,False
45092_out,"{
  ""1"": {
    ""Name"": ""John"",
    ""Age"": 16
  },
  ""2"": {
    ""Name"": ""Sarah"",
    ""Age"": 19
  }
}",out,False,False,True,False
45115_out,"import string 
import random 

def generate_random_string(): 
    characters = string.ascii_uppercase
    random_string = """".join(random.choice(characters) for x in range(5))
    return random_string

print(generate_random_string())",out,False,False,True,False
45122_out,"{ 
  ""name"": ""John Doe"",
  ""age"": 20,
  ""address"": {
    ""street"": ""123 Main Street"",
    ""city"": ""AnyTown"",
    ""state"": ""CA"",
    ""zip"": 94112
  },
  ""major"": ""Computer Science"",
  ""minor"": ""Data Science"",
  ""GPA"": 3.5
}",out,False,False,True,False
45126_out,"def mean_median_mode(sample): 
    mean = sum(sample)/len(sample)
    sorted_sample = sorted(sample)
    if len(sorted_sample) % 2 == 1: 
        median = sorted_sample[len(sorted_sample)//2] 
    else:
        median = (sorted_sample[len(sorted_sample)//2] + 
                  sorted_sample[len(sorted_sample)//2 - 1])/2
    mode = max(sorted_sample, key=sorted_sample.count)
    
    print(""Mean: "", mean)
    print(""Median: "", median)
    print(""Mode: "", mode) 
   
mean_median_mode(sample)

Output:
Mean: 4.375
Median: 4
Mode: 2",out,False,False,True,False
45128_out,"<!DOCTYPE html>
<html>
<head>
    <title> Employee Information </title>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Role</th> 
                <th>Salary</th> 
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>John Smith</td> 
                <td>Manager</td> 
                <td>$70000</td> 
            </tr>
            <tr>
                <td>Anna Jones</td> 
                <td>Developer</td> 
                <td>$50000</td> 
            </tr>
            <tr>
                <td>Mark Wilson</td> 
                <td>Designer</td> 
                <td>$55000</td> 
            </tr>
        </tbody>
    </table>
</body>
</html>",out,False,False,True,False
45129_out,"<!DOCTYPE html>
<html>
  <head>
    <title>Product Page</title>
    <style>
      body {
        font-family: Arial, sans-serif;
      }
      .product-page {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .product-image img {
        width: 400px;
        height: 400px;
      }
      .product-description {
        text-align: center;
        font-size: 1.4em;
      }
      .product-price {
        font-weight: bold;
        font-size: 1.6em;
      }
    </style>
  </head>
  <body>
    <div class=""product-page"">
      <h1>Product Name</h1>
      <div class=""product-image"">
        <img src=""product.jpg"" alt=""Product Image"">
      </div>
      <div class=""product-description"">
        Product description
      </div>
      <div class=""product-price"">
        $99.99
      </div>
    </div>
  </body>
</html>",out,False,False,True,False
45131_out,"def count_frequency(lst): 
    frequency = {}
    for i in lst: 
        if i in frequency: 
            frequency[i] += 1
        else: 
            frequency[i] = 1
    
    return frequency

# Driver Code
lst = [2, 3, 4, 5, 6, 4, 3, 5, 7]
print(count_frequency(lst))

Output: {2: 1, 3: 2, 4: 2, 5: 2, 6: 1, 7: 1}",out,True,False,True,False
45132_out,"<!DOCTYPE html>
<html>
  <head>
    <title>French Revolution History</title>
  </head>
  <body>
    <h1>The French Revolution</h1>
    <h2>1789 - 1799</h2>
    <h3>The Causes of the Revolution</h3>
    <p>The French Revolution was caused by a combination of factors, including political, economic, military, and social changes. Political factors included the growing influence of Enlightenment ideals, a monarchy that failed to keep up with the changing times, and the formation of the Estates General. Economic factors included high levels of taxation and debt, subsistence agriculture, and unfair distribution of wealth. Military factors included the legacy of repeated wars and the absence of a standing army. Social factors included extreme poverty and social inequality.</p>
    <h3>Stages of the Revolution</h3>
    <ul>
      <li><strong>1789 - The French Revolution Begins:</strong> The Estates General meets, the Tennis Court Oath is taken, the National Assembly is formed, the Bastille is stormed, and the Great Fear sweeps across the country.</li>
      <li><strong>1791 - Constitutional Monarchy:</strong> A Constitution is written, a new Legislative Assembly is formed, and a constitutional monarchy is established.</li>
      <li><strong>1792 - The Reign of Terror:</strong> Louis XVI is executed, the Jacobins gain power, and a bloody period of repression and terror ensues.</li>
      <li><strong>1799 - The End of the Revolution:</strong> Napoleon Bonaparte seizes power and declares himself emperor, ending the Revolution.</li>
    </ul>
    <h3>Impact of the Revolution</h3>
    <p>The French Revolution changed the course of history by reshaping government and society, creating a new political and social order which influenced the rest of Europe. The Revolution had a lasting impact on politics and social life, as well as the economy. It made democratic ideas more widely accepted, challenged the power of the Church and aristocracy, and gave people a greater sense of individual rights. It also unleashed a wave of political and social change which spread quickly throughout Europe, leading to the formation of modern nation-states.</p>
  </body>
</html>",out,False,False,True,False
45227_out,"def intersect(list1, list2):
    """"""This function returns the intersection of two given lists.

    Arguments:
        list1 {list} -- The first list 
        list2 {list} -- The second list 

    Returns:
        list -- The intersection of the two given lists
    """"""
    return list(set(list1).intersection(list2))",out,False,False,True,False
45230_out,"def sort_colors(colors):
     """"""This function sorts a given list of colors according to their RGB values.
     
     Arguments:
         colors {list} -- A list of colors
     
     Returns:
         list -- The colors sorted according to their RGB values
     """"""
     colors.sort(key=lambda color: (color[0], color[2], color[1])) 
     return colors",out,False,False,True,False
45367_out,"def reverse_string(string):
    reversed_str = """"
    for char in string:
        reversed_str = char + reversed_str 
    return reversed_str",out,False,False,True,False
45371_out,"def add_three_ints(int1, int2, int3):
    return int1 + int2 + int3",out,False,False,True,False
45386_out,"let start = 0 
let end = arr.length -1
while (start <= end) {
    let mid = Math.floor((start + end)/2)
    if (arr[mid] == x) {
        return mid 
    }
    else if (arr[mid] < x) {
        start = mid + 1
    }
    else {
        end = mid - 1
    }
}
return -1",out,False,False,True,False
45448_out,"public static int addValues(int x, int y){
    return x + y;
}",out,False,False,True,False
45459_out,"<html>
<head>
    <title>Welcome to our website</title>
</head>
<body>
    <h1>Welcome to our website</h1>
</body>
</html>",out,False,False,True,False
45530_out,"import re

text = ""This is a text. sender@example.com""

emails = re.findall(r'[\w\.-]+@[\w\.-]+', text)

for email in emails:
    print(email)",out,False,False,True,False
45532_out,"def detect_anagrams(s1, s2): 
    # convert strings to lowercase 
    s1 = s1.lower() 
    s2 = s2.lower() 
  
    # sort the strings  
    s1_list = sorted(s1) 
    s2_list = sorted(s2) 
  
    # compare and return a boolean value 
    if s1_list == s2_list: 
        return True
    else: 
        return False",out,False,False,True,False
45533_out,"def findNthFibonacci(n): 
    if n == 0: 
        return 0
    elif n == 1: 
        return 1
    else: 
        return findNthFibonacci(n -1) + findNthFibonacci(n - 2)",out,False,False,True,False
45539_out,"<html>
<head>
    <title>Benefits of Virtual Reality</title>
</head>
<body>
    <h1>Benefits of Virtual Reality</h1>
    <p>Virtual Reality (VR) offers a variety of benefits. From entertainment to education, VR provides an immersive experience that enhances user engagement and can lead to improved learning results. VR can also be used to improve communication, increase collaboration and make tasks easier to comprehend.</p>
    <p>VR can also help to improve physical health. It can be used to reduce stress, improve coordination and posture, increase fitness levels, and even help with rehabilitation.</p>
    <p>VR also has a variety of industrial applications. It can be used for training, product design and prototyping, engineering and simulation, virtual tours and more.</p>
</body>
</html>",out,False,False,True,False
45541_out,"def count_words(text):
    text_lst = text.split()
    return len(text_lst)",out,False,False,True,False
45560_out,"def Fibonacci(n):  
   if n<0:  
      print(""Incorrect input"")  
   elif n==1:  
      return 0
   elif n==2:  
      return 1
   else:  
      return Fibonacci(n-1)+Fibonacci(n-2)",out,False,False,True,False
45561_out,"for x in range(1,21):
    if x%2 != 0: 
        print(x)",out,True,False,True,False
45620_out,"{
    ""root"": {
        ""data"": {
            ""item"": {
                ""id"": ""1"",
                ""name"": ""Sample data"",
                ""type"": ""Text"",
                ""value"": ""123""
            }
        }
    }
}",out,False,False,True,False
45627_out,"def greet_customer(name, store):
    return ""Welcome ""+name+""! Enjoy shopping at ""+store+"".""",out,False,False,True,False
45653_out,"def calculate_surface_area(lateral_edge, height):
    """""" Calculates the surface area of a hexagonal prism.

    :param lateral_edge: The length of the lateral edge in cm, an integer
    :param height: The height of the prism in cm, an integer
    :return: The surface area of the hexagonal prism in cm2, an integer
    """"""
    return 3 * lateral_edge**2 + 3 * height * lateral_edge + (3 * (3**0.5)/2) * lateral_edge**2",out,False,False,True,False
45656_out,"def check_vowel_count(string):
    """""" Checks if the input string contains an even number of vowels.

    :param string: An input string
    :return: True if the input string has an even number of vowels, False otherwise
    """"""
    vowels = ('a', 'e', 'i', 'o', 'u')
    vowel_count = 0
    for char in string.lower():
        if char in vowels:
            vowel_count += 1
    return vowel_count % 2 == 0",out,False,False,True,False
45719_out,"sum = 0

for i in range(1,11):
    sum = sum + i

print(sum)",out,True,False,True,False
45773_out,"{""note"": 
    {""to"": ""John"",
     ""from"": ""Jane"",
     ""heading"": ""Greetings"",
     ""body"": ""Hello!""
    }
 }",out,False,False,True,False
45929_out,"// Algorithm to find maximum value in an array of integers
// Problem: Given an array of integers, find the maximum value
 
// Step 1: Initialize max value to first element of array
max = arr[0]
 
// Step 2: Iterate through the array
for (int i = 1; i < arr.length; i++) {
    // Step 3: compare current element of array with max	
    if (arr[i] > max) {	 
        // Step 4: 
        // if current element > max, then set max to current element of array
        max = arr[i]
    }
}

// Step 5: Return maximum value in array
return max",out,False,False,True,False
45942_out,"The following code can be used to print a list of integers from 1 to 10:

```
for i in range(1, 11):
    print(i)
```",out,False,False,True,False
45979_out,"function printTime(){
  let date = new Date(),
    hour= date.getHours(),
    min = date.getMinutes();

  console.log((hour<10 ? ""0"" : """") + hour + "":"" + (min<10 ? ""0"" : """") + min);
}",out,False,False,True,False
46026_out,"def sum_of_cubes(x, y):
    return x**3 + y**3",out,False,False,True,False
46114_out,"def isBalanced(root): 
    if root is None: 
        return True
    lh = height(root.left) 
    rh = height(root.right) 
  
    if (abs(lh - rh) <= 1) and isBalanced(root.left) is True and isBalanced(root.right) is True: 
        return True
  
    return False 
  
def height(node): 
    if node is None: 
        return 0
    return 1 + max(height(node.left), height(node.right))",out,False,False,True,False
46277_out,"""""""
Script that prints a 4x4 spiral of numbers from 1 to 16
""""""

def printSpiral(n): 
  
    k = 0

    for i in range(n): 
  
        for j in range(n) : 
            print(k, end="" "") 
            k = k + 1
  
        print() 

if __name__ == '__main__':
    n = 4
    printSpiral(n) 

# Output 
# Output:
# 0 1 2 3 
# 11 10 9 8 
# 12 13 14 7 
# 15 16 5 4 
# 17 6 3 2",out,True,False,True,False
46301_out,"def check_palindrome(string): 
  # Remove all non-alphanumeric characters 
  string = string.lower().replace(""[^a-zA-Z0-9]"", """") 

  # Check whether the string is empty or not 
  if string == '': 
    return False

  # Reverse the given string and check if it is equal to the original string 
  return string == string[::-1]",out,False,False,True,False
46327_out,"def count_words(str): 
  counts = dict() 
  words = str.split() 
  
  for word in words: 
    if word in counts: 
      counts[word] += 1
    else: 
      counts[word] = 1
  
  return counts",out,False,False,True,False
46329_out,"def find_longest_word(str): 
  words = str.split() 
  longest_word = """"
  longest_length = 0
  for word in words: 
    word_length = len(word) 
    if word_length > longest_length:
      longest_length = word_length
      longest_word = word 
 
  return longest_word",out,False,False,True,False
46418_out,"import requests
from bs4 import BeautifulSoup

# Specify the URL
url = 'https://www.nytimes.com/'

# Make the request
response = requests.get(url)

# Parse the html content
soup = BeautifulSoup(response.content, 'html.parser')

# Find all headlines
headlines = soup.find_all('h2', class_='esl82me0')

# Print the top 5 headlines
print('Top 5 Headlines from The New York Times:')
for head in headlines[:5]:
    print(head.text)",out,False,False,True,False
46455_out,"def sum_array(array):
    total_sum = 0
    for num in array:
        total_sum += num
    return total_sum",out,False,False,True,False
46504_out,"void orderArray(int arr[], int n)
{
    int temp;
    for(int i = 0; i < n; i++)
    {
        for(int j = i+1; j < n; j++)
        {
            if (arr[j] < arr[i])
            {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}",out,False,False,True,False
46575_out,"def logarithmic_average(data):
    """"""
    Calculates the logarithmic average of a given set of data.

    Parameters:
    data (list): The set of data to calculate the logarithmic average of.

    Returns:
    float: The logarithmic average of the given set of data.
    """"""
    total_logs = 0
    for item in data:
        total_logs += math.log(item)
  
    return math.exp(total_logs / len(data))",out,False,False,True,False
46577_out,"def print_decreasing(numbers):
    """"""
    Prints the given numbers in decreasing order.

    Parameters:
    numbers (list): The list of numbers to sort and print.

    Returns:
    None
    """"""

    sorted_numbers = sorted(numbers, reverse=True)
    
    for num in sorted_numbers:
        print(num)

print_decreasing(numbers)",out,False,False,True,False
46585_out,"def calculateCost(unitPrice, quantity, shippingCost, taxRate): 
    totalPrice = (unitPrice * quantity) + shippingCost
    totalTax = totalPrice * taxRate
    totalCost = totalPrice + totalTax
    return totalCost",out,False,False,True,False
46591_out,"{
    ""name"": ""Kashi"",
    ""age"": 27
}",out,False,False,True,False
46798_out,"iframe {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}",out,False,False,True,False
46819_out,"def valid_phonenumber(number):
    if len(number) == 10 and number.isdigit():
        return True
    else:
        return False
    
if __name__ == '__main__':
    number = input('Enter a phone number: ')
    if valid_phonenumber(number):
        print('The phone number is valid.')
    else:
        print('The phone number is not valid.')",out,False,False,True,False
46918_out,"```
Function Quadratic_Equation_Roots (a, b, c)
    //Calculate the Discriminant
    Discriminant <- b2 - 4 * a * c
    
    //Calculate the two Roots
    If Discriminant > 0
        Root1 <- (-b + Sqrt(Discriminant)) / (2 * a) 
        Root2 <- (-b - Sqrt(Discriminant)) / (2 * a)
    
    Else If Discriminant = 0
        Root1 = Root2 <- - b / (2 * a)
    
    Else
        Return ""Imaginary Roots""
End Function
```",out,False,False,True,False
46920_out,"def contains(array, item):
    for element in array:
        if element == item:
            return True
    return False",out,False,False,True,False
46921_out,"CREATE TABLE student (
    id INT NOT NULL,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    enrollment_date DATE NOT NULL,
    PRIMARY KEY (id)
);",out,False,False,True,False
46969_out,"for x in range(10):
    print(x)
   
Explanation: The correct syntax for printing out a variable in Python is ""print(variable)"", not just ""print variable"". Thus, the above code should be changed to ""print(x)"" in order to output the expected result. This is because the code is intended to loop through the numbers 0 to 9 (inclusive) and print out each one using the range() function.",out,False,False,True,False
46984_out,"A for loop in Java is written as follows: 

for (initialization; condition; update) {
    statement(s);
}

The initialization expression initializes the loop; it is executed only once at the start of the loop. The condition is evaluated on each iteration of the loop, and if it is true, the statement(s) are executed; if it is false, the loop terminates. The update expression is evaluated on each iteration, and can be used to update the loop variable.",out,False,False,True,False
46985_out,"def get_areas():
    return [x * y for x in range(4) for y in range(4)]

This uses a list comprehension to generate the list of areas in one line, instead of nested loops and an appending loop. This is much more efficient and concise.",out,False,False,True,False
47068_out,"def Fahrenheit_to_Celsius(f): 
    celsius = (f - 32) * 5/9
    return celsius",out,False,False,True,False
47174_out,"def most_repeated_word(text):
    # Split the text into a list of words
    words = text.split() 

    # Create an empty dictionary 
    counts = {}

    # Iterate through the list of words
    for word in words:
        # Count the number of occurrences of each word
        counts[word] = counts.get(word, 0) + 1
    
    # Set maximum count to 0
    max_count = 0

    # Set most repeated word to None
    most_repeated_word = None

    # Iterate through the dictionary
    for k, v in counts.items():
        # Store the word if it has the maximum count
        if v > max_count:
            max_count = v
            most_repeated_word = k

    # Return the most repeated word
    return most_repeated_word

most_repeated_word(""the the the big fish big in the pond pond"")  # returns ""the""",out,False,False,True,False
47175_out,"def scramble_sentence(sentence):
    # Split the sentence into a list of words
    words = sentence.split() 

    # Randomly shuffle the list of words
    random.shuffle(words) 

    # Join the shuffled words into a new sentence
    scrambled_sentence = ' '.join(words)

    # Return the scrambled sentence
    return scrambled_sentence

scramble_sentence(""She sells seashells on the seashore."") # returns ""seashore She seashells the on sells""",out,False,False,True,False
47177_out,"8 -> 4 -> 6 ->2 

def insert_end(linked_list, value):
    # Create a new node
    new_node = Node(value)

    # Traverse to the end of the linked list
    curr = linked_list
    while curr.next is not None:
        curr = curr.next

    # Insert new node at the end of the linked list
    curr.next = new_node",out,False,False,True,False
47179_out,"class Calculator:
    def __init__(self):
        self.result = 0

    def add(self, value):
        self.result += value

    def subtract(self, value):
        self.result -= value

    def multiply(self, value):
        self.result *= value

    def divide(self, value):
        self.result /= value

    def get_result(self):
        return self.result",out,False,False,True,False
47180_out,"def list_sum(lst):
    # Initialize a variable to store the sum
    sum = 0

    # Iterate through the list
    for num in lst:
        # Add each number to the sum
        sum += num

    # Return the sum
    return sum

list_sum([1,2,3,4,5]) # returns 15",out,True,False,True,False
47322_out,"def find_area_triangle(base, height):
    area = (base * height)/2
    return area

#Example
base = 10
height = 20
area = find_area_triangle(base, height)
print(""Area of the triangle is"", area)",out,False,False,True,False
47331_out,"def recommend_pizza(toppings):
    if ""Pepperoni"" in toppings:
        print(""I recommend a Pepperoni Pizza!"")
    if ""Veggies in toppings:
        print(""I recommend a Veggie Pizza!"")
    if ""Cheese"" in toppings:
        print(""I recommend a Cheese Pizza!"")",out,False,False,True,False
47333_out,"set i equal to 0 
while i is less than n:
    output i squared
    increment i",out,False,False,True,False
47406_out,"import requests 
from bs4 import BeautifulSoup

def crawler(url):
    # Request the page from the given URL
    resp = requests.get(url)
    # Create the BeautifulSoup object
    soup = BeautifulSoup(resp.text, 'html.parser')
    
    # Find all email addresses on the page
    emails = [a.attrs.get('href') for a in soup.select('a[href^=mailto:]')]
    
    return emails",out,False,False,True,False
47421_out,"def classify_books(book):
    if book.genre == ""Fiction"":
        return ""Fiction""
    elif book.genre == ""Mystery"":
        return ""Mystery""
    elif book.genre == ""Science Fiction"":
        return ""Science Fiction""
    elif book.genre == ""Romance"":
        return ""Romance""
    elif book.genre == ""Fantasy"":
        return ""Fantasy""
    else:
        return ""Other""",out,False,False,True,False
47427_out,"<!DOCTYPE html>
<html>
<head>
    <title>My Web Page</title>
    <style>
        body {
            background-color: #f5f5f5;
            font-family: Arial, sans-serif;
        }
        .form-container {
            width: 500px;
            margin: auto;
            background-color: #fff;
            padding: 10px;
        }
        .form-input {
            margin-bottom: 10px;
        }
        table {
            border-collapse: collapse;
            margin-top: 20px;
            width: 100%;
        }
        th, td {
            padding: 10px;
        }
        th {
            background-color: #CCC;
        }
        td {
            border-bottom: 1px solid #CCC;
        }
    </style>
</head>
<body>
    <h1>My Web Page</h1>
    <div class=""form-container"">
        <form action="""" method="""" >
            <div class=""form-input"">
                <input type=""text"" name=""name"" placeholder=""Name"">
            </div>
            <div class=""form-input"">
                <input type=""email"" name=""email"" placeholder=""Email"">
            </div>
            <div class=""form-input"">
                <input type=""submit"" value=""Submit"">
            </div>
        </form>
    </div>
    <table>
        <tr>
            <th>Name</th>
            <th>Email</th>
        </tr>
        <tr>
            <td>John Doe</td>
            <td>john@example.com</td>
        </tr>
        <tr>
            <td>Jane Doe</td>
            <td>jane@example.com</td>
        </tr>
    </table>
</body>
</html>",out,False,False,True,False
47429_out,"def isTriangle(a, b, c): 
    if (a + b <= c) or (a + c <= b) or (b + c <= a): 
        return False
    else: 
        return True",out,False,False,True,False
47450_out,"// implementation of insertion sort 
static void sort(int arr[]) { 
    int n = arr.length; 
    for (int i = 1; i < n; ++i) { 
        int key = arr[i]; 
        int j = i - 1; 
  
        /* Move elements of arr[0..i-1], that are 
           greater than key, to one position ahead 
           of their current position */
        while (j >= 0 && arr[j] > key) { 
            arr[j + 1] = arr[j]; 
            j = j - 1; 
        } 
        arr[j + 1] = key; 
    } 
} 
 
// Driver code 
public static void main(String[] args) { 
    int arr[] = { 3, 2, 4, 1, 5 }; 
  
    sort(arr); 
  
    System.out.println(""Sorted array""); 
    printArray(arr); 
}",out,False,False,True,False
47477_out,"""""""
A function that computes the sum of two integers
""""""

def sum_numbers(a, b):
    return a + b 
    
if __name__ == ""__main__"": 
    a = int(input(""Enter an integer: ""))
    b = int(input(""Enter another integer: ""))
    print(""The sum is:"", sum_numbers(a, b))",out,False,False,True,False
47480_out,"""""""
A function that checks if a given number is an Armstrong number
""""""

def is_armstrong_number(n): 
    temp = n 
    sum_of_cubes = 0
    while temp > 0: 
        remainder = temp % 10
        sum_of_cubes += remainder * remainder * remainder 
        temp //= 10
  
    return sum_of_cubes == n 
    
if __name__ == ""__main__"": 
    number = int(input(""Enter a number: ""))
    if is_armstrong_number(number): 
        print(""It is an Armstrong number"") 
    else: 
        print(""It is not an Armstrong number"")",out,False,False,True,False
47491_out,"a = 0
b = 1
 
print(a, end = ' ')
print(b, end = ' ')
 
for i in range(2, 11):
    c = a + b
    print(c, end = ' ')
    a = b
    b = c",out,False,False,True,False
47627_out,"<html>
    <head>
        <title>My Page</title>
    </head>
    <body>
        <h1>Welcome to My Page</h1>
    </body>
</html>",out,False,False,True,False
47732_out,"#
# 1. Define the corpus:

corpus = ""This is a corpus of data to analyze. This dataset will be used to get the top 10 most frequent words.""

# 2. Tokenize the corpus:

words = corpus.split()

# 3. Create a dictionary and count each word's frequency:

word_counts = {}
 
for word in words:
    if word in word_counts:
        word_counts[word] += 1
    else:
        word_counts[word] = 1

# 4. Sort the word counts list:

sorted_word_counts = sorted(word_counts.items(), key=lambda x: x[1], reverse=True)

# 5. Print the top 10 words:

print(""The top 10 most frequent words are:"")
for word, count in sorted_word_counts[:10]:
    print(word + "": "" + str(count))",out,False,False,True,False
47869_out,"ingredient_cost = [1.5, 0.5, 0.2, 0.05]
total_cost = 0

for cost in ingredient_cost:
    total_cost += cost

print(total_ cost)
# 2.25",out,True,False,True,False
47934_out,".circle {
    width: 50px;
    height: 50px;
    background: red;
    border-radius: 50%;
}",out,False,False,True,False
47943_out,"def sumAll(array): 
    sum = 0
    for i in range(len(array)): 
        sum += array[i] 
    return sum",out,False,False,True,False
47944_out,"def uniqueChars(string): 
    uniqueChars = [] 
    for char in string:
        if char not in uniqueChars: 
            uniqueChars.append(char) 
    return uniqueChars",out,False,False,True,False
47948_out,"def findMostFrequent(arr): 
    count_arr = {} 
    for i in range(len(arr)): 
        if arr[i] in count_arr: 
            count_arr[arr[i]] += 1
        else: 
            count_arr[arr[i]] = 1
    max_frequency = max(count_arr.values()) 
    for key,value in count_arr.items(): 
        if value == max_frequency: 
            return key",out,False,False,True,False
48205_out,"<html>
<head>
    <title>Pets R Us</title>
</head>
<body>
    <h1>Welcome to Pets R Us!</h1>
    <p>Pets R Us is your one-stop shop for all pet care needs. With a wide selection of food, accessories, and medications, we have everything you need to keep your pet in tip-top shape. Our knowledgeable staff is here to help you with any questions you may have. Visit us today and find the perfect companion for your family!</p>
</body>
</html>",out,False,False,True,False
48208_out,"""""""
Store and access the value of a particular number in a list by passing the address of the location as a parameter
""""""

def get_list_value(mylist, index):
    return mylist[index]

# example
mylist = [1, 2, 3, 4, 5]
value = get_list_value(mylist, 2)
print(value)  # 3",out,True,False,True,False
48267_out,"<html>
    <head>
        <title>Books and Authors</title>
    </head>
    <body>
        <h1>Books and Authors</h1>
        <ul>
            <li>The Catcher in the Rye, Author: J.D. Salinger</li>
            <li>Mindset, Author: Carol Dweck</li>
            <li>Crooked, Author: Austin Grossman</li>
            <li>Digital Minimalism, Author: Cal Newport</li>
        </ul>
    </body>
</html>",out,False,False,True,False
48273_out,"def caesar_encrypt(message, key):
    encrypted_message = """"
    for char in message:
        if char.isalpha():
            num = ord(char)
            num += key
            if char.isupper():
                if num > ord('Z'):
                    num -= 26
                elif num < ord('A'):
                    num += 26
            elif char.islower():
                if num > ord('z'):
                    num -= 26
                elif num < ord('a'):
                    num += 26
            encrypted_message += chr(num)
        else:
            encrypted_message += char
    return encrypted_message",out,False,False,True,False
48351_out,"<html> 
  <head> 
    <title>About Me</title> 
  </head> 
  <body> 
    <h1>John Smith</h1> 
    <h2>Boston</h2> 
    <p>I am a retired software engineer who loves to travel the world with my wife.</p> 
  </body> 
</html>",out,False,False,True,False
48370_out,"public class Factorial {
    public static void main(String[] args) {
        int num = 5;
        int factorial = 1;
        for(int i = 1; i <= num; i++) {
            factorial = factorial * i;
        }
        System.out.println(""The factorial of "" + num + "" is: "" + factorial);
    }
}",out,False,False,True,False
48595_out,"h2{
    color: orange;
}",out,False,False,True,False
48644_out,"def fibonacci(n): 
    if n==0: 
        return 0 
    elif n==1: 
        return 1
    else: 
        return fibonacci(n-1)+fibonacci(n-2)

fibonacci(12) # 144",out,False,False,True,False
48658_out,"def sorting_algorithm(lst): 
  # loop through the list
  for i in range(len(lst)): 
    
    # find the index of the minimum element 
    min_idx = i 
    for j in range(i+1, len(lst)): 
      if lst[min_idx] > lst[j]: 
        min_idx = j 
          
    # Swap the found minimum element with 
    # the first element
    lst[i] , lst[min_idx] = lst[min_idx], lst[i] 
   
  return lst",out,False,False,True,False
48754_out,"def longest_common_substring(str1, str2): 
    n1 = len(str1) 
    n2 = len(str2) 
  
    LCSuff = [[0 for i in range(n2+1)] for j in range(n1+1)] 
  
    res = """" # To store the result 
    lenght = 0 # To store the lenght of the result 
  
    # building up theLCSuff[][] in bottom up manner 
    for i in range(n1+1): 
        for j in range(n2+1): 
            if (i == 0 or j == 0): 
                LCSuff[i][j] = 0
            elif (str1[i-1] == str2[j-1]): 
                LCSuff[i][j] = LCSuff[i-1][j-1] + 1
                if (lenght < LCSuff[i][j]): 
                    lenght = LCSuff[i][j] 
                    res = str1[i-lenght: i] 
            else: 
                LCSuff[i][j] = 0
  
    return res",out,True,False,True,False
48755_out,"def find_highest_value(arr):
    highest_value = arr[0]
    
    for i in range(1, len(arr)):
        if arr[i] > highest_value:
            highest_value = arr[i]
            
    return highest_value",out,False,False,True,False
48767_out,"class Stack:
    def __init__(self):
        self.items = []
    
    def is_empty(self):
        return len(self.items) == 0
        
    def push(self, item):
        self.items.append(item)
        
    def pop(self):
        if not self.is_empty():
            return self.items.pop()
        
    def peek(self):
        if not self.is_empty():
            return self.items[-1]",out,False,False,True,False
48806_out,"import random

def generate_random_set(n):
    random_set = set()
    while len(random_set) < n:
        random_set.add(random.randint(1,1000))

    return random_set
    
print(generate_random_set(10))",out,True,False,True,False
48867_out,"def flatten_two_dimensional_list(list1):
    flattened_list = [item for sublist in list1 for item in sublist]
    return flattened_list

list1_flattened = flatten_two_dimensional_list(list1)
print(list1_flattened)  # [1, 2, 3, 4, 5, 6, 7, 8, 9]",out,True,False,True,False
48875_out,"temps = {
    'New York': 75,
    'Chicago': 68,
    'Los Angeles': 90,
    'London': 55,
    'Paris': 62,
    'Tokyo': 78
}",out,False,False,True,False
49015_out,"def count_vowels_consonants(string): 
    vowels = 0
    consonants = 0
  
    for i in range(0, len(string)): 
          
        # If a vowel is found, increment the vowel count  
        if (string[i] == 'a' or string[i] == 'e' or string[i] == 'i' or string[i] == 'o' or string[i] == 'u'): 
            vowels = vowels + 1
  
        # If a consonant is found, increment the consonant count 
        else: 
            consonants = consonants + 1
  
    print(""Vowels:"", vowels) 
    print(""Consonants:"", consonants)",out,False,False,True,False
49150_out,"let arr = [1, 2, 3, 4, 5];
let sum = 0;

for (let i=0; i < arr.length; i++){
    sum += arr[i];
}

console.log(sum); // 15",out,True,False,True,False
49154_out,"let fruits = ['apple', 'orange', 'bananas', 'grapes']

for (let i=0; i<fruits.length; i++){
    console.log(fruits[i]); 
}

// Output: 
// apple
// orange
// bananas
// grapes",out,False,False,True,False
49244_out,"def printSum(a, b): 
    print(""The sum of "", a, ""and"", b, ""is"", a+b)
  
# Driver code 
a = 5
b = 10
printSum(a, b)",out,False,False,True,False
49328_out,"arr.forEach(num => {
if (num > 10) {
    console.log(num);
}
});",out,False,False,True,False
49359_out,"<!DOCTYPE html> 
<html> 
    <head>
        <title>Book Reviews</title> 
        <style>
            body { font-family: Arial, sans-serif; font-size: 15px; }
            h1, h3 { color: #0f354a; }
        </style> 
    </head> 
    <body> 
        <h1>Book Reviews</h1>
        <h3>Welcome to the Book Reviews website! Here you will find reviews of all kinds of books. </h3>
        <p> New reviews and articles added every week. </p>
    </body>
</html>",out,False,False,True,False
49411_out,"int count = 0; 
  
for (int i = 0; i < array.length; i++) 
    count++;  
  
// print the total number of elements 
System.out.println(""Total number of elements : "" + count);",out,False,False,True,False
49412_out,"<html>
    <head>
        <title>White House Announces Action Against Syria</title>
    </head>
    <body> 
     <h1>White House Announces Action Against Syria For Chemical Weapon Use</h1>
     <p>Today, the White House announced a new action against the Syrian government for their use of chemical weapons. It is the latest in a series of moves meant to pressure Syria to abandon its alleged use of chemical weapons. The US has imposed economic sanctions, urged the International Criminal Court to investigate, and pushed for political dialogues.  It is unclear what the new action will entail. 
    </p>
    </body>
</html>",out,False,False,True,False
49414_out,"def factorial(num):
    fact = 1
    
    for i in range (1, num+1):
        fact = fact * i
    
    return fact

print(""The factorial of"", num, ""is"", factorial(num))",out,False,False,True,False
49521_out,"<table>
  <tr>
    <th>Car</th>
    <th>Price</th>
  </tr>
  <tr>
    <td>Honda Civic</td>
    <td>$19,000</td>
  </tr>
  <tr>
    <td>Toyota Camry</td>
    <td>$23,000</td>
  </tr>
  <tr>
    <td>Ford Mustang</td>
    <td>$32,000</td>
  </tr>
</table>",out,False,False,True,False
49584_out,"<html>
<head>
  <title>Bar Chart</title>
</head>
<body>
  <canvas id=""barChart"" width=""400"" height=""400""></canvas>
  
  <script>
    const data = {
      ""January"": 20,
      ""February"": 15,
      ""March"": 10,
      ""April"": 25,
      ""May"": 30
    };

    const barChart = document.getElementById(""barChart"").getContext(""2d"");

    let barChartData = { 
      labels: [""January"", ""February"", ""March"", ""April"", ""May""],
      datasets: [
        {   
            label: ""Monthly Data"",
            data: [data[""January""], data[""February""], data[""March""], data[""April""], data[""May""]],
            backgroundColor: ""#FFCE56""
        }
      ]
    };

    let barChartOptions = {
        responsive: true,
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    };

    let myBarChart = new Chart(barChart, {
        type: 'bar',
        data: barChartData,
        options: barChartOptions
    });
  </script>
</body>
</html>",out,False,False,True,False
49592_out,"<html>
<head>
  <title>Pie Chart</title>
</head>
<body>
  <canvas id=""pieChart"" width=""400"" height=""400""></canvas>
  
  <script>
    const data = {
      ""January"": 20,
      ""February"": 15,
      ""March"": 10,
      ""April"": 25,
      ""May"": 30
    };

    const pieChart = document.getElementById(""pieChart"").getContext(""2d"");

    let pieChartData = { 
      labels: [""January"", ""February"", ""March"", ""April"", ""May""],
      datasets: [
        {   
            label: ""Monthly Data"",
            data: [data[""January""], data[""February""], data[""March""], data[""April""], data[""May""]],
            backgroundColor: [
              'rgba(255, 206, 86, 0.8)',
              'rgba(54, 162, 235, 0.8)',
              'rgba(153, 102, 255, 0.8)',
              'rgba(75, 192, 192, 0.8)',
              'rgba(255, 159, 64, 0.8)'
            ]
        }
      ]
    };

    let pieChartOptions = {
        responsive: true
    };

    let myPieChart = new Chart(pieChart, {
        type: 'pie',
        data: pieChartData,
        options: pieChartOptions
    });
  </script>
</body>
</html>",out,False,False,True,False
49806_out,"import random 
rand_string = """" 
  
# generate upper case letters 
# by using ASCII values 
for i in range(2): 
    rand_string += chr(random.randint(65, 90)) 

# generate lower case letters 
# by using ASCII values 
for i in range(4): 
    rand_string += chr(random.randint(97, 122)) 

# generate numbers by using 
# ASCII values 
rand_string += str(random.randint(1, 9)) 

# generate symbols 
# by using ASCII values 
rand_string += chr(random.randint(33, 47)) 
     
# Print the pssword 
print(""Random password is "", 
                rand_string) 

# Output: 
# Random password is yG2{x8g1",out,False,False,True,False
49811_out,"import java.util.Scanner;

class SimpleCalculator {

    public static void main(String[] args) {
	
        Scanner scanner = new Scanner(System.in);
        System.out.print(""Enter first number: "");
        double num1 = scanner.nextDouble();
        System.out.print(""Enter second number: "");
        double num2 = scanner.nextDouble();
 
        System.out.print(""\nWhat operation do you want to perform? \n1. Add \n2. Subtract \n3. Multiply \n4. Divide \nEnter number: "");
        int choice = scanner.nextInt();
 
        double result;
 
        switch (choice) {
            case 1:
                result = num1 + num2;
                break;
 
            case 2:
                result = num1 - num2;
                break;
 
            case 3:
                result = num1 * num2;
                break;
 
            case 4:
                result = num1 / num2;
                break;
            default:
                System.out.println(""Invalid choice"");
                return;
        }
 
        System.out.println(""The result is: ""+result);
    }
}",out,False,False,True,False
49865_out,"for (int i = 1; i <= 20; i++)
{
  if(i % 2 == 1)
    {
     printf(""%d \n"",i);
    }
}",out,False,False,True,False
50013_out,"{
    ""countries"": [
        ""Brazil"",
        ""India"",
        ""China"",
        ""USA""
    ]
}",out,False,False,True,False
50014_out,"# Step 1:  Define a function to sort an array
def alphabetize(arr):
    # Step 2:  Sort the array in alphabetical order
    arr.sort()
    # Step 3:  Return the sorted array
    return arr

# Test
if __name__ == ""__main__"":
    animals = [""elephant"", ""zebra"", ""monkey"", ""ant""]
    print(alphabetize(animals))",out,False,False,True,False
50015_out,"# Define a class to calculate the area of a rectangle
class RectangleAreaCalculator: 
    # Define a method to calculate the area 
    def calculate_area(self, length, width): 
        return length * width 
  
# Test
if __name__ == ""__main__"":
    RAC = RectangleAreaCalculator()
    print(RAC.calculate_area(2, 4))",out,False,False,True,False
50119_out,"<form action="""">
    <input type=""text"" name=""name"" placeholder=""Name"">
    <input type=""text"" name=""last_name"" placeholder=""Last Name"">
    <input type=""email"" name=""email"" placeholder=""Email"">
    <button type=""submit"">Submit</button>    
</form>",out,False,False,True,False
50121_out,"public class Demo {
    public static void main(String[] args) {
        int a = 10;
        int b = 10;
        System.out.println(""Sum of both numbers: "" + (a + b));
    }
}",out,False,False,True,False
50170_out,"def check_prime(n):
    if n < 2:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True",out,False,False,True,False
50501_out,"for i in range(11): 
    print(i)",out,False,False,True,False
50543_out,"numbers = [1,2,3,4,5] 
for num in numbers: 
    print(num)",out,True,False,True,False
50566_out,"def hanoi(n, source, spare, target): 
    if n > 0: 
        # Step 1: Move n-1 disks from Source to Spare. 
        hanoi(n-1, source, target, spare) 
  
        # Step 2: Move the nth disk from Source to Target. 
        target.push(source.pop())
  
        # Step 3: Move n-1 disks from Spare to Target. 
        hanoi(n-1, spare, source, target)",out,False,False,True,False
50578_out,"For example, the following code uses the enumerate() function to loop over a list and print (index, element) tuples, so that the index and the corresponding element can be retrieved:

for index, element in enumerate(my_list): 
    print(index, element)",out,False,False,True,False
50617_out,"def is_prime(num): 
    if num > 1: 
        for i in range(2,num): 
            if (num % i) == 0: 
                return False
        else: 
            return True 
    else: 
        return False
    
# driver code to test the function 
num = 5

if (is_prime(num)): 
    print(num, ""is a prime number"") 
else: 
    print(num, ""is not a prime number"")",out,False,False,True,False
50681_out,"def is_palindrome(string1, string2):
    if len(string1) != len(string2):
        return False
    else:
        for i in range(len(string1)):
            if string1[i] != string2[-i-1]:
                return False
        return True",out,False,False,True,False
50697_out,"WHILE counter is less than limit DO
    PRINT counter
    ADD 5 to counter
END WHILE",out,False,False,True,False
50726_out,"def getOdd(list):
    oddList = []
    for num in list:
        if num % 2 != 0:
            oddList.append(num)
    return oddList",out,False,False,True,False
50741_out,"def hello_world():
    print('Hello, World!')

if __name__ == '__main__':
    hello_world()",out,False,False,True,False
50770_out,"// Set n to the given number
n = givenNumber

// loop from 2 to n
for i = 2 to n
    // set isPrime to true
    isPrime = true
    
    // loop from 2 to i-1
    for j = 2 to i-1
        // check if i is divisible by j
        if i is divisible by j
            // set isPrime to false
            isPrime = false
            // break the inner loop
            break
    end
    // if isPrime is still true, print i
    if isPrime = true
        print(i)
    end 
end",out,False,False,True,False
50779_out,"if (A == true && B == true) {
    // Output is true
} else {
    // Output is false
}",out,False,False,True,False
50808_out,"for i in range(5):
    print(""Hello World"")",out,False,False,True,False
50810_out,"Error: Missing colon after range(10). 
Suggested correction: 
for n in range(10):
    print(n)",out,False,False,True,False
50850_out,"""""""
Remove all vowels from a string
""""""

def remove_vowels(string):
    vowels = set(['a', 'e', 'i', 'o', 'u'])
    result = ''
    for char in string:
        if char not in vowels:
            result += char
    return result
    
if __name__ == '__main__':
    print(remove_vowels('hello world'))",out,False,False,True,False
50875_out,"function printHello() {
    console.log('Hello');
}",out,False,False,True,False
50928_out,"def sort_list(list): 
    for i in range(len(list) - 1): 
        min_index = i 
        for j in range(i + 1, len(list)): 
            if list[min_index] > list[j]: 
                min_index = j 
        list[i], list[min_index] = list[min_index], list[i] 
  
list = [5, 3, 8, 2, 9] 
sort_list(list) 
print(list)",out,True,False,True,False
50931_out,"import nltk
from nltk.tokenize import word_tokenize

def classify_news(news):
    words = word_tokenize(news)
    for word in words:
        if word == ""sports"" or word == ""Politics"" or word == ""Entertainment"" or word == ""Economy"":
            return word
    return ""Other""

news = ""Italy's Richest Man, Count Giulio Zanda, Dies at Age 85""

print(classify_news(news))

Output: Other",out,False,False,True,False
51029_out,"def calculate_average(num1, num2, num3):
    return (num1 + num2 + num3) / 3",out,False,False,True,False
51214_out,"for _ in range(10):
    print(""Hello World"")",out,False,False,True,False
51230_out,"sum = 0

for i in range(3,13):
    sum +=i
 
print(sum)

# Output = 78",out,True,False,True,False
51319_out,"// Loop through the array
for (int i = 0; i < array.length - 1; i++) {
    // Find the index of the minimum element in the subarray
    int minIndex = i;
    for (int j = i + 1; j < array.length; j++) {
        if (array[j] < array[minIndex]) {
            minIndex = j;
        }
    }
    
    // Swap the minimum element with the first element of the subarray
    int temp = array[i];
    array[i] = array[minIndex];
    array[minIndex] = temp;
}

// Array is now sorted in ascending order",out,False,False,True,False
51379_out,"// Create a function to find the greatest of three numbers

// Inputs: three numbers
// Outputs: the greatest of the numbers

// Algorithm

1. Create a function that takes three parameters
2. Initialize a variable to hold the maximum one
3. Check if the first number is greater than the other two
4. If yes, assign it to the maximum one
5. Else, check if the second number is greater than the other two
6. If yes, assign it to the maximum one
7. Else, assign the third number to the maximum one
8. Return the maximum one

Example:

// Function
def find_max(num1,num2,num3):
  max_one = 0
  if num1>num2 and num1>num3:
    max_one = num1
  elif num2>num1 and num2>num3:
    max_one = num2
  else:
    max_one = num3
  return max_one

// Output
find_max(8,4,7)

// Result
 8",out,True,False,True,False
51383_out,"def median(data):
    data.sort()
    if len(data) % 2 == 0:
        n = len(data) // 2
        return (data[n-1] + data[n]) / 2
    else:
        return data[len(data) // 2]",out,False,False,True,False
51426_out,"def display_integers():
    for i in range(1, 51):
        print(i)

display_integers()",out,False,False,True,False
51429_out,"#include <stdio.h>

int main()
{
  char str[20], temp;
  int len, i, j;

  printf(""Enter a word: "");
  scanf(""%s"", str);

  len = strlen(str);
  // Looping to print each word per line 
  for (i=0; i<len; i++)
  {
     for (j=len; j > i; j--)
     {
        printf(""%c"", str[j]);
     }
     printf(""\n"");
  }
  return 0;
}

/*
Output:
apple
pple
ple
le
e
*/",out,False,False,True,False
51591_out,"def transpose(A):
    m = len(A)
    n = len(A[0])
    AT = [[0] * m for _ in range(n)]
    
    for i in range(m):
        for j in range(n):
            AT[j][i] = A[i][j]
    return AT",out,False,False,True,False
51630_out,"Program: 

#include <stdio.h>

int main() 
{
    int n = 5; 
    int i;
 
    for (i = 1; i <= 10; i++) 
    {
        printf(""%d * %d = %d \n"", n, i, n * i); 
    }
 
    return 0;
}

Output:
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50",out,False,False,True,False
51642_out,"updated_matrix = [[6, 9, 12], 
                  [7, 11, 15], 
                  [9, 13, 18]]",out,True,False,True,False
51650_out,"def removeDuplicates(arr): 
    new_arr = [] 
    for i in arr:
        if i not in new_arr: 
            new_arr.append(i) 
  
    return new_arr 
  
removeDuplicates([1, 2, 2, 3, 4, 4, 5]) # Output : [1, 2, 3, 4, 5]",out,True,False,True,False
51774_out,"[
    {""name"": ""John Doe"", ""age"": 25, ""location"": ""New York City""},
    {""name"": ""Jane Doe"", ""age"": 28, ""location"": ""Los Angeles""}
]",out,False,False,True,False
51943_out,"<form action="""">
  <fieldset>
    <legend>State Your Contact Information</legend>
    <label for=""name"">Name: <input type=""text"" name=""name"" placeholder=""What is your name?""></label><br>
    <label for=""email"">Email: <input type=""text"" name=""email"" placeholder=""What is your email?""></label><br>
    <input type=""submit"" value=""Submit"">
  </fieldset>
</form>",out,False,False,True,False
51992_out,"class Container { 
  private String value1;
  private String value2;
  
  public Container(String value1, String value2) { 
    this.value1 = value1; 
    this.value2 = value2; 
  } 
  
  public String getValue1() { 
    return value1; 
  } 
  
  public String getValue2() { 
    return value2; 
  } 
  
  public void setValue1(String value1) { 
    this.value1 = value1; 
  } 
  
  public void setValue2(String value2) { 
    this.value2 = value2; 
  } 
}",out,False,False,True,False
